---
title: Trade Tariff Public API V2 v2
language_tabs:
  - shell: Shell
toc_footers: []
includes: []
search: true
highlight_theme: darkula
---

# Trade Tariff Public API V2

The Trade Tariff Public API provides way to request up-to-date
[UK Trade Tariff](https://gov.uk/trade-tariff) data.

This API accepts HTTP requests and responds with JSON data containing the same
published content as is presented on GOV.UK.

## Base URL

All requests to this API should be prefixed with the following URL:

**https://www.trade-tariff.service.gov.uk/uk/api**

You will need to specify the `Accept` header with the value `application/vnd.hmrc.2.0+json` to get a correctly formatted response.

# Endpoints

## Sections

Sections are numbered I to XXI covering broad groups of products.

## GET /sections

Each section has a `position`, which is its numerical order within the Tariff, and a `section_id`, which is a unique record identifier.

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/sections \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": 1,
      "type": "section",
      "attributes": {
        "position": 1,
        "title": "Live animals; animal products",
        "numeral": "I",
        "chapter_from": "01",
        "chapter_to": "05"
      }
    },
    {
      "id": 2,
      "type": "section",
      "attributes": {
        "position": 2,
        "title": "Vegetable products",
        "numeral": "II",
        "chapter_from": "06",
        "chapter_to": "14"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Sections were found|[Sections](#schemasections)
5XX|Unknown|Unexpected error.|None

## GET /sections/{position}

For this resource, `position` is used to uniquely identify a section and request it from the API.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
position|path|integer|true|The `position` of the section to be retrieved

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/sections/1 \
  -H "Accept: application/vnd.hmrc.2.0+json"
```

**Example Response**

```json
{
  "data": {
    "id": "1",
    "type": "section",
    "attributes": {
      "id": 1,
      "numeral": "I",
      "title": "Live animals; animal products",
      "position": 1,
      "chapter_from": "01",
      "chapter_to": "05",
      "section_note": "* 1\\. Any reference in this section to a particular genus or species of an animal, except where the context otherwise requires, includes a reference to the young of that genus or species.\r\n* 2\\. Except where the context otherwise requires, throughout the nomenclature any reference to 'dried' products also covers products which have been dehydrated, evaporated or freeze-dried.\r\n"
    },
    "relationships": {
      "chapters": {
        "data": [
          {
            "id": "27623",
            "type": "chapter"
          },
          {
            "id": "27809",
            "type": "chapter"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "27623",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": 27623,
        "goods_nomenclature_item_id": 100000000,
        "headings_from": 101,
        "headings_to": 106,
        "description": "LIVE ANIMALS",
        "formatted_description": "Live animals"
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": 27809,
        "goods_nomenclature_item_id": 200000000,
        "headings_from": 101,
        "headings_to": 106,
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal"
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "23",
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Section was found.|[Section](#schemasection)
404|Not Found|Section was not found.|None
5XX|Unknown|Unexpected error.|None

# Chapters

Chapters are numbered 1 to 99 and cover more specific products than sections.

## GET /chapters

Each chapter has a `goods_nomenclature_item_id`, which is a string of ten (10) digits.

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/chapters \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "27623",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": "27623",
        "goods_nomenclature_item_id": "0100000000"
      }
    },
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": "27809",
        "goods_nomenclature_item_id": "0200000000"
      }
    },
    {
      "id": "28373",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": "28373",
        "goods_nomenclature_item_id": "0300000000"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Chapters were found|[Chapters](#schemachapters)
5XX|Unknown|Unexpected error.|None

## GET /chapters/{chapter_id}

Retrieves a chapter, given the first two (2) digits of its `goods_nomenclature_item_id` <p>This should be a zero-padded string of two digits.</p>

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
chapter_id|path|string|true|The `chapter_id` of the chapter to be retrieved, e.g. the first two (2) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of two digits.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/chapters/34 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": {
    "id": "27623",
    "type": "chapter",
    "attributes": {
      "goods_nomenclature_sid": 27623,
      "goods_nomenclature_item_id": "0100000000",
      "description": "LIVE ANIMALS",
      "formatted_description": "Live animals",
      "chapter_note_id": 46,
      "chapter_note": "* 1\\. This chapter covers all live animals except:\r\n  * (a) fish and crustaceans, molluscs and other aquatic invertebrates, of heading 0301, 0306, 0307 or 0308;\r\n  * (b) cultures of micro-organisms and other products of heading 3002; and\r\n  * (c) animals of heading 9508.",
      "section_id": 1
    },
    "relationships": {
      "section": {
        "data": [
          {
            "id": "1",
            "type": "section"
          }
        ]
      },
      "guide": {
        "data": [
          {
            "id": "23",
            "type": "guide"
          }
        ]
      },
      "headings": {
        "data": [
          {
            "id": "27624",
            "type": "heading"
          },
          {
            "id": "27633",
            "type": "heading"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": 23,
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    },
    {
      "id": 27624,
      "type": "heading",
      "attributes": {
        "goods_nomenclature_sid": 27624,
        "goods_nomenclature_item_id": "0101000000",
        "declarable": false,
        "description": "Live horses, asses, mules and hinnies",
        "producline_suffix": "80",
        "leaf": true,
        "description_plain": "Live horses, asses, mules and hinnies",
        "formatted_description": "Live horses, asses, mules and hinnies"
      }
    },
    {
      "id": 27633,
      "type": "heading",
      "attributes": {
        "goods_nomenclature_sid": 27633,
        "goods_nomenclature_item_id": "0102000000",
        "declarable": false,
        "description": "Live bovine animals",
        "producline_suffix": "80",
        "leaf": true,
        "description_plain": "Live bovine animals",
        "formatted_description": "Live bovine animals"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|A chapter was found.|[Chapter](#schemachapter)
404|Not Found|Chapter was not found.|None
5XX|Unknown|Unexpected error.|None

# Headings

Headings are a level below chapters and cover more specific products and product areas.

## GET /headings/{heading_id}

For this resource, `heading_id` is used to uniquely identify a heading and request it from the API. `heading_id` is the first four (4) digits of the heading's `goods_nomenclature_item_id` <p>`heading_id` should be a zero-padded string of four (4) digits.</p>

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
heading_id|path|string|true|The `heading_id` of the heading to be retrieved, e.g. the first four (4) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of four (4) digits.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/headings/0101 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": {
    "id": "27810",
    "type": "heading",
    "attributes": {
      "goods_nomenclature_item_id": "0101000000",
      "description": "Live horses, asses, mules and hinnies",
      "bit_url": "http://ec.europa.eu/taxation_customs/dds2/ebti/ebti_consultation.jsp?Lang=en&nomenc=0201000000&Expand=true",
      "formatted_description": "Live horses, asses, mules and hinnies"
    },
    "relationships": {
      "footnotes": {
        "data": [
          {
            "id": "701",
            "type": "footnote"
          }
        ]
      },
      "section": {
        "data": {
          "id": "1",
          "type": "section"
        }
      },
      "chapter": {
        "data": {
          "id": "27809",
          "type": "chapter"
        }
      },
      "commodities": {
        "data": [
          {
            "id": "27811",
            "type": "commodity"
          },
          {
            "id": "104276",
            "type": "commodity"
          },
          {
            "id": "104254",
            "type": "commodity"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_item_id": "0200000000",
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal",
        "chapter_note": "* 1\\.This chapter does not cover:\r\n  * (a) products of the kinds described in headings 0201 to 0208 or 0210, unfit or unsuitable for human consumption; ... "
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "23",
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    },
    {
      "id": "27811",
      "type": "commodity",
      "attributes": {
        "description": "Carcases and half-carcases",
        "number_indents": 1,
        "goods_nomenclature_item_id": "0201100000",
        "leaf": false,
        "goods_nomenclature_sid": "27811,",
        "formatted_description": "Carcases and half-carcases",
        "description_plain": "Carcases and half-carcases",
        "producline_suffix": "80",
        "parent_sid": null
      },
      "relationships": {
        "overview_measures": {
          "data": [
            {
              "id": "2982599",
              "type": "measure"
            }
          ]
        }
      }
    },
    {
      "id": "2982599",
      "type": "measure",
      "attributes": {
        "id": 2982599,
        "vat": false
      },
      "relationships": {
        "duty_expression": {
          "data": {
            "id": "2982599-duty_expression",
            "type": "duty_expression"
          }
        },
        "measure_type": {
          "data": {
            "id": "109",
            "type": "measure_type"
          }
        }
      }
    },
    {
      "id": "2982599-duty_expression",
      "type": "duty_expression",
      "attributes": {
        "base": "p/st",
        "formatted_base": "<abbr title='Number of items'>p/st</abbr>"
      }
    },
    {
      "id": "109",
      "type": "measure_type",
      "attributes": {
        "description": "Supplementary unit",
        "national": null,
        "measure_type_series_id": null,
        "id": "109"
      }
    },
    {
      "id": "701",
      "type": "footnote",
      "attributes": {
        "code": "TN701",
        "description": "According to  the Council Regulation (EU) No 692/2014sons, entity or body...",
        "formatted_description": "According to  the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it shall be..."
      }
    },
    {
      "id": "1",
      "type": "section",
      "attributes": {
        "numeral": "I",
        "title": "Live animals; animal products",
        "position": 1,
        "section_note": "* 1\\. Any reference in this section to a particular genus or species of an animal..."
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|A heading was found.|[Heading](#schemaheading)
404|Not Found|Heading was not found.|None
5XX|Unknown|Unexpected error.|None

# Subheadings

Subheadings are a level below headings and get specific about certain products. Not all headings have subheadings.

## GET /subheadings/{goods_nomenclature_item_id}-{productline_suffix}

This resource is uniquely identified by a combination of goods_nomenclature_item_id and productline_suffix.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
goods_nomenclature_item_id|path|string|true|The goods_nomenclature_item_id of the subheading to be retrieved, e.g. the first ten (10) digits of the goods_nomenclature_item_id. This should be a zero-padded string of ten (10) digits.
productline_suffix|path|string|true|The two-digit product line suffix of the subheading to retrieve

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/subheadings/0102291000-80 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": {
    "id": "94057",
    "type": "subheading",
    "attributes": {
      "goods_nomenclature_item_id": "0102291000",
      "description": "Of a weight not exceeding 80 kg",
      "formatted_description": "Of a weight not exceeding 80 kg"
    },
    "relationships": {
      "footnotes": {
        "data": [
          {
            "id": "701",
            "type": "footnote"
          }
        ]
      },
      "section": {
        "data": {
          "id": "1",
          "type": "section"
        }
      },
      "chapter": {
        "data": {
          "id": "27809",
          "type": "chapter"
        }
      },
      "commodities": {
        "data": [
          {
            "id": "27811",
            "type": "commodity"
          },
          {
            "id": "104276",
            "type": "commodity"
          },
          {
            "id": "104254",
            "type": "commodity"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_item_id": "0200000000",
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal",
        "chapter_note": "* 1\\.This chapter does not cover:\r\n  * (a) products of the kinds described in headings 0201 to 0208 or 0210, unfit or unsuitable for human consumption; ... "
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "23",
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    },
    {
      "id": "27811",
      "type": "commodity",
      "attributes": {
        "description": "Carcases and half-carcases",
        "number_indents": 1,
        "goods_nomenclature_item_id": "0201100000",
        "leaf": false,
        "goods_nomenclature_sid": "27811,",
        "formatted_description": "Carcases and half-carcases",
        "description_plain": "Carcases and half-carcases",
        "producline_suffix": "80",
        "parent_sid": null
      },
      "relationships": {
        "overview_measures": {
          "data": [
            {
              "id": "2982599",
              "type": "measure"
            }
          ]
        }
      }
    },
    {
      "id": "2982599",
      "type": "measure",
      "attributes": {
        "id": 2982599,
        "vat": false
      },
      "relationships": {
        "duty_expression": {
          "data": {
            "id": "2982599-duty_expression",
            "type": "duty_expression"
          }
        },
        "measure_type": {
          "data": {
            "id": "109",
            "type": "measure_type"
          }
        }
      }
    },
    {
      "id": "2982599-duty_expression",
      "type": "duty_expression",
      "attributes": {
        "base": "p/st",
        "formatted_base": "<abbr title='Number of items'>p/st</abbr>"
      }
    },
    {
      "id": "109",
      "type": "measure_type",
      "attributes": {
        "description": "Supplementary unit",
        "national": null,
        "measure_type_series_id": null,
        "id": "109"
      }
    },
    {
      "id": "701",
      "type": "footnote",
      "attributes": {
        "code": "TN701",
        "description": "According to  the Council Regulation (EU) No 692/2014sons, entity or body...",
        "formatted_description": "According to  the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it shall be..."
      }
    },
    {
      "id": "1",
      "type": "section",
      "attributes": {
        "numeral": "I",
        "title": "Live animals; animal products",
        "position": 1,
        "section_note": "* 1\\. Any reference in this section to a particular genus or species of an animal..."
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|The requested subheading was found.|[Subheading](#schemasubheading)
404|Not Found|The requested subheading was not found.|None
5XX|Unknown|Unexpected error.|None

# Commodities

Commodities are products specified to the greatest extent by the tariff.

## GET /commodities/{id}

This resource represents a single commodity. For this resource, `id` is a `goods_nomenclature_item_id` and it is used to uniquely identify a commodity and request it from the API. <p>`id` should be a string of ten (10) digits.</p>

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
id|path|string|true|The `id` of the commodity to be retrieved. This should be a string of ten (10) digits.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/commodities/0101210000 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": {
    "id": "85314",
    "type": "commodity",
    "attributes": {
      "producline_suffix": "80",
      "description": "Frogs' legs",
      "number_indents": 2,
      "goods_nomenclature_item_id": "0208907000",
      "bti_url": "https://www.gov.uk/guidance/check-what-youll-need-to-get-a-legally-binding-decision-on-a-commodity-code",
      "formatted_description": "Frogs' legs",
      "description_plain": "Frogs' legs",
      "consigned": false,
      "consigned_from": null,
      "basic_duty_rate": null,
      "meursing_code": false,
      "declarable": true
    },
    "relationships": {
      "footnotes": {
        "data": [
          {
            "id": "701",
            "type": "footnote"
          }
        ]
      },
      "section": {
        "data": {
          "id": "1",
          "type": "section"
        }
      },
      "chapter": {
        "data": {
          "id": "27809",
          "type": "chapter"
        }
      },
      "heading": {
        "data": {
          "id": "28267",
          "type": "heading"
        }
      },
      "ancestors": {
        "data": [
          {
            "id": "28275",
            "type": "commodity"
          }
        ]
      },
      "import_measures": {
        "data": [
          {
            "id": "20098001",
            "type": "measure"
          }
        ]
      },
      "export_measures": {
        "data": [
          {
            "id": "20180492",
            "type": "measure"
          }
        ]
      },
      "import_trade_summary": {
        "data": [
          {
            "id": "4176a8c3415ef099c881ffde5d69f861",
            "type": "import_trade_summary"
          }
        ]
      }
    },
    "meta": {
      "duty_calculator": {
        "applicable_additional_codes": {},
        "applicable_measure_units": {},
        "applicable_vat_options": {
          "VATZ": "VAT zero rate",
          "VAT": "Value added tax (20.0%)"
        },
        "entry_price_system": false,
        "meursing_code": false,
        "source": "uk",
        "trade_defence": false,
        "zero_mfn_duty": false
      }
    }
  },
  "included": [
    {
      "id": "1",
      "type": "section",
      "attributes": {
        "numeral": "I",
        "title": "Live animals; animal products",
        "position": 1,
        "section_note": "1. Any reference in this section to a particular genus or species of an animal, except where the context otherwise requires, includes a reference to the young of that genus or species.\r\n\r\n2. Except where the context otherwise requires, throughout the classification any reference to 'dried' products also covers products which have been dehydrated, evaporated or freeze-dried.\r\n"
      }
    },
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_item_id": "0200000000",
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal",
        "chapter_note": "1. This chapter does not cover:\r\n\r\n   a) products of the kinds described in headings [0201](/headings/0201) to [0208](/headings/0208) or [0210](/headings/0210), unfit or unsuitable for human consumption;\r\n\r\n   b) edible, non-living insects (heading [0410](/headings/0410))\r\n\r\n   c) guts, bladders or stomachs of animals (heading [0504](/headings/0504)) or animal blood (heading [0511](/headings/0511) or [3002](/headings/3002)); or\r\n\r\n   d) animal fat, other than products of heading [0209](/headings/0209) ([Chapter 15](/chapters/15)).\r\n\r\n### Additional chapter notes\r\n\r\n1. A. The following expressions have the meanings hereby assigned to them:\r\n\r\n   (a) ‘carcases of bovine animals’, for the purposes of subheadings [0201 10](/subheadings/0201100000-80) and [0202 10](/subheadings/0202100000-80): whole carcases of the slaughtered animals after having been bled, eviscerated and skinned, imported with or without the heads, with or without the feet and with or without the other offal’s attached. Where carcases are imported without the heads, the latter must have been separated from the carcase at the atloido-occipital joint. When imported without the feet, the latter must have been cut off at the carpo-metacarpal or tarso-metatarsal joints; ‘carcase’ includes the front part of the carcase comprising all the bones and the scrag, neck and shoulder, having more than 10 pairs of ribs;\r\n\r\n   (b) ‘half-carcases of bovine animals’, for the purposes of subheadings [0201 10](/subheadings/0201100000-80) and [0202 10](/subheadings/0202100000-80): the product resulting from the symmetrical division of the whole carcase through the centre of each cervical, dorsal, lumbar and sacral vertebra and through the centre of the sternum and of the ischio-pubic symphysis; ‘halfcarcase’ includes the front part of the half-carcase comprising all the bones and the scrag, neck and shoulder, having more than 10 ribs;\r\n\r\n   (c) ‘compensated quarters’, for the purposes of subheadings [0201 20 20](/subheadings/0201202000-80) and [0202 20 10](/subheadings/0202201000-80): portions composed of either:\r\n\r\n      - forequarters comprising all the bones and the scrag, neck and shoulder, and cut at the tenth rib; and hindquarters comprising all the bones and the thigh and sirloin, and cut at the third rib, or\r\n\r\n      - forequarters comprising all the bones and the scrag, neck and shoulder, and cut at the fifth rib, with the whole of the flank and breast attached; and hindquarters comprising all the bones and the thigh and sirloin and cut at the eighth cut rib.\r\n      The forequarters and the hindquarters constituting ‘compensated quarters’ must be presented to customs at the same time and in equal numbers, and the total weight of the forequarters must be the same as that of the hindquarters; however, a difference between the weights of the two parts of the consignment is allowed, provided that this does not exceed 5 % of the weight of the heavier part (forequarters or hindquarters);\r\n\r\n   (d) ‘unseparated forequarters’, for the purposes of subheadings [0201 20 30](/subheadings/0201203000-80) and [0202 20 30](/subheadings/0202203000-80): the front part of a carcase, comprising all the bones and the scrag, neck and shoulder, with a minimum of four pairs of ribs and a maximum of 10 pairs of ribs (the first four pairs of ribs must be whole, the others may be cut), with or without the thin flank;\r\n\r\n   (e) ‘separated forequarters’, for the purposes of subheadings [0201 20 30](/subheadings/0201203000-80) and [0202 20 30](/subheadings/0202203000-80): the front part of a half-carcase, comprising all the bones and the scrag, neck and shoulder, with a minimum of four ribs and a maximum of 10 ribs (the first four ribs must be whole, the others may be cut), with or without the thin flank;\r\n\r\n   (f) ‘unseparated hindquarters’, for the purposes of subheadings [0201 20 50](/subheadings/0201205000-80) and [0202 20 50](/subheadings/0202205000-80): the rear part of a carcase comprising all the bones and the thigh and sirloin, including the fillet, with a minimum of three pairs of whole or cut ribs, with or without the shank and with or without the thin flank;\r\n\r\n   (g) ‘separated hindquarters’, for the purposes of subheadings [0201 20 50](/subheadings/0201205000-80) and [0202 20 50](/subheadings/0202205000-80): the rear part of a half-carcase, comprising all the bones and the thigh and sirloin, including the fillet, with a minimum of three whole or cut ribs, with or without the shank and with or without the thin flank;\r\n\r\n   (h) 1. ‘crop’ and ‘chuck and blade’ cuts, for the purposes of subheading [0202 30 50](/subheadings/0202305000-80): the dorsal part of the forequarter, including the upper part of the shoulder, obtained from a forequarter with a minimum of four ribs and a maximum of 10 ribs by a cut along a straight line through the point where the first rib joins the first sternal segment to the point of reflection of the diaphragm on the tenth rib;\r\n\r\n2. ‘brisket’ cut, for the purposes of subheading [0202 30 50](/subheadings/0202305000-80): the lower part of the forequarter, comprising the brisket navel end and the brisket point end.\r\n\r\n   B. Products covered by additional chapter notes 1(A)(a) to (g) to this chapter may be presented with or without the vertebral column.\r\n\r\n   C. In determining the number of whole or cut ribs referred to in additional chapter note 1(A), only those attached to the vertebral column are to be taken into consideration. If the vertebral column has been removed, only the whole or cut ribs which otherwise would have been directly attached to the vertebral column are to be taken into consideration.\r\n\r\n   2. A. The following expressions have the meanings hereby assigned to them:\r\n\r\n      (a) ‘carcases or half-carcases’, for the purposes of subheadings [0203 11 10](/subheadings/0203111000-80) and [0203 21 10](/subheadings/0203211000-80): slaughtered pigs, in the form of carcases of domestic swine which have been bled and eviscerated and from which the bristles and hooves have been removed. Half-carcases are derived from whole carcases by division through each cervical, dorsal, lumbar and sacral vertebra, through or along the sternum and through the ischio-pubic symphysis. These carcases or half-carcases may be with or without head, with or without the chaps, feet, flare fat, kidneys, tail or diaphragm. Half-carcases may be with or without spinal cord, brain or tongue. Carcases and half-carcases of sows may be with or without udders (mammary glands);\r\n\r\n      (b) ‘hams’ (legs), for the purposes of subheadings [0203 12 11](/subheadings/0203121100-80), [0203 22 11](/subheadings/0203221100-80), [0210 11 11](/subheadings/0210111100-80) and [0210 11 31](/subheadings/0210113100-80): the posterior (caudal) part of the half-carcase, including bones, with or without the foot, shank, rind or subcutaneous fat. The ham (leg) is separated from the rest of the half-carcase, so that it includes, at most, the last lumbar vertebra;\r\n\r\n      (c) ‘fore-ends’, for the purposes of subheadings [0203 19 11](/subheadings/0203191100-80), [0203 29 11](/subheadings/0203291100-80), [0210 19 30](/subheadings/0210193000-80) and [0210 19 60](/subheadings/0210196000-80): the anterior (cranial) part of the half-carcase without the head, with or without the chaps, including bones, with or without foot, shank, rind or subcutaneous fat. The fore-end is separated from the rest of the half-carcase, so that it includes, at most, the fifth dorsal vertebra. The upper (dorsal) part of the fore-end, whether or not containing the blade-bone and attached muscles (neckend in fresh or collar in salted condition), is considered a cut of the loin, when it is separated from the lower (ventral) part of the fore-end, at most by a cut just below the vertebral column;\r\n\r\n      (d) ‘shoulders’, for the purposes of subheadings [0203 12 19](/subheadings/0203121900-80), [0203 22 19](/subheadings/0203221900-80), [0210 11 19](/subheadings/0210111900-80) and [0210 11 39](/subheadings/0210113900-80): the lower part of the fore-end whether or not containing the blade-bone and attached muscles, including bones, with or without foot, shank, rind or subcutaneous fat. The blade-bone and attached muscles, presented separately, remain classified in this subheading as a part of the shoulder;\r\n\r\n      (e) ‘loins’, for the purposes of subheadings [0203 19 13](/subheadings/0203191300-80), [0203 29 13](/subheadings/0203291300-80), [0210 19 40](/subheadings/0210194000-80) and [0210 19 70](/subheadings/0210197000-80): the upper part of the half-carcase, extending from the first cervical vertebra to the caudal vertebrae, including bones, with or without the tenderloin, blade-bone, subcutaneous fat or rind. The loin is separated from the lower part of the half-carcase by a cut just below the vertebral column;\r\n\r\n      (f) ‘bellies’, for the purposes of subheadings [0203 19 15](/subheadings/0203191500-80), [0203 29 15](/subheadings/0203291500-80), [0210 12 11](/subheadings/0210121100-80) and [0210 12 19](/subheadings/0210121900-80): the lower part of the half-carcase situated between the ham (leg) and the shoulder, commonly known as ‘streaky’, with or without bones, but with the rind and the subcutaneous fat;\r\n\r\n      (g) ‘bacon sides’, for the purposes of subheading [0210 19 10](/subheadings/0210191000-80): the pig half-carcase without the head, cheek, chap, feet, tail, flare fat, kidney, tenderloin, blade-bone, sternum, vertebral column, pelvic bone and diaphragm;\r\n\r\n      (h) ‘spencers’, for the purposes of subheading [0210 19 10](/subheadings/0210191000-80): the bacon side without the ham, whether or not boned;\r\n\r\n      (ij) ‘three-quarter sides’, for the purposes of subheading [0210 19 20](/subheadings/0210192000-80): the bacon side without the fore-end, whether or not boned;\r\n\r\n      (k) ‘middles’, for the purposes of subheading [0210 19 20](/subheadings/0210192000-80): the bacon side without the ham and the fore-end, whether or not boned. The subheading also includes cuts of middles containing tissue of loin and belly in natural proportion to the entire middles.\r\n\r\n   B. The parts of the cuts defined in paragraph 2(A)(f) fall in the same subheadings, only if they contain rind and subcutaneous fat. If the cuts falling in subheadings [0210 11 11](/subheadings/0210111100-80), [0210 11 19](/subheadings/0210111900-80), [0210 11 31](/subheadings/0210113100-80), [0210 11 39](/subheadings/0210113900-80), [0210 19 30](/subheadings/0210193000-80) and [0210 19 60](/subheadings/0210196000-80) are derived from a bacon side from which the bones indicated under paragraph 2(A)(g) have already been removed, the lines of cutting must follow those defined under paragraph 2(A)(b), (c) and (d) accordingly; in any case, these cuts or parts thereof must contain bones.\r\n\r\n   C. Subheadings [0206 49 00](/subheadings/0206490000-80) and [0210 99 49](/subheadings/0210994900-80), include, in particular, heads or halves of heads of domestic swine, with or without the brains, cheeks or tongues, and parts thereof. The head is separated from the rest of the half-carcase as follows:\r\n\r\n      - by a straight cut parallel to the cranium; or\r\n\r\n      - by a cut parallel to the cranium up to the level of the eyes and then inclined to the front of the head, thereby causing the chaps to remain attached to the half-carcase. The cheeks, snouts and ears as well as the meat attached to the head, particularly to the rear part, are considered parts of heads. \r\n\r\n   However, the cuts of boneless meat of the fore-end, presented alone (jowls, chaps, or chaps and jowls together), fall in subheading [0203 19 55](/subheadings/0203195500-80), [0203 29 55](/subheadings/0203295500-80), [0210 19 50](/subheadings/0210195000-80) or [0210 19 81](/subheadings/0210198100-80), as the case may be.\r\n\r\n   D. For the purposes of subheadings [0209 10 11](/subheadings/0209101100-80) and [0209 10 19](/subheadings/0209101900-80), ‘subcutaneous pig fat’ has the meaning of the fatty tissue which accumulates under the rind of the pig and adheres to it, irrespective of the part of the pig from which it comes; in any case, the weight of the fatty tissue must exceed the weight of the rind. These subheadings also include subcutaneous pig fat from which the rind has been removed.\r\n\r\n   E. For the purposes of subheadings [0210 11 31](/subheadings/0210113100-80), [0210 11 39](/subheadings/0210113900-80), [0210 12 19](/subheadings/0210121900-80) and [0210 19 60](/subheadings/0210196000-80) to [0210 19 89](/subheadings/0210198900-80), products in which the water/protein ratio in the meat (nitrogen content × 6.25) is 2.8 or less is considered as ‘dried or smoked’. The nitrogen content is determined in accordance with ISO method 937-1978. \r\n\r\n3. A. For the purposes of heading 0204, the following expressions have the meanings hereby assigned to them:\r\n\r\n      (a) ‘carcases’, for the purposes of subheadings [0204 10](/subheadings/0204100000-80), [0204 21](/subheadings/0204210000-80), [0204 30](/subheadings/0204300000-80), [0204 41](/subheadings/0204410000-80), [0204 50 11](/subheadings/0204501100-80) and [0204 50 51](/subheadings/0204505100-80): whole carcases of the slaughtered animals after having been bled, eviscerated and skinned, imported with or without the heads, with or without the feet and with or without the other offal’s attached. Where carcases are imported without the heads, the latter must have been separated from the carcase at the atloidooccipital joint. When imported without the feet, the latter must have been cut off at the carpo-metacarpal or tarso-metatarsal joints;\r\n\r\n      (b) ‘half-carcases’, for the purposes of subheadings [0204 10](/subheadings/0204100000-80), [0204 21](/subheadings/0204210000-80), [0204 30](/subheadings/0204300000-80), [0204 41](/subheadings/0204410000-80), [0204 50 11](/subheadings/0204501100-80) and [0204 50 51](/subheadings/0204505100-80): the product resulting from the symmetrical division of the whole carcase through the centre of each cervical, dorsal, lumbar and sacral vertebra and through the centre of the sternum and of the ischiopubic symphysis;\r\n\r\n      (c) ‘short-forequarters’, for the purposes of subheadings [0204 22 10](/subheadings/0204221000-80), [0204 42 10](/subheadings/0204421000-80), [0204 50 13](/subheadings/0204501300-80) and [0204 50 53](/subheadings/0204505300-80): the anterior part of the carcase, with or without the breast, including all the bones and the shoulders, scrag and middle neck, cut at right angles to the backbone, with a minimum of five and a maximum of seven pairs of whole or cut ribs;\r\n\r\n      (d) ‘short-forequarters’, for the purposes of subheadings [0204 22 10](/subheadings/0204221000-80), [0204 42 10](/subheadings/0204421000-80), [0204 50 13](/subheadings/0204501300-80) and [0204 50 53](/subheadings/0204505300-80): the anterior part of the half-carcase, with or without the breast, including all the bones and the shoulder, scrag and middle neck, cut at right angles to the backbone, with a minimum of five and a maximum of seven whole or cut ribs;\r\n\r\n      (e) ‘chines and/or best ends’, for the purposes of subheadings [0204 22 30](/subheadings/0204223000-80), [0204 42 30](/subheadings/0204423000-80), [0204 50 15](/subheadings/0204501500-80) and [0204 50 55](/subheadings/0204505500-80): the remaining part of the carcase after the legs and short-forequarters have been removed, with or without the kidneys; the chines, when separated from the best ends, must include a minimum of five lumbar vertebrae; the best ends, when separated from the chines, must include a minimum of five pairs of whole or cut ribs;\r\n\r\n      (f) ‘chine and/or best end’, for the purposes of subheadings [0204 22 30](/subheadings/0204223000-80), [0204 42 30](/subheadings/0204423000-80), [0204 50 15](/subheadings/0204501500-80) and [0204 50 55](/subheadings/0204505500-80): the remaining part of the half-carcase after the legs and short-forequarters have been removed, with or without the kidney; the chine, when separated from the best end, must include a minimum of five lumbar vertebrae; the best end, when separated from the chine, must include a minimum of five whole or cut ribs;\r\n\r\n      (g) ‘legs’, for the purposes of subheadings [0204 22 50](/subheadings/0204225000-80), [0204 42 50](/subheadings/0204425000-80), [0204 50 19](/subheadings/0204501900-80) and [0204 50 59](/subheadings/0204505900-80): the rear part of the carcase, comprising all the bones and the legs and cut at right angles to the backbone at the sixth lumbar vertebra just under the ilium or at the fourth sacral vertebra through the ilium anterior to the ischiopubic symphysis;\r\n\r\n      (h) ‘legs’, for the purposes of subheadings [0204 22 50](/subheadings/0204225000-80), [0204 42 50](/subheadings/0204425000-80), [0204 50 19](/subheadings/0204501900-80) and [0204 50 59](/subheadings/0204505900-80): the rear part of the half-carcase comprising all the bones and the leg cut at right angles to the backbone at the sixth lumbar vertebra just under the ilium or at the fourth sacral vertebra through the ilium anterior to the ischio-pubic symphysis.\r\n\r\n   B. In determining the number of whole or cut ribs referred to in paragraph 3 A, only those attached to the backbone are to be taken into consideration.\r\n\r\n4. The following expressions have the meanings hereby assigned to them:\r\n\r\n   (a) ‘poultry cuts, with bone in’, for the purposes of subheadings [0207 13 20](/subheadings/0207132000-80) to [0207 13 60](/subheadings/0207136000-80), [0207 14 20](/subheadings/0207142000-80) to [0207 14 60](/subheadings/0207146000-80), [0207 26 20](/subheadings/0207262000-80) to [0207 26 70](/subheadings/0207267000-80), [0207 27 20](/subheadings/0207272000-80) to [0207 27 70](/subheadings/0207277000-80), [0207 44 21](/subheadings/0207442100-80) to [0207 44 61](/subheadings/0207446100-80), [0207 45 21](/subheadings/0207452100-80) to [0207 45 61](/subheadings/0207456100-80), [0207 54 21](/subheadings/0207542100-80) to [0207 54 61](/subheadings/0207546100-80), [0207 55 21](/subheadings/0207552100-80) to [0207 55 61](/subheadings/0207556100-80) and [0207 60 21](/subheadings/0207602100-80) to [0207 60 61](/subheadings/0207606100-80): the cuts specified therein, including all bones. Poultry cuts as referred to in (a) which have been partly boned fall in subheading [0207 13 70](/subheadings/0207137000-80), [0207 14 70](/subheadings/0207147000-80), [0207 26 80](/subheadings/0207268000-80), [0207 27 80](/subheadings/0207278000-80), [0207 44 71](/subheadings/0207447100-80), [0207 44 81](/subheadings/0207448100-80), [0207 45 71](/subheadings/0207457100-80), [0207 45 81](/subheadings/0207458100-80), [0207 54 71](/subheadings/0207547100-80), [0207 54 81](/subheadings/0207548100-80), [0207 55 71](/subheadings/0207557100-80), [0207 55 81](/subheadings/0207558100-80) and [0207 60 81](/subheadings/0207608100-80);\r\n\r\n   (b) ‘halves’, for the purposes of subheadings [0207 13 20](/subheadings/0207132000-80), [0207 14 20](/subheadings/0207142000-80), [0207 26 20](/subheadings/0207262000-80), [0207 27 20](/subheadings/0207272000-80), [0207 44 21](/subheadings/0207442100-80), [0207 45 21](/subheadings/0207452100-80), [0207 54 21](/subheadings/0207542100-80), [0207 55 21](/subheadings/0207552100-80) and [0207 60 21](/subheadings/0207602100-80): halves of poultry carcases, obtained by a longitudinal cut in a plane along the sternum and the backbone;\r\n\r\n   (c) ‘quarters’, for the purposes of subheadings [0207 13 20](/subheadings/0207132000-80), [0207 14 20](/subheadings/0207142000-80), [0207 26 20](/subheadings/0207262000-80), [0207 27 20](/subheadings/0207272000-80), [0207 44 21](/subheadings/0207442100-80), [0207 45 21](/subheadings/0207452100-80), [0207 54 21](/subheadings/0207542100-80), [0207 55 21](/subheadings/0207552100-80) and [0207 60 21](/subheadings/0207602100-80): leg quarters or breast quarters, obtained by a transversal cut of a half;\r\n\r\n   (d) ‘whole wings, with or without tips’, for the purposes of subheadings [0207 13 30](/subheadings/0207133000-80), [0207 14 30](/subheadings/0207143000-80), [0207 26 30](/subheadings/0207263000-80), [0207 27 30](/subheadings/0207273000-80), [0207 44 31](/subheadings/0207443100-80), [0207 45 31](/subheadings/0207453100-80), [0207 54 31](/subheadings/0207543100-80), [0207 55 31](/subheadings/0207553100-80) and [0207 60 31](/subheadings/0207603100-80): poultry cuts, consisting of the humerus, radius and ulna, together with the surrounding musculature. The tip, including the carpal bones, may or may not have been removed. The cuts must have been made at the joints;\r\n\r\n   (e) ‘breasts’, for the purposes of subheadings [0207 13 50](/subheadings/0207135000-80), [0207 14 50](/subheadings/0207145000-80), [0207 26 50](/subheadings/0207265000-80), [0207 27 50](/subheadings/0207275000-80), [0207 44 51](/subheadings/0207445100-80), [0207 45 51](/subheadings/0207455100-80), [0207 54 51](/subheadings/0207545100-80), [0207 55 51](/subheadings/0207555100-80) and [0207 60 51](/subheadings/0207605100-80): poultry cuts, consisting of the sternum and the ribs distributed on both sides of it, together with the surrounding musculature;\r\n\r\n   (f) ‘legs’, for the purposes of subheadings [0207 13 60](/subheadings/0207136000-80), [0207 14 60](/subheadings/0207146000-80), [0207 44 61](/subheadings/0207446100-80), [0207 45 61](/subheadings/0207456100-80), [0207 54 61](/subheadings/0207546100-80), [0207 55 61](/subheadings/0207556100-80) and [0207 60 61](/subheadings/0207606100-80): poultry cuts consisting of the femur, tibia and fibula, together with the surrounding musculature. The two cuts must have been made at the joints;\r\n\r\n   (g) ‘turkey drumsticks’, for the purposes of subheadings [0207 26 60](/subheadings/0207266000-80) and [0207 27 60](/subheadings/0207276000-80): turkey cuts, consisting of the tibia and fibula, together with the surrounding musculature. The two cuts must have been made at the joints;\r\n\r\n   (h) ‘turkey legs, other than drumsticks’, for the purposes of subheadings [0207 26 70](/subheadings/0207267000-80) and [0207 27 70](/subheadings/0207277000-80): turkey cuts, consisting of the femur together with the surrounding musculature or of the femur, tibia and fibula, together with the surrounding musculature. The two cuts must have been made at the joints;\r\n\r\n   (ij) ‘duck or goose paletots’, for the purposes of subheadings [0207 44 71](/subheadings/0207447100-80), [0207 45 71](/subheadings/0207457100-80), [0207 54 71](/subheadings/0207547100-80) and [0207 55 71](/subheadings/0207557100-80): ducks or geese, plucked and completely drawn, without heads or feet, with carcase bones (breastbone, ribs, backbone and sacrum) removed, but with the femurs, tibias and humeri.\r\n\r\n5. (a) Uncooked seasoned meats fall in [Chapter 16](/chapters/16). ‘Seasoned meat’ is uncooked meat that has been seasoned, either in depth or over the whole surface of the product, with seasoning either visible to the naked eye or clearly distinguishable by taste.\r\n\r\n   (b) Products falling in heading 0210 to which seasoning has been added during the process of preparation remain classified therein, provided that the addition of seasoning has not changed their character.\r\n\r\n6. For the purposes of subheadings [0210 11](/subheadings/0210110000-80) to [0210 93](/subheadings/0210930000-80), the term ‘meat and edible meat offal, salted or in brine’ means meat and edible meat offal deeply and homogeneously impregnated with salt in all parts and having a total salt content by weight of 1.2% or more, provided that it is the salting which ensures the long-term preservation. For the purposes of subheading [0210 99](/subheadings/0210990000-80), the term ‘meat and edible meat offal, salted or in brine’ means meat and edible meat offal deeply and homogeneously impregnated with salt in all parts and having a total salt content by weight of 1.2% or more.\r\n"
      },
      "relationships": {
        "guides": {
          "data": []
        }
      }
    },
    {
      "id": "701",
      "type": "footnote",
      "attributes": {
        "code": "TN701",
        "description": "According to the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it\nshall be prohibited to import into European Union goods originating in\nCrimea or Sevastopol.<br>The prohibition shall not apply in respect of:\n<br>(a) the execution until 26 September 2014, of trade contracts\nconcluded before 25 June 2014, or of ancillary contracts necessary for\nthe execution of such contracts, provided that the natural or legal\npersons, entity or body seeking to perform the contract have notified,\nat least 10 working days in advance, the activity or transaction to the\ncompetent authority of the Member State in which they are established.\n<br>(b) goods originating in Crimea or Sevastopol which have been made\navailable to the Ukrainian authorities for examination, for which\ncompliance with the conditions conferring entitlement to preferential\norigin has been verified and for which a certificate of origin has been\nissued in accordance with Regulation (EU) No 978/2012 and Regulation\n(EU) No 374/2014 or in accordance with the EU-Ukraine Association\nAgreement.",
        "formatted_description": "According to the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it\nshall be prohibited to import into European Union goods originating in\nCrimea or Sevastopol.<br>The prohibition shall not apply in respect of:\n<br>(a) the execution until 26 September 2014, of trade contracts\nconcluded before 25 June 2014, or of ancillary contracts necessary for\nthe execution of such contracts, provided that the natural or legal\npersons, entity or body seeking to perform the contract have notified,\nat least 10 working days in advance, the activity or transaction to the\ncompetent authority of the Member State in which they are established.\n<br>(b) goods originating in Crimea or Sevastopol which have been made\navailable to the Ukrainian authorities for examination, for which\ncompliance with the conditions conferring entitlement to preferential\norigin has been verified and for which a certificate of origin has been\nissued in accordance with Regulation (EU) No 978/2012 and Regulation\n(EU) No 374/2014 or in accordance with the EU-Ukraine Association\nAgreement."
      }
    },
    {
      "id": "20098001-duty_expression",
      "type": "duty_expression",
      "attributes": {
        "base": "",
        "formatted_base": ""
      }
    },
    {
      "id": "410",
      "type": "measure_type",
      "attributes": {
        "description": "Veterinary control",
        "measure_type_series_id": "B",
        "measure_component_applicable_code": 2,
        "order_number_capture_code": 2,
        "trade_movement_code": 0,
        "validity_end_date": null,
        "validity_start_date": "2012-04-01T00:00:00.000Z",
        "id": "410",
        "measure_type_series_description": "Entry into free circulation or exportation subject to conditions"
      }
    },
    {
      "id": "C2100270",
      "type": "legal_act",
      "attributes": {
        "validity_start_date": "2021-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "officialjournal_number": "1",
        "officialjournal_page": 1,
        "published_date": "2021-01-01",
        "regulation_code": "C0027/21",
        "regulation_url": "",
        "description": null
      }
    },
    {
      "id": "20060275",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "UN/EDIFACT certificates: Common Health Entry Document for Products\n(CHED-P) (as set out in Part 2, Section B of Annex II to Commission\nImplementing Regulation (EU) 2019/1715 (OJ L 261)) as transposed into UK\nLaw.",
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "N853",
        "duty_expression": "",
        "guidance_cds": "- Enter GBCHDyyyy. and the reference number of the CHED-P.\n\n\n- A separate N853 entry in DE 2/3 is required for each individual CHED-P\n\n\n- Note yyyy. represents the year in which the licence was issued, for\nexample GBCHD2021.\n\n\n- The '.' after the year is part of the licence completion requirements\n\n\n- Use one of the following [document status\ncodes](https://www.gov.uk/government/publications/uk-trade-tariff-document-status-codes-for-harmonised-declarations/uk-trade-tariff-document-status-codes-for-harmonised-declarations):\n<abbr title='Document attached - exhausted by (or only applies to) this\nentry (document returned to the trader)'>AE</abbr>, <abbr\ntitle='Document held by authorised trader - already attributed on\nsimplified declaration'>JA</abbr>, <abbr title='Document held by\nauthorised trader - exhausted by (or only applies to) this\nentry'>JE</abbr>, <abbr title='Lodged previously - exhausted by (or only\napplies to) this entry'>LE</abbr>, <abbr title='Lodged previously - part\nuse (applies to this and other entries)'>LP</abbr>, <abbr\ntitle='Ex-heading goods for which the document does not apply'>XX</abbr>",
        "measure_condition_class": "document",
        "monetary_unit_abbreviation": null,
        "requirement": "UN/EDIFACT certificates: UN/EDIFACT certificates: Common Health Entry\nDocument for Products (CHED-P) (as set out in Part 2, Section B of Annex\nII to Commission Implementing Regulation (EU) 2019/1715 (OJ L 261)) as\ntransposed into UK Law."
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060277",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "Exemption by virtue of Article 7 of Commission Delegated Regulation\n2019/2122 (Goods which form part of passengers' personal luggage and are\nintended for personal consumption or use)",
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "Y058",
        "duty_expression": "",
        "guidance_cds": "- Complete the statement: 'Exempt personal consignment' in the Document\nIdentifier (Second Component).\n\n\n- Document Reason (Fourth Component) must be left blank.\n\n\n- Use of this code constitutes a legal declaration that the goods meet\nthe criteria for an exemption under Article 7 of Commission Delegated\nRegulation 2019/2122 (Goods which form part of passengers personal\nluggage and are intended for personal consumption or use).\n\n\n- Sufficient evidence must be held to demonstrate eligibility for this\nexemption which must be produced on demand.\n\n\n- No document status code is required.",
        "measure_condition_class": "exemption",
        "monetary_unit_abbreviation": null,
        "requirement": "Particular provisions: Exemption by virtue of Article 7 of Commission\nDelegated Regulation 2019/2122 (Goods which form part of passengers'\npersonal luggage and are intended for personal consumption or use)"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060278",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "Exemption by virtue of Articles 3 and 4 of regulation 2019/2122 (animals\nintended for scientific purposes, research and diagnostic samples)",
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "C084",
        "duty_expression": "",
        "guidance_cds": "- Complete the statement 'regulation 2019/2122 exempt'.\n\n\n- Use of this code constitutes a legal declaration that the goods are\nnot concerned by Commission Delegated Regulation (EU) 2019/2122 adopting\na list of animals and goods exempt from official controls at border\ncontrol posts.\n\n\n- Sufficient evidence must be held in records to demonstrate eligibility\nfor this waiver which must be produced on demand.\n\n\n- No document status code is required.",
        "measure_condition_class": "unknown",
        "monetary_unit_abbreviation": null,
        "requirement": "Other certificates: Exemption by virtue of Articles 3 and 4 of\nregulation 2019/2122 (animals intended for scientific purposes, research\nand diagnostic samples)"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060281",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export not allowed after control",
        "action_code": "09",
        "certificate_description": null,
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "",
        "duty_expression": "",
        "guidance_cds": null,
        "measure_condition_class": "negative",
        "monetary_unit_abbreviation": null,
        "requirement": null
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060274",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "UN/EDIFACT certificates: Common Health Entry Document for Products\n(CHED-P) (as set out in Part 2, Section B of Annex II to Commission\nImplementing Regulation (EU) 2019/1715 (OJ L 261)) as transposed into UK\nLaw.",
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "N853",
        "duty_expression": "",
        "guidance_cds": "- Enter GBCHDyyyy. and the reference number of the CHED-P.\n\n\n- A separate N853 entry in DE 2/3 is required for each individual CHED-P\n\n\n- Note yyyy. represents the year in which the licence was issued, for\nexample GBCHD2021.\n\n\n- The '.' after the year is part of the licence completion requirements\n\n\n- Use one of the following [document status\ncodes](https://www.gov.uk/government/publications/uk-trade-tariff-document-status-codes-for-harmonised-declarations/uk-trade-tariff-document-status-codes-for-harmonised-declarations):\n<abbr title='Document attached - exhausted by (or only applies to) this\nentry (document returned to the trader)'>AE</abbr>, <abbr\ntitle='Document held by authorised trader - already attributed on\nsimplified declaration'>JA</abbr>, <abbr title='Document held by\nauthorised trader - exhausted by (or only applies to) this\nentry'>JE</abbr>, <abbr title='Lodged previously - exhausted by (or only\napplies to) this entry'>LE</abbr>, <abbr title='Lodged previously - part\nuse (applies to this and other entries)'>LP</abbr>, <abbr\ntitle='Ex-heading goods for which the document does not apply'>XX</abbr>",
        "measure_condition_class": "document",
        "monetary_unit_abbreviation": null,
        "requirement": "UN/EDIFACT certificates: UN/EDIFACT certificates: Common Health Entry\nDocument for Products (CHED-P) (as set out in Part 2, Section B of Annex\nII to Commission Implementing Regulation (EU) 2019/1715 (OJ L 261)) as\ntransposed into UK Law."
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060276",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": null,
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": 2,
        "condition_measurement_unit_code": "KGM",
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "",
        "duty_expression": "",
        "guidance_cds": null,
        "measure_condition_class": "threshold",
        "monetary_unit_abbreviation": null,
        "requirement": "<span>2.00</span> <abbr title='Kilogram'>kg</abbr>"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060279",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "Exemption by virtue of Articles 3 and 4 of regulation 2019/2122 (animals\nintended for scientific purposes, research and diagnostic samples)",
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "C084",
        "duty_expression": "",
        "guidance_cds": "- Complete the statement 'regulation 2019/2122 exempt'.\n\n\n- Use of this code constitutes a legal declaration that the goods are\nnot concerned by Commission Delegated Regulation (EU) 2019/2122 adopting\na list of animals and goods exempt from official controls at border\ncontrol posts.\n\n\n- Sufficient evidence must be held in records to demonstrate eligibility\nfor this waiver which must be produced on demand.\n\n\n- No document status code is required.",
        "measure_condition_class": "unknown",
        "monetary_unit_abbreviation": null,
        "requirement": "Other certificates: Exemption by virtue of Articles 3 and 4 of\nregulation 2019/2122 (animals intended for scientific purposes, research\nand diagnostic samples)"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060280",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export not allowed after control",
        "action_code": "09",
        "certificate_description": null,
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "",
        "duty_expression": "",
        "guidance_cds": null,
        "measure_condition_class": "negative",
        "monetary_unit_abbreviation": null,
        "requirement": null
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "c9982ee465cf7dcc85a926f409a91f94",
      "type": "measure_condition_permutation",
      "relationships": {
        "measure_conditions": {
          "data": [
            {
              "id": "20060275",
              "type": "measure_condition"
            }
          ]
        }
      }
    },
    {
      "id": "4d3b48c99972647c2f067a667703f311",
      "type": "measure_condition_permutation",
      "relationships": {
        "measure_conditions": {
          "data": [
            {
              "id": "20060278",
              "type": "measure_condition"
            }
          ]
        }
      }
    },
    {
      "id": "2cbaf3625f27ae2236f643c9def204eb",
      "type": "measure_condition_permutation",
      "relationships": {
        "measure_conditions": {
          "data": [
            {
              "id": "20060277",
              "type": "measure_condition"
            },
            {
              "id": "20060276",
              "type": "measure_condition"
            }
          ]
        }
      }
    },
    {
      "id": "20098001-n/a",
      "type": "measure_condition_permutation_group",
      "attributes": {
        "condition_code": "n/a"
      },
      "relationships": {
        "permutations": {
          "data": [
            {
              "id": "c9982ee465cf7dcc85a926f409a91f94",
              "type": "measure_condition_permutation"
            },
            {
              "id": "4d3b48c99972647c2f067a667703f311",
              "type": "measure_condition_permutation"
            },
            {
              "id": "2cbaf3625f27ae2236f643c9def204eb",
              "type": "measure_condition_permutation"
            }
          ]
        }
      }
    },
    {
      "id": "20098001",
      "type": "measure",
      "attributes": {
        "id": 20098001,
        "origin": "eu",
        "effective_start_date": "2021-01-01T00:00:00.000Z",
        "effective_end_date": null,
        "import": true,
        "export": false,
        "excise": false,
        "vat": false,
        "reduction_indicator": null,
        "meursing": false,
        "resolved_duty_expression": "",
        "universal_waiver_applies": false
      },
      "relationships": {
        "duty_expression": {
          "data": {
            "id": "20098001-duty_expression",
            "type": "duty_expression"
          }
        },
        "measure_type": {
          "data": {
            "id": "410",
            "type": "measure_type"
          }
        },
        "legal_acts": {
          "data": [
            {
              "id": "C2100270",
              "type": "legal_act"
            }
          ]
        },
        "measure_conditions": {
          "data": [
            {
              "id": "20060275",
              "type": "measure_condition"
            },
            {
              "id": "20060277",
              "type": "measure_condition"
            },
            {
              "id": "20060278",
              "type": "measure_condition"
            },
            {
              "id": "20060281",
              "type": "measure_condition"
            },
            {
              "id": "20060274",
              "type": "measure_condition"
            },
            {
              "id": "20060276",
              "type": "measure_condition"
            },
            {
              "id": "20060279",
              "type": "measure_condition"
            },
            {
              "id": "20060280",
              "type": "measure_condition"
            }
          ]
        },
        "measure_condition_permutation_groups": {
          "data": [
            {
              "id": "20098001-n/a",
              "type": "measure_condition_permutation_group"
            }
          ]
        },
        "measure_components": {
          "data": []
        },
        "resolved_measure_components": {
          "data": []
        },
        "national_measurement_units": {
          "data": []
        },
        "geographical_area": {
          "data": {
            "id": "1008",
            "type": "geographical_area"
          }
        },
        "excluded_countries": {
          "data": [
            {
              "id": "AT",
              "type": "geographical_area"
            },
            {
              "id": "BE",
              "type": "geographical_area"
            },
            {
              "id": "BG",
              "type": "geographical_area"
            },
            {
              "id": "CH",
              "type": "geographical_area"
            },
            {
              "id": "CY",
              "type": "geographical_area"
            },
            {
              "id": "CZ",
              "type": "geographical_area"
            },
            {
              "id": "DE",
              "type": "geographical_area"
            },
            {
              "id": "DK",
              "type": "geographical_area"
            },
            {
              "id": "EE",
              "type": "geographical_area"
            },
            {
              "id": "ES",
              "type": "geographical_area"
            },
            {
              "id": "EU",
              "type": "geographical_area"
            },
            {
              "id": "FI",
              "type": "geographical_area"
            },
            {
              "id": "FR",
              "type": "geographical_area"
            },
            {
              "id": "GR",
              "type": "geographical_area"
            },
            {
              "id": "HR",
              "type": "geographical_area"
            },
            {
              "id": "HU",
              "type": "geographical_area"
            },
            {
              "id": "IE",
              "type": "geographical_area"
            },
            {
              "id": "IS",
              "type": "geographical_area"
            },
            {
              "id": "IT",
              "type": "geographical_area"
            },
            {
              "id": "LI",
              "type": "geographical_area"
            },
            {
              "id": "LT",
              "type": "geographical_area"
            },
            {
              "id": "LU",
              "type": "geographical_area"
            },
            {
              "id": "LV",
              "type": "geographical_area"
            },
            {
              "id": "MT",
              "type": "geographical_area"
            },
            {
              "id": "NL",
              "type": "geographical_area"
            },
            {
              "id": "NO",
              "type": "geographical_area"
            },
            {
              "id": "PL",
              "type": "geographical_area"
            },
            {
              "id": "PT",
              "type": "geographical_area"
            },
            {
              "id": "RO",
              "type": "geographical_area"
            },
            {
              "id": "SE",
              "type": "geographical_area"
            },
            {
              "id": "SI",
              "type": "geographical_area"
            },
            {
              "id": "SK",
              "type": "geographical_area"
            }
          ]
        },
        "footnotes": {
          "data": [
            {
              "id": "CD624",
              "type": "footnote"
            },
            {
              "id": "CD686",
              "type": "footnote"
            },
            {
              "id": "CD737",
              "type": "footnote"
            }
          ]
        },
        "order_number": {
          "data": null
        }
      },
      "meta": {
        "duty_calculator": {
          "source": "uk",
          "scheme_code": null
        }
      }
    },
    {
      "id": "1011",
      "type": "geographical_area",
      "attributes": {
        "id": "1011",
        "description": "ERGA OMNES",
        "geographical_area_id": "1011"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": [
            {
              "id": "AD",
              "type": "geographical_area"
            }
          ]
        }
      }
    },
    {
      "id": "28267",
      "type": "heading",
      "attributes": {
        "goods_nomenclature_item_id": "0208000000",
        "description": "Other meat and edible meat offal, fresh, chilled or frozen",
        "formatted_description": "Other meat and edible meat offal, fresh, chilled or frozen",
        "description_plain": "Other meat and edible meat offal, fresh, chilled or frozen"
      }
    },
    {
      "id": "28275",
      "type": "commodity",
      "attributes": {
        "producline_suffix": "80",
        "description": "Other",
        "number_indents": 1,
        "goods_nomenclature_item_id": "0208900000",
        "formatted_description": "Other",
        "description_plain": "Other"
      }
    },
    {
      "id": "4176a8c3415ef099c881ffde5d69f861",
      "type": "import_trade_summary",
      "attributes": {
        "basic_third_country_duty": "<span>44.00</span> GBP / <abbr title='Hectokilogram'>100 kg</abbr>",
        "preferential_tariff_duty": "1.00 %",
        "preferential_quota_duty": "1.00 %"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|A commodity was found.|[Commodity](#schemacommodity)
404|Not Found|Commodity was not found.|None
5XX|Unknown|Unexpected error.|None

# Quotas

Quotas allow a limited amount of goods to be imported at a lower duty rate. These vary by commodity, geographical area and date.

## GET /quotas/search

Retrieves a paginated list of quota definitions, optionally filtered by a variety of parameters.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
goods_nomenclature_item_id|query|string|false|Retrieve quotas only for goods with this `goods_nomenclature_item_id`
geographical_area_id|query|string|false|Retrieve quotas only with this `geographical_area_id`
order_number|query|string|false|Retrieve quotas only with this `order_number`
critical|query|string|false|Retrieve quotas only with `critical` status equal to ['Y', 'N']
status|query|string|false|Retrieve quotas only for goods with `status` equal to ['blocked', 'exhausted', 'not_blocked', 'not_exhausted']
year|query|string|false|Retrieve quotas only for this specific `year`. Note: this, along with `month` and `day`, is part of a full date field, but the `year` part can be used on its own. ``` /quotas/search?year=2019 ``` and via the body of a JSON request: ``` {   "year": "2019" } ```
month|query|string|false|Retrieve quotas only for this specific `month`. Note: this, along with `year` and `day`, is part of a full date field, and will be ignored if the other two parameters are missing. ``` /quotas/search?year=2019&month=01&day=01 ``` and via the body of a JSON request: ``` {   "year": "2019",   "month": "01",   "day": "01" } ```
day|query|string|false|Retrieve quotas only for this specific `day`. Note: this, along with `year` and `month`, is part of a full date field, and will be ignored if the other two parameters are missing. ``` /quotas/search?year=2019&month=01&day=01 ``` and via the body of a JSON request: ``` {   "year": "2019",   "month": "01",   "day": "01" } ```
page|query|integer|false|Retrieve search page with number
include|query|string|false|Retrieve quota balance events which show the history of updates to the returned quota definition.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/quotas/search?goods_nomenclature_item_id=0805102200&geographical_area_id=EG&order_number=091784&status=not_blocked&page=1 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "12202",
      "type": "definition",
      "attributes": {
        "quota_definition_sid": 12202,
        "quota_order_number_id": "091784",
        "initial_volume": "36300000.0",
        "validity_start_date": "2018-12-01T00:00:00.000Z",
        "validity_end_date": "2019-05-31T00:00:00.000Z",
        "status": "Open",
        "description": "Commission Regulation (EU) No 449/2010 amending Council Regulation (EC) No 747/2001 and repealing Regulations (EC) No 2276/2003 (EC) No 995/2005 (EC) No 1002/2007 and (EC) No 1455/2007",
        "balance": "36300000.0",
        "measurement_unit": "Kilogram (kg)",
        "monetary_unit": null,
        "measurement_unit_qualifier": null,
        "last_allocation_date": null,
        "suspension_period_start_date": null,
        "suspension_period_end_date": null,
        "blocking_period_start_date": null,
        "blocking_period_end_date": null
      },
      "relationships": {
        "order_number": {
          "data": {
            "id": "091784",
            "type": "order_number"
          }
        },
        "measures": {
          "data": [
            {
              "id": "3659283",
              "type": "measure"
            },
            {
              "id": "3659284",
              "type": "measure"
            },
            {
              "id": "3659285",
              "type": "measure"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "3659283",
      "type": "measure",
      "attributes": {
        "goods_nomenclature_item_id": "0805102200"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "3659284",
      "type": "measure",
      "attributes": {
        "goods_nomenclature_item_id": "0805102400"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "3659285",
      "type": "measure",
      "attributes": {
        "goods_nomenclature_item_id": "0805102800"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "091784",
      "type": "order_number",
      "attributes": {
        "number": "091784"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "EG",
      "type": "geographical_area",
      "attributes": {
        "id": "EG",
        "description": "Egypt",
        "geographical_area_id": "EG"
      }
    }
  ],
  "meta": {
    "pagination": {
      "page": 1,
      "per_page": 5,
      "total_count": 1
    }
  }
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Quota definitions were found|[QuotaSearch](#schemaquotasearch)
5XX|Unknown|Unexpected error.|None

# Additional Codes

Retrieves a list of additional _codes, with associated commodities.

## GET /additional_codes/search

Retrieves a paginated list of additional_codes, filtered by parameters.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
code|query|string|conditional|Retrieve additional_codes with this exact `code`. This parameter must be passed together with the `type` parameter.
type|query|string|conditional|Retrieve additional_codes with this exact `type` equal to `additional_code_type_id`. This parameter must be passed together with the `code` parameter.
description|query|string|conditional|Retrieve additional_codes with description that contains `description`

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/additional_codes/search?code=200&type=B \
     -H "Content-Type: application/vnd.hmrc.2.0+json"
```

**Example Response**

```json
{
  "data": [
    {
      "id": "11486",
      "type": "additional_code",
      "attributes": {
        "additional_code_type_id": "B",
        "additional_code": "200",
        "code": "B200",
        "description": "Kim Hin Ceramics (Shanghai) Co. Ltd",
        "formatted_description": "Kim Hin Ceramics (Shanghai) Co. Ltd"
      },
      "relationships": {
        "measures": {
          "data": [
            {
              "id": "3625236",
              "type": "measure"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "3625236",
      "type": "measure",
      "attributes": {
        "id": 3625236,
        "validity_start_date": "1991-07-01T00:00:00.000Z",
        "validity_end_date": "1992-03-31T00:00:00.000Z",
        "goods_nomenclature_item_id": "7317000000"
      },
      "relationships": {
        "goods_nomenclature": {
          "data": {
            "id": "46392",
            "type": "goods_nomenclature"
          }
        }
      }
    },
    {
      "id": "46392",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "7317000000",
        "goods_nomenclature_sid": 46392,
        "number_indents": 0,
        "description": "Nails, tacks, drawing pins, corrugated nails, staples ...",
        "productline_suffix": "80"
      }
    }
  ],
  "meta": {
    "pagination": {
      "page": 1,
      "per_page": 5,
      "total_count": 1
    }
  }
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|AdditionalCodes were found|[AdditionalCodeSearch](#schemaadditionalcodesearch)
5XX|Unknown|Unexpected error.|None


## GET /additional_code_types

Retrieves a list of additional code types.

Retrieves a list of all additional_code_types without pagination and filtering.

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/additional_code_types \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "B",
      "type": "additional_code_type",
      "attributes": {
        "additional_code_type_id": "B",
        "description": "Anti-dumping/countervailing"
      }
    },
    {
      "id": "P",
      "type": "additional_code_type",
      "attributes": {
        "additional_code_type_id": "B",
        "description": "Refund for basic products"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|AdditionalCodeTypes were found|[AdditionalCodeTypes](#schemaadditionalcodetypes)
5XX|Unknown|Unexpected error.|None

# Certificates

Retrieves the list of certificates, with the associated description and description type.

## GET /certificates

Retrieves a paginated list of certificates, filtered by `as_of param, if present.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
as_of|query|string(date)|false|Retrieve the measure_types as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/certificates \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": {
    "id": "D005",
    "type": "certificate",
    "attributes": {
      "certificate_type_code": "D",
      "certificate_code": "005",
      "description": "Commercial invoice within the framework of undertakings",
      "formatted_description": "Commercial invoice within the framework of undertakings"
    },
    "relationships": {
      "measures": {
        "data": [
          {
            "id": "2124342",
            "type": "measure"
          },
          {
            "id": "2250100",
            "type": "measure"
          }
        ]
      }
    }
  }
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Certificates were found|[Certificates](#schemacertificates)
5XX|Unknown|Unexpected error.|None

## GET /certificates/search

Retrieves a list of certificates, with associated goods nomenclatures, filtered by parameters..

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
code|query|string|false|Retrieve certificates with this exact `code` or the certificate's `code` begins with `code`.
type|query|string|false|Retrieve certificates with this exact `type` equal to `certificate_type_code`.
description|query|string|false|Retrieve certificates with `description` that contains `description`.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/certificates/search?code=D005&type=D \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": {
    "id": "D005",
    "type": "certificate",
    "attributes": {
      "certificate_type_code": "D",
      "certificate_code": "005",
      "description": "Commercial invoice within the framework of undertakings",
      "formatted_description": "Commercial invoice within the framework of undertakings"
    },
    "relationships": {
      "measures": {
        "data": [
          {
            "id": "2124342",
            "type": "measure"
          },
          {
            "id": "2250100",
            "type": "measure"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "71692",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "7307191010",
        "goods_nomenclature_sid": 71692,
        "number_indents": 4,
        "description": "Threaded malleable cast iron tube or pipe fittings",
        "productline_suffix": "80"
      }
    }
  ],
  "meta": {
    "pagination": {
      "page": 1,
      "per_page": 5,
      "total_count": 1
    }
  }
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Certificates were found|[CertificateSearch](#schemacertificatesearch)
5XX|Unknown|Unexpected error.|None

## GET /certificate_types

Retrieves a list of all certificate types, without pagination and filtering.

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/certificate_types \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "Z",
      "type": "certificate_type",
      "attributes": {
        "certificate_type_code": "Z",
        "description": "More certificates"
      }
    },
    {
      "id": "X",
      "type": "certificate_type",
      "attributes": {
        "certificate_type_code": "X",
        "description": "Export licence"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|CertificateTypes were found|[CertificateTypes](#schemacertificatetypes)
5XX|Unknown|Unexpected error.|None

## GET /measure_types

Retrieves a list of all measure_types.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
as_of|query|string(date)|false|Retrieve the measure_types as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/measure_types \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "1",
      "type": "measure_type",
      "attributes": {
        "description": "Supplementary unit import",
        "measure_type_series_description": "Supplementary unit",
        "validity_end_date": null,
        "validity_start_date": "1972-01-01T00:00:00.000Z",
        "measure_type_series_id": "O",
        "measure_component_applicable_code": 1,
        "order_number_capture_code": 2,
        "trade_movement_code": 0
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|MeasureTypes were found|[MeasureTypes](#schemameasuretypes)
5XX|Unknown|Unexpected error.|None

# Quota Order Numbers

Retrieves a list of active quotas.

## GET /quota_order_numbers

Retrieves a list of active quotas and their definitions.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
as_of|query|string(date)|false|Retrieve the quota_order_numbers as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/quota_order_numbers \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "097014",
      "type": "quota_order_number",
      "attributes": {
        "quota_order_number_sid": "Supplementary unit import",
        "validity_end_date": "2021-08-01T00:00:00.000Z",
        "validity_start_date": "2022-07-31T00:00:00.000Z"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|QuotaOrderNumbers were found|[QuotaOrderNumbers](#schemaquotaordernumbers)
5XX|Unknown|Unexpected error.|None

# Measures

Measures refer to any restriction on importing or exporting products. Not all commodities have measures attached to them.

## GET /measures/{measure_sid}

This resource represents a single measure. For this resource, `measure_sid` is used to uniquely identify a measure and request it from the API.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
measure_sid|path|integer|true|The `measure_sid` of the measure to be retrieved.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/measures/{measure_sid} \
  -H 'Accept: application/json'
```

**Example Response**

```json
{
  "data": {
    "id": "20098001",
    "type": "measure",
    "attributes": {
      "origin": "eu",
      "import": true,
      "export": false,
      "excise": false,
      "vat": false,
      "effective_start_date": "2021-01-01T00:00:00.000Z",
      "effective_end_date": null
    },
    "relationships": {
      "goods_nomenclature": {
        "data": {
          "id": "7317000000",
          "type": "goods_nomenclature"
        }
      },
      "geographical_area": {
        "data": {
          "id": "EG",
          "type": "geographical_area"
        }
      },
      "measure_type": {
        "data": {
          "id": "410",
          "type": "measure_type"
        }
      },
      "measure_conditions": {
        "data": [
          {
            "id": "20060275",
            "type": "measure_condition"
          },
          {
            "id": "20060277",
            "type": "measure_condition"
          }
        ]
      },
      "measure_excluded_geographical_areas": {
        "data": []
      },
      "quota_order_number": {
        "data": null
      },
      "footnotes": {
        "data": [
          {
            "id": "CD624",
            "type": "footnote"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "7317000000",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "7317000000",
        "goods_nomenclature_sid": 46392,
        "number_indents": 0,
        "description": "Nails, tacks, drawing pins, corrugated nails, staples ...",
        "productline_suffix": "80"
      }
    },
    {
      "id": "EG",
      "type": "geographical_area",
      "attributes": {
        "id": "EG",
        "description": "Egypt",
        "geographical_area_id": "EG"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|A measure was found.|[Measure](#schemameasure)
404|Not Found|Measure was not found.|None
5XX|Unknown|Unexpected error.|None

## GET /measure_actions

*Retrieves a list of the measure actions.*

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
as_of|query|string(date)|false|Retrieve the measure_actions as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/measure_actions \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "1",
      "type": "measure_action",
      "attributes": {
        "description": "Import allowed",
        "validity_end_date": null,
        "validity_start_date": "1972-01-01T00:00:00.000Z"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|MeasureActions were found|[MeasureActions](#schemameasureactions)
5XX|Unknown|Unexpected error.|None

## GET /measure_condition_codes

*Retrieves a list of the measure condition codes.*

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
as_of|query|string(date)|false|Retrieve the measure_condition_codes as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/measure_condition_codes \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "1",
      "type": "measure_condition_code",
      "attributes": {
        "description": "Presentation of a certificate/licence/document",
        "validity_end_date": null,
        "validity_start_date": "1993-01-01T00:00:00.000Z"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|measure_condition_codes were found|[MeasureConditionCodes](#schemameasureconditioncodes)
5XX|Unknown|Unexpected error.|None

# Footnotes

Retrieves a list of footnotes, with associated goods nomenclatures.

## GET /footnotes/search

Retrieves a list of footnotes, filtered by parameters.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
type|query|string|false|Retrieve footnotes with this exact `type` equal to `footnote_type_id`. **Must be combined with a code**.
code|query|string|false|Retrieve footnotes with this exact `code` or the footnote's `code` begins with `code`. **Must be combined with a type**.
description|query|string|false|Retrieve footnotes with `description` that contains `description`. Can be combined with `type` and `code`.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/footnotes/search?code=134&type=CD \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": {
    "id": "05737",
    "type": "footnote",
    "attributes": {
      "code": "05737",
      "footnote_type_id": "05",
      "footnote_id": "737",
      "description": "For wine not exceeding 22% vol enter default value \"0.00\" in the 3rd quantity. Wine exceeding 22% vol requires the actual litres of 100% alcohol",
      "formatted_description": "For wine not exceeding 22% vol enter default value \"0.00\" in the 3rd quantity. Wine exceeding 22% vol requires the actual litres of 100% alcohol",
      "extra_large_measures": false
    },
    "relationships": {
      "goods_nomenclatures": {
        "data": [
          {
            "id": "34659",
            "type": "goods_nomenclature"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "34659",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "2204101900",
        "goods_nomenclature_sid": 34658,
        "description": "Other",
        "number_indents": 3,
        "productline_suffix": "80"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Footnotes were found|[FootnoteSearch](#schemafootnotesearch)
5XX|Unknown|Unexpected error.|None

## GET /footnote_types

Retrieves a list of all footnote_types without pagination and filtering.

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/footnote_types \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "WR",
      "type": "footnote_type",
      "attributes": {
        "footnote_type_id": "WR",
        "description": "Wine reference"
      }
    },
    {
      "id": "TP",
      "type": "footnote_type",
      "attributes": {
        "footnote_type_id": "TP",
        "description": "Dynamic footnote"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|FootnoteTypes were found|[FootnoteTypes](#schemafootnotetypes)
5XX|Unknown|Unexpected error.|None

# GoodsNomenclatures

Retrieves a list of all goods nomenclatures in a section.

## GET /goods_nomenclatures/section/{position}

Retrieves a list of all the goods nomenclatures in a section allowing you to view the hierarchical tree for the section.

The resource is returned as JSON by default.

Alternately, the client may request that the resource be returned as comma separated values (CSV).

In order to request CSV, the client should add the following HTTP header to the request:

```
content-type:text/csv
```

The response will contain some additional HTTP headers, i.e.:

```
content-type: text/csv
content-disposition: attachment; filename=goods_nomenclatures.csv
```

Here is an example of a response as CSV:

```
SID,Goods Nomenclature Item ID,Indents,Description,Product Line Suffix,Href,Formatted description,Start date,End date,Declarable,Parent SID
27623,0100000000,0,LIVE ANIMALS,80/uk/api/chapters/01,Live animals,1971-12-31 00:00:00 UTC,,false,
27624,0101000000,0,"Live horses, asses, mules and hinnies",80/uk/api/headings/0101,"Live horses, asses, mules and hinnies",1972-01-01 00:00:00 UTC,,false,27623
93797,0101210000,1,Horses,10/uk/api/subheadings/0101210000-10,Horses,2012-01-01 00:00:00 UTC,,false,27624
93796,0101210000,2,Pure-bred breeding animals,80/uk/api/commodities/0101210000,Pure-bred breeding animals,2012-01-01 00:00:00 UTC,,true,93797
93798,0101290000,2,Other,80/uk/api/subheadings/0101290000-80,Other,2012-01-01 00:00:00 UTC,,false,93797
93799,0101291000,3,For slaughter,80/uk/api/commodities/0101291000,For slaughter,2012-01-01 00:00:00 UTC,,true,93798
93800,0101299000,3,Other,80/uk/api/commodities/0101299000,Other,2012-01-01 00:00:00 UTC,,true,93798
93801,0101300000,1,Asses,80/uk/api/commodities/0101300000,Asses,2012-01-01 00:00:00 UTC,,true,27624
72763,0101900000,1,Other,80/uk/api/commodities/0101900000,Other,2002-01-01 00:00:00 UTC,,true,27624
```

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
position|path|integer|true|The `position` of the section to be retrieved
as_of|query|string(date)|false|Retrieve goods nomenclatures as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/goods_nomenclatures/section/1 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "27623",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0100000000",
        "goods_nomenclature_sid": 27623,
        "description": "LIVE ANIMALS",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/chapters/01",
        "formatted_description": "Live animals",
        "validity_start_date": "1971-12-31T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": null
        }
      }
    },
    {
      "id": "27810",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101000000",
        "goods_nomenclature_sid": 27624,
        "description": "Live horses, asses, mules and hinnies",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/headings/0101",
        "formatted_description": "Live horses, asses, mules and hinnies",
        "validity_start_date": "1972-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27623",
            "type": "goods_nomenclature"
          }
        }
      }
    },
    {
      "id": "93797",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101210000",
        "goods_nomenclature_sid": 93797,
        "description": "Horses",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/subheadings/0101210000-80",
        "formatted_description": "Horses",
        "validity_start_date": "2012-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27810",
            "type": "goods_nomenclature"
          }
        }
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Goods nomenclatures were found|[GoodsNomenclaturesExtended](#schemagoodsnomenclaturesextended)
5XX|Unknown|Unexpected error.|None

## GET /goods_nomenclatures/chapter/{chapter_id}

Retrieves a list of all the goods nomenclatures in a chapter allowing you to view the hierarchical tree for the chapter.

The resource is returned as JSON by default.

Alternately, the client may request that the resource be returned as comma separated values (CSV).

In order to request CSV, the client should add the following HTTP header to the request:

```
content-type:text/csv
```

The response will contain some additional HTTP headers, i.e.:

```
content-type: text/csv
content-disposition: attachment; filename=goods_nomenclatures.csv
```

Here is an example of a response as CSV:

```
SID,Goods Nomenclature Item ID,Indents,Description,Product Line Suffix,Href,Formatted description,Start date,End date,Declarable,Parent SID
27623,0100000000,0,LIVE ANIMALS,80/uk/api/chapters/01,Live animals,1971-12-31 00:00:00 UTC,,false,
27624,0101000000,0,"Live horses, asses, mules and hinnies",80/uk/api/headings/0101,"Live horses, asses, mules and hinnies",1972-01-01 00:00:00 UTC,,false,27623
93797,0101210000,1,Horses,10/uk/api/subheadings/0101210000-10,Horses,2012-01-01 00:00:00 UTC,,false,27624
93796,0101210000,2,Pure-bred breeding animals,80/uk/api/commodities/0101210000,Pure-bred breeding animals,2012-01-01 00:00:00 UTC,,true,93797
93798,0101290000,2,Other,80/uk/api/subheadings/0101290000-80,Other,2012-01-01 00:00:00 UTC,,false,93797
93799,0101291000,3,For slaughter,80/uk/api/commodities/0101291000,For slaughter,2012-01-01 00:00:00 UTC,,true,93798
93800,0101299000,3,Other,80/uk/api/commodities/0101299000,Other,2012-01-01 00:00:00 UTC,,true,93798
93801,0101300000,1,Asses,80/uk/api/commodities/0101300000,Asses,2012-01-01 00:00:00 UTC,,true,27624
72763,0101900000,1,Other,80/uk/api/commodities/0101900000,Other,2002-01-01 00:00:00 UTC,,true,27624
```

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
chapter_id|path|string|true|The `chapter_id` of the chapter to be retrieved, e.g. the first two (2) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of two digits.
as_of|query|string(date)|false|Retrieve goods nomenclatures as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/goods_nomenclatures/chapter/01 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "27623",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0100000000",
        "goods_nomenclature_sid": 27623,
        "description": "LIVE ANIMALS",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/chapters/01",
        "formatted_description": "Live animals",
        "validity_start_date": "1971-12-31T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": null
        }
      }
    },
    {
      "id": "27810",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101000000",
        "goods_nomenclature_sid": 27624,
        "description": "Live horses, asses, mules and hinnies",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/headings/0101",
        "formatted_description": "Live horses, asses, mules and hinnies",
        "validity_start_date": "1972-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27623",
            "type": "goods_nomenclature"
          }
        }
      }
    },
    {
      "id": "93797",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101210000",
        "goods_nomenclature_sid": 93797,
        "description": "Horses",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/subheadings/0101210000-80",
        "formatted_description": "Horses",
        "validity_start_date": "2012-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27810",
            "type": "goods_nomenclature"
          }
        }
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Goods nomenclatures were found|[GoodsNomenclaturesExtended](#schemagoodsnomenclaturesextended)
5XX|Unknown|Unexpected error.|None

## GET /goods_nomenclatures/heading/{heading_id}

Retrieves a list of all the goods nomenclatures in a heading allowing you to view the hierarchical tree for the heading.

The resource is returned as JSON by default.

Alternately, the client may request that the resource be returned as comma separated values (CSV).

In order to request CSV, the client should add the following HTTP header to the request:

```
content-type:text/csv
```

The response will contain some additional HTTP headers, i.e.:

```
content-type: text/csv
content-disposition: attachment; filename=goods_nomenclatures.csv
```

Here is an example of a response as CSV:

```
SID,Goods Nomenclature Item ID,Indents,Description,Product Line Suffix,Href,Formatted description,Start date,End date,Declarable,Parent SID
27624,0101000000,0,"Live horses, asses, mules and hinnies",80/uk/api/headings/0101,"Live horses, asses, mules and hinnies",1972-01-01 00:00:00 UTC,,false,27623
93797,0101210000,1,Horses,10/uk/api/subheadings/0101210000-10,Horses,2012-01-01 00:00:00 UTC,,false,27624
93796,0101210000,2,Pure-bred breeding animals,80/uk/api/commodities/0101210000,Pure-bred breeding animals,2012-01-01 00:00:00 UTC,,true,93797
93798,0101290000,2,Other,80/uk/api/subheadings/0101290000-80,Other,2012-01-01 00:00:00 UTC,,false,93797
93799,0101291000,3,For slaughter,80/uk/api/commodities/0101291000,For slaughter,2012-01-01 00:00:00 UTC,,true,93798
93800,0101299000,3,Other,80/uk/api/commodities/0101299000,Other,2012-01-01 00:00:00 UTC,,true,93798
93801,0101300000,1,Asses,80/uk/api/commodities/0101300000,Asses,2012-01-01 00:00:00 UTC,,true,27624
72763,0101900000,1,Other,80/uk/api/commodities/0101900000,Other,2002-01-01 00:00:00 UTC,,true,27624
```

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
heading_id|path|string|true|The `heading_id` of the heading to be retrieved, e.g. the first four (4) digits of the `goods_nomenclature_item_id`. This should be a zero-padded string of four (4) digits.
as_of|query|string(date)|false|Retrieve goods nomenclatures as they existed on the `as_of` date. Use the format `YYYY-MM-DD`. While this is not a required field it is advised to include it with all requests even if requesting data for today to ensure the data returned is correct. As caching is used on the API this will ensure the data returned is as expected.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/goods_nomenclatures/heading/0101 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "27623",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0100000000",
        "goods_nomenclature_sid": 27623,
        "description": "LIVE ANIMALS",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/chapters/01",
        "formatted_description": "Live animals",
        "validity_start_date": "1971-12-31T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": null
        }
      }
    },
    {
      "id": "27810",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101000000",
        "goods_nomenclature_sid": 27624,
        "description": "Live horses, asses, mules and hinnies",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/headings/0101",
        "formatted_description": "Live horses, asses, mules and hinnies",
        "validity_start_date": "1972-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27623",
            "type": "goods_nomenclature"
          }
        }
      }
    },
    {
      "id": "93797",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101210000",
        "goods_nomenclature_sid": 93797,
        "description": "Horses",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/subheadings/0101210000-80",
        "formatted_description": "Horses",
        "validity_start_date": "2012-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27810",
            "type": "goods_nomenclature"
          }
        }
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Goods nomenclatures were found|[GoodsNomenclaturesExtended](#schemagoodsnomenclaturesextended)
5XX|Unknown|Unexpected error.|None

# SearchReferences

Retrieves a list of search references by letter

## GET /search_references

Retrieves a list of search references by letter

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
query[letter]|query|string|false|Retrieve search references started with  `query[letter]` letter. Without a query parameter all search references are returned in the response.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/search_references.json?query[letter]=c \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "888",
      "type": "search_reference",
      "attributes": {
        "title": "cabinets, filing of base metal",
        "referenced_id": "8304",
        "referenced_class": "Heading",
        "productline_suffix": "80"
      }
    },
    {
      "id": "886",
      "type": "search_reference",
      "attributes": {
        "title": "cabinets (furniture)",
        "referenced_id": "9403",
        "referenced_class": "Heading",
        "productline_suffix": "80"
      }
    },
    {
      "id": "887",
      "type": "search_reference",
      "attributes": {
        "title": "cabinets (radio and television)",
        "referenced_id": "8529",
        "referenced_class": "Heading",
        "productline_suffix": "80"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Search references were found|[SearchReferences](#schemasearchreferences)
5XX|Unknown|Unexpected error.|None

# GeographicalAreas

Retrieves a list of geographical areas or by specific country.

## GET /geographical_areas

Retrieves a list of geographical areas

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/geographical_areas \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "GB",
      "type": "geographical_area",
      "attributes": {
        "id": "GB",
        "description": "United Kingdom",
        "geographical_area_id": "GB"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": []
        }
      }
    },
    {
      "id": "2501",
      "type": "geographical_area",
      "attributes": {
        "id": "2501",
        "description": "Countries not members of the WTO",
        "geographical_area_id": "2501"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": [
            {
              "id": "AD",
              "type": "geographical_area"
            },
            {
              "id": "AI",
              "type": "geographical_area"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "AD",
      "type": "geographical_area",
      "attributes": {
        "id": "AD",
        "description": "Andorra",
        "geographical_area_id": "AD"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": []
        }
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Geographical areas were found|[GeographicalAreas](#schemageographicalareas)
5XX|Unknown|Unexpected error.|None

## GET /geographical_areas/countries

Retrieves a list of countries

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/geographical_areas/countries \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "GB",
      "type": "geographical_area",
      "attributes": {
        "id": "GB",
        "description": "United Kingdom",
        "geographical_area_id": "GB"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": []
        }
      }
    },
    {
      "id": "2501",
      "type": "geographical_area",
      "attributes": {
        "id": "2501",
        "description": "Countries not members of the WTO",
        "geographical_area_id": "2501"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": [
            {
              "id": "AD",
              "type": "geographical_area"
            },
            {
              "id": "AI",
              "type": "geographical_area"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "AD",
      "type": "geographical_area",
      "attributes": {
        "id": "AD",
        "description": "Andorra",
        "geographical_area_id": "AD"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": []
        }
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Contries were found|[GeographicalAreas](#schemageographicalareas)
5XX|Unknown|Unexpected error.|None

# Changes

Retrieves a list of goods nomenclature objects that have changes since the previous day.

## GET /changes/{as_of}

Changes are only available for the previous 30 days up to the current day. Requests for changes outside of these dates will results in an empty set of changes.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
as_of|path|string(date)|true|Retrieve changes as they existed between the `as_of` date and the previous day.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/changes/2021-04-13 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "106193",
      "type": "change",
      "attributes": {
        "goods_nomenclature_sid": 106193,
        "goods_nomenclature_item_id": "7606129292",
        "productline_suffix": "10",
        "end_line": false,
        "change_type": "commodity",
        "change_date": "2021-04-13"
      }
    },
    {
      "id": "125323",
      "type": "change",
      "attributes": {
        "goods_nomenclature_sid": 125323,
        "goods_nomenclature_item_id": "2204109100",
        "productline_suffix": "80",
        "end_line": true,
        "change_type": "commodity",
        "change_date": "2021-04-13"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|The date is correct and a (potentially empty) list of changes will be returned|[ChangesResponse](#schemachangesresponse)
5XX|Unknown|Unexpected error.|None

# Rules of Origin

Retrieves relevant Rules of Origin schemes and rules.

## GET /rules_of_origin_schemes/{subheading}/{country_code}

Retrieves a list of Schemes and corresponding rules which apply to the
supplied heading and country codes

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
subheading|path|string|true|The 6 digit subheading of the goods being traded
country_code|path|string|true|Two letter country code for the country you are trading with

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/rules_of_origin_schemes/392113/FR \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "eu",
      "type": "rules_of_origin_scheme",
      "attributes": {
        "scheme_code": "eu",
        "title": "UK / EU Trade and Co-operation Agreement",
        "countries": [
          "EU",
          "AT",
          "BE",
          "BG",
          "CY",
          "CZ",
          "DE",
          "DK",
          "EE",
          "ES",
          "FI",
          "FR",
          "GR",
          "HR",
          "HU",
          "IE",
          "IT",
          "LT",
          "LU",
          "LV",
          "MT",
          "NL",
          "PL",
          "PT",
          "RO",
          "SE",
          "SI",
          "SK",
          "SM",
          "AD"
        ],
        "footnote": null,
        "unilateral": null,
        "fta_intro": "### UK / EU Trade and Co-operation Agreement\n\nThe UK moved to trading based on a new Free Trade Agreement (FTA) - the Trade and Cooperation Agreement (TCA) between the UK and the EU.\n\nTo import / export tariff-free under the TCA, goods must meet the UK-EU preferential rules of origin. This means that there must be a qualifying level of processing in the country of export to access zero tariffs. This applies to EU origin goods imported and moving through the UK from a Member State to another EU Member State, as well as goods imported from the Rest of World.\n\nThese rules are set out in the TCA and determine the origin of goods based on where the products or materials (or inputs) used in their production come from. Their purpose is to ensure that preferential tariffs are only given to goods that originate in the UK or EU and not from third countries (those apart from UK and the EU Member States).\n\n#### Andorra and San Marino\nAndorra and San Marino are part of customs unions with the EU. The UK has agreed with the EU that all products originating in San Marino and all non-agricultural products (chapters 25-97) originating in Andorra are to be treated as originating in the EU under the UK-EU Trade and Cooperation Agreement as long as Andorra and San Marino apply to UK products the same preferences that the EU applies to them. These products benefit from zero tariffs, where they meet the relevant rules of origin. Trade with Andorra of agricultural products (chapters 01-24) is not in scope of the UK-EU Trade and Cooperation Agreement and takes place under WTO terms.",
        "introductory_notes": "### Note 1 - General principles\n\n1. This Annex sets out the general rules for the applicable requirements of Annex ORIG-2 \\[Product-specific rules of origin\\] as provided for in point (c) of Article ORIG 3(1) \\[General requirements\\] of this Agreement."
      },
      "relationships": {
        "rules": {
          "data": [
            {
              "id": "10000096",
              "type": "rules_of_origin_rule"
            }
          ]
        },
        "links": {
          "data": [
            {
              "id": "fd431ebe2833f8753e90e93cbbe64ef4",
              "type": "rules_of_origin_link"
            },
            {
              "id": "71ce11df10c4c03e61ce0702f3802ce7",
              "type": "rules_of_origin_link"
            }
          ]
        },
        "proofs": {
          "data": [
            {
              "id": "506eb2e258484e97bc25568b864c4fd0",
              "type": "rules_of_origin_proof"
            },
            {
              "id": "724fc25dcaf6a7d21e9015f065344a52",
              "type": "rules_of_origin_proof"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "fd431ebe2833f8753e90e93cbbe64ef4",
      "type": "rules_of_origin_link",
      "attributes": {
        "text": "Check your goods meet the rules of origin",
        "url": "https://www.gov.uk/guidance/check-your-goods-meet-the-rules-of-origin"
      }
    },
    {
      "id": "71ce11df10c4c03e61ce0702f3802ce7",
      "type": "rules_of_origin_link",
      "attributes": {
        "text": "UK/EU and EAEC: Trade and Cooperation Agreement",
        "url": "https://www.gov.uk/government/publications/ukeu-and-eaec-trade-and-cooperation-agreement-ts-no82021"
      }
    },
    {
      "id": "506eb2e258484e97bc25568b864c4fd0",
      "type": "rules_of_origin_proof",
      "attributes": {
        "summary": "Statement on origin",
        "subtext": "",
        "url": "https://www.gov.uk/guidance/get-proof-of-origin-for-your-goods#origin-declaration"
      }
    },
    {
      "id": "724fc25dcaf6a7d21e9015f065344a52",
      "type": "rules_of_origin_proof",
      "attributes": {
        "summary": "Importer's knowledge",
        "subtext": "",
        "url": "https://www.gov.uk/guidance/get-proof-of-origin-for-your-goods#importers-knowledge"
      }
    },
    {
      "id": "10000096",
      "type": "rules_of_origin_rule",
      "attributes": {
        "id_rule": 10000096,
        "heading": "39.21-39.22",
        "description": "3921: Other plates, sheets, film, foil and strip, of plastics\n\n3922: Baths, shower-baths, wash-basins, bidets, lavatory pans, seats and covers, flushing cisterns and similar sanitary ware, of plastics",
        "rule": "A change from any other heading  - CTH;\nor\nMaximum of non-originating materials - MaxNOM 50% (EXW).{{EXW}}{{CTH}}"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|An array of Schemes, with the relevant rules and other data nested under the scheme|[RulesOfOriginScheme](#schemarulesoforiginscheme)
5XX|Unknown|Unexpected error - likely missing or incorrect params|None

# Chemical Substances

Returns a list of chemical substances based on the filter parameters.

## GET /chemical_substances

Returns chemical substances that match one or more of the following filter parameters. Not supplying a filter returns empty results.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
filter[cus]|query|string|false|Filter by the EU CUS number
filter[cas_rn]|query|string|false|Filter by the international CAS number
filter[goods_nomenclature_item_id]|query|string|false|Filter by a specific goods nomenclature item id field
filter[goods_nomenclature_sid]|query|integer|false|Filter by a specific goods nomenclature sid field

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/chemical_substances?filter[cus]=0153778-6 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

curl https://www.trade-tariff.service.gov.uk/uk/api/chemical_substances?filter[cus]=90131-25-2 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

curl https://www.trade-tariff.service.gov.uk/uk/api/chemical_substances?filter[goods_nomenclature_item_id]=0712909090 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

curl https://www.trade-tariff.service.gov.uk/uk/api/chemical_substances?filter[goods_nomenclature_sid]=30725 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "0153778-6-30725",
      "type": "chemical_substance",
      "attributes": {
        "cus": "0153778-6",
        "goods_nomenclature_sid": 30725,
        "goods_nomenclature_item_id": "0712909090",
        "producline_suffix": "80",
        "name": "Spinacia oleracea, as dried vegetables",
        "cas_rn": "90131-25-2",
        "nomen": "INCI"
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|An array of chemical substances|[ChemicalSubstance](#schemachemicalsubstance)
5XX|Unknown|Unexpected error - likely missing or incorrect params|None

# Simplified Procedural Code Measure

Returns simplified procedural code measures indicating the current valuations.

## GET /simplified_procedural_code_measures

Valuations cover a 2 week window. Null valuations indicate no data for the given input filter period.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
filter[from_date]|query|string(date)|false|Filter measures that start from this date
filter[to_date]|query|string(date)|false|Filter measures that end up to and inluding this date
filter[simplified_procedural_code]|query|string|false|Filter by the simplified procedural code

**Example Request**

```shell
# Fetch all measures
curl https://www.trade-tariff.service.gov.uk/uk/api/simplified_procedural_code_measures \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

# Fetch a given 2 week window of measures
curl https://www.trade-tariff.service.gov.uk/uk/api/simplified_procedural_code_measures?filter[from_date]=2023-05-12&filter[to_date]=2023-05-25 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

# Fetch the full history of a given simplified procedural code
curl https://www.trade-tariff.service.gov.uk/uk/api/simplified_procedural_code_measures?filter[simplified_procedural_code]=1.10 \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data": [
    {
      "id": "1.10",
      "type": "simplified_procedural_code_measure",
      "attributes": {
        "validity_start_date": "2023-02-17",
        "validity_end_date": "2023-03-02",
        "duty_amount": 52.96,
        "goods_nomenclature_label": "New potatoes",
        "goods_nomenclature_item_ids": "0701905000",
        "monetary_unit_code": "GBP",
        "measurement_unit_code": "DTN",
        "measurement_unit_qualifier_code": null
      }
    }
  ]
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|Successful operation|[SimplifiedProceduralCodeMeasure](#schemasimplifiedproceduralcodemeasure)
5XX|Unknown|Unexpected error - likely missing or incorrect params|None

# PreferenceCodes

Retrieves a list of all the preference codes

## GET /preference_codes

See [Preference code Guidance](https://www.gov.uk/government/publications/preference-codes-for-data-element-417-of-the-customs-declaration-service) for more details.

This request does not require authentication.

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/preference_codes \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Example Response**

```json
{
  "data:id": "string",
  "data:type": "string",
  "data:attributes": {
    "description": "string"
  }
}
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|An array of preference_code objects.|[PreferenceCodes](#schemapreferencecodes)
5XX|Unknown|Unexpected error.|None

# Exchange Rates

Retrieves the exchange rate for specified periods of time.

## GET /exchange_rates/period_list/{year}

This resource represents the exchange rates period and exchange rates years.
You can use the period to work out which months there are exchange rates for the given type.
For example, the spot and average types only produce rates in March and December.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
year|path|integer|false|The `year` to find available periods for
filter[type]|query|string|false|Possible values: spot, monthly, average.<br> <ul>   <li>Monthly: Published the Wednesday before the penultimate Thursday of every month. They are valid for the following calendar month.</li>   <li>Average: Published 31st December and 31st of March every year. Describes the mean average from the preceding 12 monthly rate files.</li>   <li>Spot: Published 31st December and 31st March every year. Describes the rate at midday of that day.</li> </ul>

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/exchange_rates/period_lists/2022?filter[type]=monthly \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

curl https://www.trade-tariff.service.gov.uk/uk/api/exchange_rates/period_lists?filter[type]=spot \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

curl https://www.trade-tariff.service.gov.uk/uk/api/exchange_rates/period_lists?filter[type]=average \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|200 Success.|None
400|Bad Request|Bad request. For example type is not spot, monthly or average.|None
5XX|Unknown|Unexpected error.|None

## GET /exchange_rates/{year}-{month}

This resource represents the exchange rates and exchange rate files.
This will given you exchange rates of a given type for a given month and year.

This request does not require authentication.

**Parameters**

Parameter|In|Type|Required|Description
---|---|---|---|---|
year|path|integer|true|The `year` for the exchange rates and files
month|path|integer|true|The `month` for the exchange rates and files
filter[type]|query|string|false|Possible values: spot, monthly, average.<br> <ul>   <li>Monthly: Published the Wednesday before the penultimate Thursday of every month. They are valid for the following calendar month.</li>   <li>Average: Published 31st December and 31st of March every year. Describes the mean average from the preceding 12 monthly rate files.</li>   <li>Spot: Published 31st December and 31st March every year. Describes the rate at midday of that day.</li> </ul>

**Example Request**

```shell
curl https://www.trade-tariff.service.gov.uk/uk/api/exchange_rates/2021-10?filter[type]=monthly \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq

# Spot and average rates only produce data for March and December each year
curl https://www.trade-tariff.service.gov.uk/uk/api/exchange_rates/2022-3?filter[type]=spot \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
curl https://www.trade-tariff.service.gov.uk/uk/api/exchange_rates/2022-3?filter[type]=average \
  -H "Accept: application/vnd.hmrc.2.0+json" | jq
```

**Responses**

Status|Meaning|Description|Schema
---|---|---|---|
200|OK|200 Success.|None
400|Bad Request|Bad request. For example type is not spot, monthly or average.|None
5XX|Unknown|Unexpected error.|None

# Objects

## Sections

<a name="schemasections"></a>

The response will be a JSONCollection, and will contain an array of [referenced section objects](/reference.html#referencedsection "see referenced section object"), which are abbreviated versions of a full [section](/reference.html#section "see section object") object.

Each section has a `position`, which is its numerical order within the Tariff, and a `section_id`, which is a unique identifier.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": 1,
      "type": "section",
      "attributes": {
        "position": 1,
        "title": "Live animals; animal products",
        "numeral": "I",
        "chapter_from": "01",
        "chapter_to": "05"
      }
    },
    {
      "id": 2,
      "type": "section",
      "attributes": {
        "position": 2,
        "title": "Vegetable products",
        "numeral": "II",
        "chapter_from": "06",
        "chapter_to": "14"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the section. It may be used to uniquely identify a section and request its section_note from the API.
data:type|string|false|the type of object, i.e. `section`
data:attributes|[[ReferencedSection](#schemareferencedsection)]|false|A collection of [referenced section objects](/reference.html#referencedsection "see referenced section object")

## Section

<a name="schemasection"></a>

A section of the Tariff.

Each section has a `position`, which is its numerical order within the Tariff, and a `section_id`, which is a unique record identifier.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "1",
    "type": "section",
    "attributes": {
      "id": 1,
      "numeral": "I",
      "title": "Live animals; animal products",
      "position": 1,
      "chapter_from": "01",
      "chapter_to": "05",
      "section_note": "* 1\\. Any reference in this section to a particular genus or species of an animal, except where the context otherwise requires, includes a reference to the young of that genus or species.\r\n* 2\\. Except where the context otherwise requires, throughout the nomenclature any reference to 'dried' products also covers products which have been dehydrated, evaporated or freeze-dried.\r\n"
    },
    "relationships": {
      "chapters": {
        "data": [
          {
            "id": "27623",
            "type": "chapter"
          },
          {
            "id": "27809",
            "type": "chapter"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "27623",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": 27623,
        "goods_nomenclature_item_id": 100000000,
        "headings_from": 101,
        "headings_to": 106,
        "description": "LIVE ANIMALS",
        "formatted_description": "Live animals"
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": 27809,
        "goods_nomenclature_item_id": 200000000,
        "headings_from": 101,
        "headings_to": 106,
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal"
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "23",
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the section. It may be used to uniquely identify a section and request its section_note from the API.
data:type|string|false|the type of object, i.e. `section`
data:attributes|[ReferencedSection](#schemareferencedsection)|false|The section's attributes, as a [referenced section object](/reference.html#referencedsection "see referenced section object")
data:relationships|object|false|Objects and collections that are related to this section, e.g., a [referenced chapter](/reference.html#referencedchapter "see referenced chapter object")
included|[[ReferencedChapter](#schemareferencedchapter)]|false|A collection of chapters that are included in the section [referenced chapter objects](/reference.html#referencedchapter "see referenced chapter object")

## SectionNote

<a name="schemasectionnote"></a>

A note associated with a section of the Tariff.

A note provides textual about the section. Not all sections have a section note.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": 1,
  "section_id": 1,
  "content": "* 1\\. Any reference in this section to a particular genus or species of an animal, except where the context otherwise requires, includes a reference to the young of that genus or species.\r\n* 2\\. Except where the context otherwise requires, throughout the nomenclature any reference to 'dried' products also covers products which have been dehydrated, evaporated or freeze-dried.\r\n"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|integer|true|The `id` of the section_note.
section_id|integer|false|The `section_id` of the sction_note. It may be used to uniquely identify a section_note and request it from the API.
content|string|false|The `content` of the section_note. Not all sections have a note.

## Chapters

<a name="schemachapters"></a>

An array of objects, which contain a reference to a full [chapter](/reference.html#chapter "see chapter object") object.

Each chapter has a `goods_nomenclature_item_id`, which is a unique identifier.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "27623",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": "27623",
        "goods_nomenclature_item_id": "0100000000"
      }
    },
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": "27809",
        "goods_nomenclature_item_id": "0200000000"
      }
    },
    {
      "id": "28373",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_sid": "28373",
        "goods_nomenclature_item_id": "0300000000"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the chapter. This is a unique identifier.
data:type|string|false|the type of object, i.e. `chapter`.
data:attributes|[[ReferencedChapter](#schemareferencedchapter)]|false|A collection of [referenced chapter objects](/reference.html#referencedchapter "see referenced chapter object")

## Chapter

<a name="schemachapter"></a>

A chapter in the Tariff.

Each chapter has a `goods_nomenclature_sid`, which is a unique identifier. Each chapter has a `goods_nomenclature_item_id`, which is a unique identifier.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "27623",
    "type": "chapter",
    "attributes": {
      "goods_nomenclature_sid": 27623,
      "goods_nomenclature_item_id": "0100000000",
      "description": "LIVE ANIMALS",
      "formatted_description": "Live animals",
      "chapter_note_id": 46,
      "chapter_note": "* 1\\. This chapter covers all live animals except:\r\n  * (a) fish and crustaceans, molluscs and other aquatic invertebrates, of heading 0301, 0306, 0307 or 0308;\r\n  * (b) cultures of micro-organisms and other products of heading 3002; and\r\n  * (c) animals of heading 9508.",
      "section_id": 1
    },
    "relationships": {
      "section": {
        "data": [
          {
            "id": "1",
            "type": "section"
          }
        ]
      },
      "guide": {
        "data": [
          {
            "id": "23",
            "type": "guide"
          }
        ]
      },
      "headings": {
        "data": [
          {
            "id": "27624",
            "type": "heading"
          },
          {
            "id": "27633",
            "type": "heading"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": 23,
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    },
    {
      "id": 27624,
      "type": "heading",
      "attributes": {
        "goods_nomenclature_sid": 27624,
        "goods_nomenclature_item_id": "0101000000",
        "declarable": false,
        "description": "Live horses, asses, mules and hinnies",
        "producline_suffix": "80",
        "leaf": true,
        "description_plain": "Live horses, asses, mules and hinnies",
        "formatted_description": "Live horses, asses, mules and hinnies"
      }
    },
    {
      "id": 27633,
      "type": "heading",
      "attributes": {
        "goods_nomenclature_sid": 27633,
        "goods_nomenclature_item_id": "0102000000",
        "declarable": false,
        "description": "Live bovine animals",
        "producline_suffix": "80",
        "leaf": true,
        "description_plain": "Live bovine animals",
        "formatted_description": "Live bovine animals"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the chapter. It may be used to uniquely identify a chapter and request its chapter_note from the API.
data:type|string|false|the type of object, i.e. `chapter`
data:attributes|[ReferencedChapter](#schemareferencedchapter)|false|The chapter's attributes, as a [referenced chapter object](/reference.html#referencedchapter "see referenced chapter object")
data:relationships|object|false|Zero, one or many [referenced section objects](/reference.html#referencedsection "see referenced section object"), [referenced heading objects](/reference.html#referencedheading "see referenced heading object") and [referenced guide objects](/reference.html#referencedguide "see referenced guide object") that are related to this chapter. May include parent objects.
included|[object]|false|Zero, one or many [referenced headings](/reference.html#referencedheading "see referenced heading object") and [referenced guides](/reference.html#referencedguide "see referenced guide object") child objects that are included in the chapter.

## ChapterNote

<a name="schemachapternote"></a>

A note associated with a chapter of the Tariff.

Not all chapters have a chapter note.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": 46,
  "section_id": 1,
  "chapter_id": "01",
  "content": "* 1\\. This chapter covers all live animals except:\r\n  * (a) fish and crustaceans, molluscs and other aquatic invertebrates, of heading 0301, 0306, 0307 or 0308;\r\n  * (b) cultures of micro-organisms and other products of heading 3002; and\r\n  * (c) animals of heading 9508."
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|integer|true|The `id` of the chapter_note. This is a unique identifier.
chapter_id|string|false|The `chapter_id` of the chapter_note.
section_id|integer|false|The `section_id` of this chapter that has this note.
content|string|false|The `content` of the chapter_note.

## Heading

<a name="schemaheading"></a>

A heading in the tariff.

A heading (or sub-heading) describes products more detail than do headings or sections.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "27810",
    "type": "heading",
    "attributes": {
      "goods_nomenclature_item_id": "0101000000",
      "description": "Live horses, asses, mules and hinnies",
      "bit_url": "http://ec.europa.eu/taxation_customs/dds2/ebti/ebti_consultation.jsp?Lang=en&nomenc=0201000000&Expand=true",
      "formatted_description": "Live horses, asses, mules and hinnies"
    },
    "relationships": {
      "footnotes": {
        "data": [
          {
            "id": "701",
            "type": "footnote"
          }
        ]
      },
      "section": {
        "data": {
          "id": "1",
          "type": "section"
        }
      },
      "chapter": {
        "data": {
          "id": "27809",
          "type": "chapter"
        }
      },
      "commodities": {
        "data": [
          {
            "id": "27811",
            "type": "commodity"
          },
          {
            "id": "104276",
            "type": "commodity"
          },
          {
            "id": "104254",
            "type": "commodity"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_item_id": "0200000000",
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal",
        "chapter_note": "* 1\\.This chapter does not cover:\r\n  * (a) products of the kinds described in headings 0201 to 0208 or 0210, unfit or unsuitable for human consumption; ... "
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "23",
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    },
    {
      "id": "27811",
      "type": "commodity",
      "attributes": {
        "description": "Carcases and half-carcases",
        "number_indents": 1,
        "goods_nomenclature_item_id": "0201100000",
        "leaf": false,
        "goods_nomenclature_sid": "27811,",
        "formatted_description": "Carcases and half-carcases",
        "description_plain": "Carcases and half-carcases",
        "producline_suffix": "80",
        "parent_sid": null
      },
      "relationships": {
        "overview_measures": {
          "data": [
            {
              "id": "2982599",
              "type": "measure"
            }
          ]
        }
      }
    },
    {
      "id": "2982599",
      "type": "measure",
      "attributes": {
        "id": 2982599,
        "vat": false
      },
      "relationships": {
        "duty_expression": {
          "data": {
            "id": "2982599-duty_expression",
            "type": "duty_expression"
          }
        },
        "measure_type": {
          "data": {
            "id": "109",
            "type": "measure_type"
          }
        }
      }
    },
    {
      "id": "2982599-duty_expression",
      "type": "duty_expression",
      "attributes": {
        "base": "p/st",
        "formatted_base": "<abbr title='Number of items'>p/st</abbr>"
      }
    },
    {
      "id": "109",
      "type": "measure_type",
      "attributes": {
        "description": "Supplementary unit",
        "national": null,
        "measure_type_series_id": null,
        "id": "109"
      }
    },
    {
      "id": "701",
      "type": "footnote",
      "attributes": {
        "code": "TN701",
        "description": "According to  the Council Regulation (EU) No 692/2014sons, entity or body...",
        "formatted_description": "According to  the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it shall be..."
      }
    },
    {
      "id": "1",
      "type": "section",
      "attributes": {
        "numeral": "I",
        "title": "Live animals; animal products",
        "position": 1,
        "section_note": "* 1\\. Any reference in this section to a particular genus or species of an animal..."
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the heading. It may be used to uniquely identify a heading and request its heading_note from the API.
data:type|string|false|the type of object, i.e. `heading`
data:attributes|[ReferencedHeading](#schemareferencedheading)|false|The heading's attributes, as a [referenced heading object](/reference.html#referencedheading "see referenced heading object")
data:relationships|object|false|Zero, one or many [referenced section objects](/reference.html#referencedsection "see referenced section object"), [chapter](/reference.html#referencedchapter "see referenced chapter object") or [referenced footnote objects](/reference.html#referencedfootnote "see referenced footnote object") that are related to this heading. May include parent objects.
included|[object]|false|Zero, one or many [referenced chapter](/reference.html#referencedchapter "see referenced chapter object") objects, [referenced guide](/reference.html#referencedguide "see referenced guide object") objects, or [referenced commodity](/reference.html#referencedheadingcommodity "see referenced heading commodity object") objects.

## Subheading

<a name="schemasubheading"></a>

A subheading in the tariff.

A subheading (or heading) describes products in more details.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "94057",
    "type": "subheading",
    "attributes": {
      "goods_nomenclature_item_id": "0102291000",
      "description": "Of a weight not exceeding 80 kg",
      "formatted_description": "Of a weight not exceeding 80 kg"
    },
    "relationships": {
      "footnotes": {
        "data": [
          {
            "id": "701",
            "type": "footnote"
          }
        ]
      },
      "section": {
        "data": {
          "id": "1",
          "type": "section"
        }
      },
      "chapter": {
        "data": {
          "id": "27809",
          "type": "chapter"
        }
      },
      "commodities": {
        "data": [
          {
            "id": "27811",
            "type": "commodity"
          },
          {
            "id": "104276",
            "type": "commodity"
          },
          {
            "id": "104254",
            "type": "commodity"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_item_id": "0200000000",
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal",
        "chapter_note": "* 1\\.This chapter does not cover:\r\n  * (a) products of the kinds described in headings 0201 to 0208 or 0210, unfit or unsuitable for human consumption; ... "
      },
      "relationships": {
        "guides": {
          "data": [
            {
              "id": "23",
              "type": "guide"
            }
          ]
        }
      }
    },
    {
      "id": "23",
      "type": "guide",
      "attributes": {
        "title": "Classification of goods",
        "url": "https://www.gov.uk/government/collections/classification-of-goods"
      }
    },
    {
      "id": "27811",
      "type": "commodity",
      "attributes": {
        "description": "Carcases and half-carcases",
        "number_indents": 1,
        "goods_nomenclature_item_id": "0201100000",
        "leaf": false,
        "goods_nomenclature_sid": "27811,",
        "formatted_description": "Carcases and half-carcases",
        "description_plain": "Carcases and half-carcases",
        "producline_suffix": "80",
        "parent_sid": null
      },
      "relationships": {
        "overview_measures": {
          "data": [
            {
              "id": "2982599",
              "type": "measure"
            }
          ]
        }
      }
    },
    {
      "id": "2982599",
      "type": "measure",
      "attributes": {
        "id": 2982599,
        "vat": false
      },
      "relationships": {
        "duty_expression": {
          "data": {
            "id": "2982599-duty_expression",
            "type": "duty_expression"
          }
        },
        "measure_type": {
          "data": {
            "id": "109",
            "type": "measure_type"
          }
        }
      }
    },
    {
      "id": "2982599-duty_expression",
      "type": "duty_expression",
      "attributes": {
        "base": "p/st",
        "formatted_base": "<abbr title='Number of items'>p/st</abbr>"
      }
    },
    {
      "id": "109",
      "type": "measure_type",
      "attributes": {
        "description": "Supplementary unit",
        "national": null,
        "measure_type_series_id": null,
        "id": "109"
      }
    },
    {
      "id": "701",
      "type": "footnote",
      "attributes": {
        "code": "TN701",
        "description": "According to  the Council Regulation (EU) No 692/2014sons, entity or body...",
        "formatted_description": "According to  the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it shall be..."
      }
    },
    {
      "id": "1",
      "type": "section",
      "attributes": {
        "numeral": "I",
        "title": "Live animals; animal products",
        "position": 1,
        "section_note": "* 1\\. Any reference in this section to a particular genus or species of an animal..."
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the subheading. It may be used to uniquely identify a subheading.
data:type|string|false|the type of object, i.e. `subheading`
data:attributes|[ReferencedSubheading](#schemareferencedsubheading)|false|The subheading's attributes, as a [referenced subheading object](/reference.html#referencedsubheading "see referenced subheading object")
data:relationships|object|false|Zero, one or many [referenced section objects](/reference.html#referencedsection "see referenced section object"), [chapter](/reference.html#referencedchapter "see referenced chapter object") or [referenced footnote objects](/reference.html#referencedfootnote "see referenced footnote object") that are related to this subheading. May include parent objects.
included|[object]|false|Zero, one or many [referenced chapter](/reference.html#referencedchapter "see referenced chapter object") objects, [referenced guide](/reference.html#referencedguide "see referenced guide object") objects, or [referenced commodity](/reference.html#referencedheadingcommodity "see referenced heading commodity object") objects.

## Commodity

<a name="schemacommodity"></a>

Commodities are headings or subheadings.

A commodity has a specific code (the `goods_nomenclature_item_id`), which is unique.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "85314",
    "type": "commodity",
    "attributes": {
      "producline_suffix": "80",
      "description": "Frogs' legs",
      "number_indents": 2,
      "goods_nomenclature_item_id": "0208907000",
      "bti_url": "https://www.gov.uk/guidance/check-what-youll-need-to-get-a-legally-binding-decision-on-a-commodity-code",
      "formatted_description": "Frogs' legs",
      "description_plain": "Frogs' legs",
      "consigned": false,
      "consigned_from": null,
      "basic_duty_rate": null,
      "meursing_code": false,
      "declarable": true
    },
    "relationships": {
      "footnotes": {
        "data": [
          {
            "id": "701",
            "type": "footnote"
          }
        ]
      },
      "section": {
        "data": {
          "id": "1",
          "type": "section"
        }
      },
      "chapter": {
        "data": {
          "id": "27809",
          "type": "chapter"
        }
      },
      "heading": {
        "data": {
          "id": "28267",
          "type": "heading"
        }
      },
      "ancestors": {
        "data": [
          {
            "id": "28275",
            "type": "commodity"
          }
        ]
      },
      "import_measures": {
        "data": [
          {
            "id": "20098001",
            "type": "measure"
          }
        ]
      },
      "export_measures": {
        "data": [
          {
            "id": "20180492",
            "type": "measure"
          }
        ]
      },
      "import_trade_summary": {
        "data": [
          {
            "id": "4176a8c3415ef099c881ffde5d69f861",
            "type": "import_trade_summary"
          }
        ]
      }
    },
    "meta": {
      "duty_calculator": {
        "applicable_additional_codes": {},
        "applicable_measure_units": {},
        "applicable_vat_options": {
          "VATZ": "VAT zero rate",
          "VAT": "Value added tax (20.0%)"
        },
        "entry_price_system": false,
        "meursing_code": false,
        "source": "uk",
        "trade_defence": false,
        "zero_mfn_duty": false
      }
    }
  },
  "included": [
    {
      "id": "1",
      "type": "section",
      "attributes": {
        "numeral": "I",
        "title": "Live animals; animal products",
        "position": 1,
        "section_note": "1. Any reference in this section to a particular genus or species of an animal, except where the context otherwise requires, includes a reference to the young of that genus or species.\r\n\r\n2. Except where the context otherwise requires, throughout the classification any reference to 'dried' products also covers products which have been dehydrated, evaporated or freeze-dried.\r\n"
      }
    },
    {
      "id": "27809",
      "type": "chapter",
      "attributes": {
        "goods_nomenclature_item_id": "0200000000",
        "description": "MEAT AND EDIBLE MEAT OFFAL",
        "formatted_description": "Meat and edible meat offal",
        "chapter_note": "1. This chapter does not cover:\r\n\r\n   a) products of the kinds described in headings [0201](/headings/0201) to [0208](/headings/0208) or [0210](/headings/0210), unfit or unsuitable for human consumption;\r\n\r\n   b) edible, non-living insects (heading [0410](/headings/0410))\r\n\r\n   c) guts, bladders or stomachs of animals (heading [0504](/headings/0504)) or animal blood (heading [0511](/headings/0511) or [3002](/headings/3002)); or\r\n\r\n   d) animal fat, other than products of heading [0209](/headings/0209) ([Chapter 15](/chapters/15)).\r\n\r\n### Additional chapter notes\r\n\r\n1. A. The following expressions have the meanings hereby assigned to them:\r\n\r\n   (a) ‘carcases of bovine animals’, for the purposes of subheadings [0201 10](/subheadings/0201100000-80) and [0202 10](/subheadings/0202100000-80): whole carcases of the slaughtered animals after having been bled, eviscerated and skinned, imported with or without the heads, with or without the feet and with or without the other offal’s attached. Where carcases are imported without the heads, the latter must have been separated from the carcase at the atloido-occipital joint. When imported without the feet, the latter must have been cut off at the carpo-metacarpal or tarso-metatarsal joints; ‘carcase’ includes the front part of the carcase comprising all the bones and the scrag, neck and shoulder, having more than 10 pairs of ribs;\r\n\r\n   (b) ‘half-carcases of bovine animals’, for the purposes of subheadings [0201 10](/subheadings/0201100000-80) and [0202 10](/subheadings/0202100000-80): the product resulting from the symmetrical division of the whole carcase through the centre of each cervical, dorsal, lumbar and sacral vertebra and through the centre of the sternum and of the ischio-pubic symphysis; ‘halfcarcase’ includes the front part of the half-carcase comprising all the bones and the scrag, neck and shoulder, having more than 10 ribs;\r\n\r\n   (c) ‘compensated quarters’, for the purposes of subheadings [0201 20 20](/subheadings/0201202000-80) and [0202 20 10](/subheadings/0202201000-80): portions composed of either:\r\n\r\n      - forequarters comprising all the bones and the scrag, neck and shoulder, and cut at the tenth rib; and hindquarters comprising all the bones and the thigh and sirloin, and cut at the third rib, or\r\n\r\n      - forequarters comprising all the bones and the scrag, neck and shoulder, and cut at the fifth rib, with the whole of the flank and breast attached; and hindquarters comprising all the bones and the thigh and sirloin and cut at the eighth cut rib.\r\n      The forequarters and the hindquarters constituting ‘compensated quarters’ must be presented to customs at the same time and in equal numbers, and the total weight of the forequarters must be the same as that of the hindquarters; however, a difference between the weights of the two parts of the consignment is allowed, provided that this does not exceed 5 % of the weight of the heavier part (forequarters or hindquarters);\r\n\r\n   (d) ‘unseparated forequarters’, for the purposes of subheadings [0201 20 30](/subheadings/0201203000-80) and [0202 20 30](/subheadings/0202203000-80): the front part of a carcase, comprising all the bones and the scrag, neck and shoulder, with a minimum of four pairs of ribs and a maximum of 10 pairs of ribs (the first four pairs of ribs must be whole, the others may be cut), with or without the thin flank;\r\n\r\n   (e) ‘separated forequarters’, for the purposes of subheadings [0201 20 30](/subheadings/0201203000-80) and [0202 20 30](/subheadings/0202203000-80): the front part of a half-carcase, comprising all the bones and the scrag, neck and shoulder, with a minimum of four ribs and a maximum of 10 ribs (the first four ribs must be whole, the others may be cut), with or without the thin flank;\r\n\r\n   (f) ‘unseparated hindquarters’, for the purposes of subheadings [0201 20 50](/subheadings/0201205000-80) and [0202 20 50](/subheadings/0202205000-80): the rear part of a carcase comprising all the bones and the thigh and sirloin, including the fillet, with a minimum of three pairs of whole or cut ribs, with or without the shank and with or without the thin flank;\r\n\r\n   (g) ‘separated hindquarters’, for the purposes of subheadings [0201 20 50](/subheadings/0201205000-80) and [0202 20 50](/subheadings/0202205000-80): the rear part of a half-carcase, comprising all the bones and the thigh and sirloin, including the fillet, with a minimum of three whole or cut ribs, with or without the shank and with or without the thin flank;\r\n\r\n   (h) 1. ‘crop’ and ‘chuck and blade’ cuts, for the purposes of subheading [0202 30 50](/subheadings/0202305000-80): the dorsal part of the forequarter, including the upper part of the shoulder, obtained from a forequarter with a minimum of four ribs and a maximum of 10 ribs by a cut along a straight line through the point where the first rib joins the first sternal segment to the point of reflection of the diaphragm on the tenth rib;\r\n\r\n2. ‘brisket’ cut, for the purposes of subheading [0202 30 50](/subheadings/0202305000-80): the lower part of the forequarter, comprising the brisket navel end and the brisket point end.\r\n\r\n   B. Products covered by additional chapter notes 1(A)(a) to (g) to this chapter may be presented with or without the vertebral column.\r\n\r\n   C. In determining the number of whole or cut ribs referred to in additional chapter note 1(A), only those attached to the vertebral column are to be taken into consideration. If the vertebral column has been removed, only the whole or cut ribs which otherwise would have been directly attached to the vertebral column are to be taken into consideration.\r\n\r\n   2. A. The following expressions have the meanings hereby assigned to them:\r\n\r\n      (a) ‘carcases or half-carcases’, for the purposes of subheadings [0203 11 10](/subheadings/0203111000-80) and [0203 21 10](/subheadings/0203211000-80): slaughtered pigs, in the form of carcases of domestic swine which have been bled and eviscerated and from which the bristles and hooves have been removed. Half-carcases are derived from whole carcases by division through each cervical, dorsal, lumbar and sacral vertebra, through or along the sternum and through the ischio-pubic symphysis. These carcases or half-carcases may be with or without head, with or without the chaps, feet, flare fat, kidneys, tail or diaphragm. Half-carcases may be with or without spinal cord, brain or tongue. Carcases and half-carcases of sows may be with or without udders (mammary glands);\r\n\r\n      (b) ‘hams’ (legs), for the purposes of subheadings [0203 12 11](/subheadings/0203121100-80), [0203 22 11](/subheadings/0203221100-80), [0210 11 11](/subheadings/0210111100-80) and [0210 11 31](/subheadings/0210113100-80): the posterior (caudal) part of the half-carcase, including bones, with or without the foot, shank, rind or subcutaneous fat. The ham (leg) is separated from the rest of the half-carcase, so that it includes, at most, the last lumbar vertebra;\r\n\r\n      (c) ‘fore-ends’, for the purposes of subheadings [0203 19 11](/subheadings/0203191100-80), [0203 29 11](/subheadings/0203291100-80), [0210 19 30](/subheadings/0210193000-80) and [0210 19 60](/subheadings/0210196000-80): the anterior (cranial) part of the half-carcase without the head, with or without the chaps, including bones, with or without foot, shank, rind or subcutaneous fat. The fore-end is separated from the rest of the half-carcase, so that it includes, at most, the fifth dorsal vertebra. The upper (dorsal) part of the fore-end, whether or not containing the blade-bone and attached muscles (neckend in fresh or collar in salted condition), is considered a cut of the loin, when it is separated from the lower (ventral) part of the fore-end, at most by a cut just below the vertebral column;\r\n\r\n      (d) ‘shoulders’, for the purposes of subheadings [0203 12 19](/subheadings/0203121900-80), [0203 22 19](/subheadings/0203221900-80), [0210 11 19](/subheadings/0210111900-80) and [0210 11 39](/subheadings/0210113900-80): the lower part of the fore-end whether or not containing the blade-bone and attached muscles, including bones, with or without foot, shank, rind or subcutaneous fat. The blade-bone and attached muscles, presented separately, remain classified in this subheading as a part of the shoulder;\r\n\r\n      (e) ‘loins’, for the purposes of subheadings [0203 19 13](/subheadings/0203191300-80), [0203 29 13](/subheadings/0203291300-80), [0210 19 40](/subheadings/0210194000-80) and [0210 19 70](/subheadings/0210197000-80): the upper part of the half-carcase, extending from the first cervical vertebra to the caudal vertebrae, including bones, with or without the tenderloin, blade-bone, subcutaneous fat or rind. The loin is separated from the lower part of the half-carcase by a cut just below the vertebral column;\r\n\r\n      (f) ‘bellies’, for the purposes of subheadings [0203 19 15](/subheadings/0203191500-80), [0203 29 15](/subheadings/0203291500-80), [0210 12 11](/subheadings/0210121100-80) and [0210 12 19](/subheadings/0210121900-80): the lower part of the half-carcase situated between the ham (leg) and the shoulder, commonly known as ‘streaky’, with or without bones, but with the rind and the subcutaneous fat;\r\n\r\n      (g) ‘bacon sides’, for the purposes of subheading [0210 19 10](/subheadings/0210191000-80): the pig half-carcase without the head, cheek, chap, feet, tail, flare fat, kidney, tenderloin, blade-bone, sternum, vertebral column, pelvic bone and diaphragm;\r\n\r\n      (h) ‘spencers’, for the purposes of subheading [0210 19 10](/subheadings/0210191000-80): the bacon side without the ham, whether or not boned;\r\n\r\n      (ij) ‘three-quarter sides’, for the purposes of subheading [0210 19 20](/subheadings/0210192000-80): the bacon side without the fore-end, whether or not boned;\r\n\r\n      (k) ‘middles’, for the purposes of subheading [0210 19 20](/subheadings/0210192000-80): the bacon side without the ham and the fore-end, whether or not boned. The subheading also includes cuts of middles containing tissue of loin and belly in natural proportion to the entire middles.\r\n\r\n   B. The parts of the cuts defined in paragraph 2(A)(f) fall in the same subheadings, only if they contain rind and subcutaneous fat. If the cuts falling in subheadings [0210 11 11](/subheadings/0210111100-80), [0210 11 19](/subheadings/0210111900-80), [0210 11 31](/subheadings/0210113100-80), [0210 11 39](/subheadings/0210113900-80), [0210 19 30](/subheadings/0210193000-80) and [0210 19 60](/subheadings/0210196000-80) are derived from a bacon side from which the bones indicated under paragraph 2(A)(g) have already been removed, the lines of cutting must follow those defined under paragraph 2(A)(b), (c) and (d) accordingly; in any case, these cuts or parts thereof must contain bones.\r\n\r\n   C. Subheadings [0206 49 00](/subheadings/0206490000-80) and [0210 99 49](/subheadings/0210994900-80), include, in particular, heads or halves of heads of domestic swine, with or without the brains, cheeks or tongues, and parts thereof. The head is separated from the rest of the half-carcase as follows:\r\n\r\n      - by a straight cut parallel to the cranium; or\r\n\r\n      - by a cut parallel to the cranium up to the level of the eyes and then inclined to the front of the head, thereby causing the chaps to remain attached to the half-carcase. The cheeks, snouts and ears as well as the meat attached to the head, particularly to the rear part, are considered parts of heads. \r\n\r\n   However, the cuts of boneless meat of the fore-end, presented alone (jowls, chaps, or chaps and jowls together), fall in subheading [0203 19 55](/subheadings/0203195500-80), [0203 29 55](/subheadings/0203295500-80), [0210 19 50](/subheadings/0210195000-80) or [0210 19 81](/subheadings/0210198100-80), as the case may be.\r\n\r\n   D. For the purposes of subheadings [0209 10 11](/subheadings/0209101100-80) and [0209 10 19](/subheadings/0209101900-80), ‘subcutaneous pig fat’ has the meaning of the fatty tissue which accumulates under the rind of the pig and adheres to it, irrespective of the part of the pig from which it comes; in any case, the weight of the fatty tissue must exceed the weight of the rind. These subheadings also include subcutaneous pig fat from which the rind has been removed.\r\n\r\n   E. For the purposes of subheadings [0210 11 31](/subheadings/0210113100-80), [0210 11 39](/subheadings/0210113900-80), [0210 12 19](/subheadings/0210121900-80) and [0210 19 60](/subheadings/0210196000-80) to [0210 19 89](/subheadings/0210198900-80), products in which the water/protein ratio in the meat (nitrogen content × 6.25) is 2.8 or less is considered as ‘dried or smoked’. The nitrogen content is determined in accordance with ISO method 937-1978. \r\n\r\n3. A. For the purposes of heading 0204, the following expressions have the meanings hereby assigned to them:\r\n\r\n      (a) ‘carcases’, for the purposes of subheadings [0204 10](/subheadings/0204100000-80), [0204 21](/subheadings/0204210000-80), [0204 30](/subheadings/0204300000-80), [0204 41](/subheadings/0204410000-80), [0204 50 11](/subheadings/0204501100-80) and [0204 50 51](/subheadings/0204505100-80): whole carcases of the slaughtered animals after having been bled, eviscerated and skinned, imported with or without the heads, with or without the feet and with or without the other offal’s attached. Where carcases are imported without the heads, the latter must have been separated from the carcase at the atloidooccipital joint. When imported without the feet, the latter must have been cut off at the carpo-metacarpal or tarso-metatarsal joints;\r\n\r\n      (b) ‘half-carcases’, for the purposes of subheadings [0204 10](/subheadings/0204100000-80), [0204 21](/subheadings/0204210000-80), [0204 30](/subheadings/0204300000-80), [0204 41](/subheadings/0204410000-80), [0204 50 11](/subheadings/0204501100-80) and [0204 50 51](/subheadings/0204505100-80): the product resulting from the symmetrical division of the whole carcase through the centre of each cervical, dorsal, lumbar and sacral vertebra and through the centre of the sternum and of the ischiopubic symphysis;\r\n\r\n      (c) ‘short-forequarters’, for the purposes of subheadings [0204 22 10](/subheadings/0204221000-80), [0204 42 10](/subheadings/0204421000-80), [0204 50 13](/subheadings/0204501300-80) and [0204 50 53](/subheadings/0204505300-80): the anterior part of the carcase, with or without the breast, including all the bones and the shoulders, scrag and middle neck, cut at right angles to the backbone, with a minimum of five and a maximum of seven pairs of whole or cut ribs;\r\n\r\n      (d) ‘short-forequarters’, for the purposes of subheadings [0204 22 10](/subheadings/0204221000-80), [0204 42 10](/subheadings/0204421000-80), [0204 50 13](/subheadings/0204501300-80) and [0204 50 53](/subheadings/0204505300-80): the anterior part of the half-carcase, with or without the breast, including all the bones and the shoulder, scrag and middle neck, cut at right angles to the backbone, with a minimum of five and a maximum of seven whole or cut ribs;\r\n\r\n      (e) ‘chines and/or best ends’, for the purposes of subheadings [0204 22 30](/subheadings/0204223000-80), [0204 42 30](/subheadings/0204423000-80), [0204 50 15](/subheadings/0204501500-80) and [0204 50 55](/subheadings/0204505500-80): the remaining part of the carcase after the legs and short-forequarters have been removed, with or without the kidneys; the chines, when separated from the best ends, must include a minimum of five lumbar vertebrae; the best ends, when separated from the chines, must include a minimum of five pairs of whole or cut ribs;\r\n\r\n      (f) ‘chine and/or best end’, for the purposes of subheadings [0204 22 30](/subheadings/0204223000-80), [0204 42 30](/subheadings/0204423000-80), [0204 50 15](/subheadings/0204501500-80) and [0204 50 55](/subheadings/0204505500-80): the remaining part of the half-carcase after the legs and short-forequarters have been removed, with or without the kidney; the chine, when separated from the best end, must include a minimum of five lumbar vertebrae; the best end, when separated from the chine, must include a minimum of five whole or cut ribs;\r\n\r\n      (g) ‘legs’, for the purposes of subheadings [0204 22 50](/subheadings/0204225000-80), [0204 42 50](/subheadings/0204425000-80), [0204 50 19](/subheadings/0204501900-80) and [0204 50 59](/subheadings/0204505900-80): the rear part of the carcase, comprising all the bones and the legs and cut at right angles to the backbone at the sixth lumbar vertebra just under the ilium or at the fourth sacral vertebra through the ilium anterior to the ischiopubic symphysis;\r\n\r\n      (h) ‘legs’, for the purposes of subheadings [0204 22 50](/subheadings/0204225000-80), [0204 42 50](/subheadings/0204425000-80), [0204 50 19](/subheadings/0204501900-80) and [0204 50 59](/subheadings/0204505900-80): the rear part of the half-carcase comprising all the bones and the leg cut at right angles to the backbone at the sixth lumbar vertebra just under the ilium or at the fourth sacral vertebra through the ilium anterior to the ischio-pubic symphysis.\r\n\r\n   B. In determining the number of whole or cut ribs referred to in paragraph 3 A, only those attached to the backbone are to be taken into consideration.\r\n\r\n4. The following expressions have the meanings hereby assigned to them:\r\n\r\n   (a) ‘poultry cuts, with bone in’, for the purposes of subheadings [0207 13 20](/subheadings/0207132000-80) to [0207 13 60](/subheadings/0207136000-80), [0207 14 20](/subheadings/0207142000-80) to [0207 14 60](/subheadings/0207146000-80), [0207 26 20](/subheadings/0207262000-80) to [0207 26 70](/subheadings/0207267000-80), [0207 27 20](/subheadings/0207272000-80) to [0207 27 70](/subheadings/0207277000-80), [0207 44 21](/subheadings/0207442100-80) to [0207 44 61](/subheadings/0207446100-80), [0207 45 21](/subheadings/0207452100-80) to [0207 45 61](/subheadings/0207456100-80), [0207 54 21](/subheadings/0207542100-80) to [0207 54 61](/subheadings/0207546100-80), [0207 55 21](/subheadings/0207552100-80) to [0207 55 61](/subheadings/0207556100-80) and [0207 60 21](/subheadings/0207602100-80) to [0207 60 61](/subheadings/0207606100-80): the cuts specified therein, including all bones. Poultry cuts as referred to in (a) which have been partly boned fall in subheading [0207 13 70](/subheadings/0207137000-80), [0207 14 70](/subheadings/0207147000-80), [0207 26 80](/subheadings/0207268000-80), [0207 27 80](/subheadings/0207278000-80), [0207 44 71](/subheadings/0207447100-80), [0207 44 81](/subheadings/0207448100-80), [0207 45 71](/subheadings/0207457100-80), [0207 45 81](/subheadings/0207458100-80), [0207 54 71](/subheadings/0207547100-80), [0207 54 81](/subheadings/0207548100-80), [0207 55 71](/subheadings/0207557100-80), [0207 55 81](/subheadings/0207558100-80) and [0207 60 81](/subheadings/0207608100-80);\r\n\r\n   (b) ‘halves’, for the purposes of subheadings [0207 13 20](/subheadings/0207132000-80), [0207 14 20](/subheadings/0207142000-80), [0207 26 20](/subheadings/0207262000-80), [0207 27 20](/subheadings/0207272000-80), [0207 44 21](/subheadings/0207442100-80), [0207 45 21](/subheadings/0207452100-80), [0207 54 21](/subheadings/0207542100-80), [0207 55 21](/subheadings/0207552100-80) and [0207 60 21](/subheadings/0207602100-80): halves of poultry carcases, obtained by a longitudinal cut in a plane along the sternum and the backbone;\r\n\r\n   (c) ‘quarters’, for the purposes of subheadings [0207 13 20](/subheadings/0207132000-80), [0207 14 20](/subheadings/0207142000-80), [0207 26 20](/subheadings/0207262000-80), [0207 27 20](/subheadings/0207272000-80), [0207 44 21](/subheadings/0207442100-80), [0207 45 21](/subheadings/0207452100-80), [0207 54 21](/subheadings/0207542100-80), [0207 55 21](/subheadings/0207552100-80) and [0207 60 21](/subheadings/0207602100-80): leg quarters or breast quarters, obtained by a transversal cut of a half;\r\n\r\n   (d) ‘whole wings, with or without tips’, for the purposes of subheadings [0207 13 30](/subheadings/0207133000-80), [0207 14 30](/subheadings/0207143000-80), [0207 26 30](/subheadings/0207263000-80), [0207 27 30](/subheadings/0207273000-80), [0207 44 31](/subheadings/0207443100-80), [0207 45 31](/subheadings/0207453100-80), [0207 54 31](/subheadings/0207543100-80), [0207 55 31](/subheadings/0207553100-80) and [0207 60 31](/subheadings/0207603100-80): poultry cuts, consisting of the humerus, radius and ulna, together with the surrounding musculature. The tip, including the carpal bones, may or may not have been removed. The cuts must have been made at the joints;\r\n\r\n   (e) ‘breasts’, for the purposes of subheadings [0207 13 50](/subheadings/0207135000-80), [0207 14 50](/subheadings/0207145000-80), [0207 26 50](/subheadings/0207265000-80), [0207 27 50](/subheadings/0207275000-80), [0207 44 51](/subheadings/0207445100-80), [0207 45 51](/subheadings/0207455100-80), [0207 54 51](/subheadings/0207545100-80), [0207 55 51](/subheadings/0207555100-80) and [0207 60 51](/subheadings/0207605100-80): poultry cuts, consisting of the sternum and the ribs distributed on both sides of it, together with the surrounding musculature;\r\n\r\n   (f) ‘legs’, for the purposes of subheadings [0207 13 60](/subheadings/0207136000-80), [0207 14 60](/subheadings/0207146000-80), [0207 44 61](/subheadings/0207446100-80), [0207 45 61](/subheadings/0207456100-80), [0207 54 61](/subheadings/0207546100-80), [0207 55 61](/subheadings/0207556100-80) and [0207 60 61](/subheadings/0207606100-80): poultry cuts consisting of the femur, tibia and fibula, together with the surrounding musculature. The two cuts must have been made at the joints;\r\n\r\n   (g) ‘turkey drumsticks’, for the purposes of subheadings [0207 26 60](/subheadings/0207266000-80) and [0207 27 60](/subheadings/0207276000-80): turkey cuts, consisting of the tibia and fibula, together with the surrounding musculature. The two cuts must have been made at the joints;\r\n\r\n   (h) ‘turkey legs, other than drumsticks’, for the purposes of subheadings [0207 26 70](/subheadings/0207267000-80) and [0207 27 70](/subheadings/0207277000-80): turkey cuts, consisting of the femur together with the surrounding musculature or of the femur, tibia and fibula, together with the surrounding musculature. The two cuts must have been made at the joints;\r\n\r\n   (ij) ‘duck or goose paletots’, for the purposes of subheadings [0207 44 71](/subheadings/0207447100-80), [0207 45 71](/subheadings/0207457100-80), [0207 54 71](/subheadings/0207547100-80) and [0207 55 71](/subheadings/0207557100-80): ducks or geese, plucked and completely drawn, without heads or feet, with carcase bones (breastbone, ribs, backbone and sacrum) removed, but with the femurs, tibias and humeri.\r\n\r\n5. (a) Uncooked seasoned meats fall in [Chapter 16](/chapters/16). ‘Seasoned meat’ is uncooked meat that has been seasoned, either in depth or over the whole surface of the product, with seasoning either visible to the naked eye or clearly distinguishable by taste.\r\n\r\n   (b) Products falling in heading 0210 to which seasoning has been added during the process of preparation remain classified therein, provided that the addition of seasoning has not changed their character.\r\n\r\n6. For the purposes of subheadings [0210 11](/subheadings/0210110000-80) to [0210 93](/subheadings/0210930000-80), the term ‘meat and edible meat offal, salted or in brine’ means meat and edible meat offal deeply and homogeneously impregnated with salt in all parts and having a total salt content by weight of 1.2% or more, provided that it is the salting which ensures the long-term preservation. For the purposes of subheading [0210 99](/subheadings/0210990000-80), the term ‘meat and edible meat offal, salted or in brine’ means meat and edible meat offal deeply and homogeneously impregnated with salt in all parts and having a total salt content by weight of 1.2% or more.\r\n"
      },
      "relationships": {
        "guides": {
          "data": []
        }
      }
    },
    {
      "id": "701",
      "type": "footnote",
      "attributes": {
        "code": "TN701",
        "description": "According to the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it\nshall be prohibited to import into European Union goods originating in\nCrimea or Sevastopol.<br>The prohibition shall not apply in respect of:\n<br>(a) the execution until 26 September 2014, of trade contracts\nconcluded before 25 June 2014, or of ancillary contracts necessary for\nthe execution of such contracts, provided that the natural or legal\npersons, entity or body seeking to perform the contract have notified,\nat least 10 working days in advance, the activity or transaction to the\ncompetent authority of the Member State in which they are established.\n<br>(b) goods originating in Crimea or Sevastopol which have been made\navailable to the Ukrainian authorities for examination, for which\ncompliance with the conditions conferring entitlement to preferential\norigin has been verified and for which a certificate of origin has been\nissued in accordance with Regulation (EU) No 978/2012 and Regulation\n(EU) No 374/2014 or in accordance with the EU-Ukraine Association\nAgreement.",
        "formatted_description": "According to the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it\nshall be prohibited to import into European Union goods originating in\nCrimea or Sevastopol.<br>The prohibition shall not apply in respect of:\n<br>(a) the execution until 26 September 2014, of trade contracts\nconcluded before 25 June 2014, or of ancillary contracts necessary for\nthe execution of such contracts, provided that the natural or legal\npersons, entity or body seeking to perform the contract have notified,\nat least 10 working days in advance, the activity or transaction to the\ncompetent authority of the Member State in which they are established.\n<br>(b) goods originating in Crimea or Sevastopol which have been made\navailable to the Ukrainian authorities for examination, for which\ncompliance with the conditions conferring entitlement to preferential\norigin has been verified and for which a certificate of origin has been\nissued in accordance with Regulation (EU) No 978/2012 and Regulation\n(EU) No 374/2014 or in accordance with the EU-Ukraine Association\nAgreement."
      }
    },
    {
      "id": "20098001-duty_expression",
      "type": "duty_expression",
      "attributes": {
        "base": "",
        "formatted_base": ""
      }
    },
    {
      "id": "410",
      "type": "measure_type",
      "attributes": {
        "description": "Veterinary control",
        "measure_type_series_id": "B",
        "measure_component_applicable_code": 2,
        "order_number_capture_code": 2,
        "trade_movement_code": 0,
        "validity_end_date": null,
        "validity_start_date": "2012-04-01T00:00:00.000Z",
        "id": "410",
        "measure_type_series_description": "Entry into free circulation or exportation subject to conditions"
      }
    },
    {
      "id": "C2100270",
      "type": "legal_act",
      "attributes": {
        "validity_start_date": "2021-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "officialjournal_number": "1",
        "officialjournal_page": 1,
        "published_date": "2021-01-01",
        "regulation_code": "C0027/21",
        "regulation_url": "",
        "description": null
      }
    },
    {
      "id": "20060275",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "UN/EDIFACT certificates: Common Health Entry Document for Products\n(CHED-P) (as set out in Part 2, Section B of Annex II to Commission\nImplementing Regulation (EU) 2019/1715 (OJ L 261)) as transposed into UK\nLaw.",
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "N853",
        "duty_expression": "",
        "guidance_cds": "- Enter GBCHDyyyy. and the reference number of the CHED-P.\n\n\n- A separate N853 entry in DE 2/3 is required for each individual CHED-P\n\n\n- Note yyyy. represents the year in which the licence was issued, for\nexample GBCHD2021.\n\n\n- The '.' after the year is part of the licence completion requirements\n\n\n- Use one of the following [document status\ncodes](https://www.gov.uk/government/publications/uk-trade-tariff-document-status-codes-for-harmonised-declarations/uk-trade-tariff-document-status-codes-for-harmonised-declarations):\n<abbr title='Document attached - exhausted by (or only applies to) this\nentry (document returned to the trader)'>AE</abbr>, <abbr\ntitle='Document held by authorised trader - already attributed on\nsimplified declaration'>JA</abbr>, <abbr title='Document held by\nauthorised trader - exhausted by (or only applies to) this\nentry'>JE</abbr>, <abbr title='Lodged previously - exhausted by (or only\napplies to) this entry'>LE</abbr>, <abbr title='Lodged previously - part\nuse (applies to this and other entries)'>LP</abbr>, <abbr\ntitle='Ex-heading goods for which the document does not apply'>XX</abbr>",
        "measure_condition_class": "document",
        "monetary_unit_abbreviation": null,
        "requirement": "UN/EDIFACT certificates: UN/EDIFACT certificates: Common Health Entry\nDocument for Products (CHED-P) (as set out in Part 2, Section B of Annex\nII to Commission Implementing Regulation (EU) 2019/1715 (OJ L 261)) as\ntransposed into UK Law."
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060277",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "Exemption by virtue of Article 7 of Commission Delegated Regulation\n2019/2122 (Goods which form part of passengers' personal luggage and are\nintended for personal consumption or use)",
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "Y058",
        "duty_expression": "",
        "guidance_cds": "- Complete the statement: 'Exempt personal consignment' in the Document\nIdentifier (Second Component).\n\n\n- Document Reason (Fourth Component) must be left blank.\n\n\n- Use of this code constitutes a legal declaration that the goods meet\nthe criteria for an exemption under Article 7 of Commission Delegated\nRegulation 2019/2122 (Goods which form part of passengers personal\nluggage and are intended for personal consumption or use).\n\n\n- Sufficient evidence must be held to demonstrate eligibility for this\nexemption which must be produced on demand.\n\n\n- No document status code is required.",
        "measure_condition_class": "exemption",
        "monetary_unit_abbreviation": null,
        "requirement": "Particular provisions: Exemption by virtue of Article 7 of Commission\nDelegated Regulation 2019/2122 (Goods which form part of passengers'\npersonal luggage and are intended for personal consumption or use)"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060278",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "Exemption by virtue of Articles 3 and 4 of regulation 2019/2122 (animals\nintended for scientific purposes, research and diagnostic samples)",
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "C084",
        "duty_expression": "",
        "guidance_cds": "- Complete the statement 'regulation 2019/2122 exempt'.\n\n\n- Use of this code constitutes a legal declaration that the goods are\nnot concerned by Commission Delegated Regulation (EU) 2019/2122 adopting\na list of animals and goods exempt from official controls at border\ncontrol posts.\n\n\n- Sufficient evidence must be held in records to demonstrate eligibility\nfor this waiver which must be produced on demand.\n\n\n- No document status code is required.",
        "measure_condition_class": "unknown",
        "monetary_unit_abbreviation": null,
        "requirement": "Other certificates: Exemption by virtue of Articles 3 and 4 of\nregulation 2019/2122 (animals intended for scientific purposes, research\nand diagnostic samples)"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060281",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export not allowed after control",
        "action_code": "09",
        "certificate_description": null,
        "condition": "B: Presentation of a certificate/licence/document",
        "condition_code": "B",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "",
        "duty_expression": "",
        "guidance_cds": null,
        "measure_condition_class": "negative",
        "monetary_unit_abbreviation": null,
        "requirement": null
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060274",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "UN/EDIFACT certificates: Common Health Entry Document for Products\n(CHED-P) (as set out in Part 2, Section B of Annex II to Commission\nImplementing Regulation (EU) 2019/1715 (OJ L 261)) as transposed into UK\nLaw.",
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "N853",
        "duty_expression": "",
        "guidance_cds": "- Enter GBCHDyyyy. and the reference number of the CHED-P.\n\n\n- A separate N853 entry in DE 2/3 is required for each individual CHED-P\n\n\n- Note yyyy. represents the year in which the licence was issued, for\nexample GBCHD2021.\n\n\n- The '.' after the year is part of the licence completion requirements\n\n\n- Use one of the following [document status\ncodes](https://www.gov.uk/government/publications/uk-trade-tariff-document-status-codes-for-harmonised-declarations/uk-trade-tariff-document-status-codes-for-harmonised-declarations):\n<abbr title='Document attached - exhausted by (or only applies to) this\nentry (document returned to the trader)'>AE</abbr>, <abbr\ntitle='Document held by authorised trader - already attributed on\nsimplified declaration'>JA</abbr>, <abbr title='Document held by\nauthorised trader - exhausted by (or only applies to) this\nentry'>JE</abbr>, <abbr title='Lodged previously - exhausted by (or only\napplies to) this entry'>LE</abbr>, <abbr title='Lodged previously - part\nuse (applies to this and other entries)'>LP</abbr>, <abbr\ntitle='Ex-heading goods for which the document does not apply'>XX</abbr>",
        "measure_condition_class": "document",
        "monetary_unit_abbreviation": null,
        "requirement": "UN/EDIFACT certificates: UN/EDIFACT certificates: Common Health Entry\nDocument for Products (CHED-P) (as set out in Part 2, Section B of Annex\nII to Commission Implementing Regulation (EU) 2019/1715 (OJ L 261)) as\ntransposed into UK Law."
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060276",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": null,
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": 2,
        "condition_measurement_unit_code": "KGM",
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "",
        "duty_expression": "",
        "guidance_cds": null,
        "measure_condition_class": "threshold",
        "monetary_unit_abbreviation": null,
        "requirement": "<span>2.00</span> <abbr title='Kilogram'>kg</abbr>"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060279",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export allowed after control",
        "action_code": "29",
        "certificate_description": "Exemption by virtue of Articles 3 and 4 of regulation 2019/2122 (animals\nintended for scientific purposes, research and diagnostic samples)",
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "C084",
        "duty_expression": "",
        "guidance_cds": "- Complete the statement 'regulation 2019/2122 exempt'.\n\n\n- Use of this code constitutes a legal declaration that the goods are\nnot concerned by Commission Delegated Regulation (EU) 2019/2122 adopting\na list of animals and goods exempt from official controls at border\ncontrol posts.\n\n\n- Sufficient evidence must be held in records to demonstrate eligibility\nfor this waiver which must be produced on demand.\n\n\n- No document status code is required.",
        "measure_condition_class": "unknown",
        "monetary_unit_abbreviation": null,
        "requirement": "Other certificates: Exemption by virtue of Articles 3 and 4 of\nregulation 2019/2122 (animals intended for scientific purposes, research\nand diagnostic samples)"
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "20060280",
      "type": "measure_condition",
      "attributes": {
        "action": "Import/export not allowed after control",
        "action_code": "09",
        "certificate_description": null,
        "condition": "E: The quantity or the price per unit declared, as appropriate, is equal\nor less than the specified maximum, or presentation of the required\ndocument",
        "condition_code": "E",
        "condition_duty_amount": null,
        "condition_measurement_unit_code": null,
        "condition_measurement_unit_qualifier_code": null,
        "condition_monetary_unit_code": null,
        "document_code": "",
        "duty_expression": "",
        "guidance_cds": null,
        "measure_condition_class": "negative",
        "monetary_unit_abbreviation": null,
        "requirement": null
      },
      "relationships": {
        "measure_condition_components": {
          "data": []
        }
      }
    },
    {
      "id": "c9982ee465cf7dcc85a926f409a91f94",
      "type": "measure_condition_permutation",
      "relationships": {
        "measure_conditions": {
          "data": [
            {
              "id": "20060275",
              "type": "measure_condition"
            }
          ]
        }
      }
    },
    {
      "id": "4d3b48c99972647c2f067a667703f311",
      "type": "measure_condition_permutation",
      "relationships": {
        "measure_conditions": {
          "data": [
            {
              "id": "20060278",
              "type": "measure_condition"
            }
          ]
        }
      }
    },
    {
      "id": "2cbaf3625f27ae2236f643c9def204eb",
      "type": "measure_condition_permutation",
      "relationships": {
        "measure_conditions": {
          "data": [
            {
              "id": "20060277",
              "type": "measure_condition"
            },
            {
              "id": "20060276",
              "type": "measure_condition"
            }
          ]
        }
      }
    },
    {
      "id": "20098001-n/a",
      "type": "measure_condition_permutation_group",
      "attributes": {
        "condition_code": "n/a"
      },
      "relationships": {
        "permutations": {
          "data": [
            {
              "id": "c9982ee465cf7dcc85a926f409a91f94",
              "type": "measure_condition_permutation"
            },
            {
              "id": "4d3b48c99972647c2f067a667703f311",
              "type": "measure_condition_permutation"
            },
            {
              "id": "2cbaf3625f27ae2236f643c9def204eb",
              "type": "measure_condition_permutation"
            }
          ]
        }
      }
    },
    {
      "id": "20098001",
      "type": "measure",
      "attributes": {
        "id": 20098001,
        "origin": "eu",
        "effective_start_date": "2021-01-01T00:00:00.000Z",
        "effective_end_date": null,
        "import": true,
        "export": false,
        "excise": false,
        "vat": false,
        "reduction_indicator": null,
        "meursing": false,
        "resolved_duty_expression": "",
        "universal_waiver_applies": false
      },
      "relationships": {
        "duty_expression": {
          "data": {
            "id": "20098001-duty_expression",
            "type": "duty_expression"
          }
        },
        "measure_type": {
          "data": {
            "id": "410",
            "type": "measure_type"
          }
        },
        "legal_acts": {
          "data": [
            {
              "id": "C2100270",
              "type": "legal_act"
            }
          ]
        },
        "measure_conditions": {
          "data": [
            {
              "id": "20060275",
              "type": "measure_condition"
            },
            {
              "id": "20060277",
              "type": "measure_condition"
            },
            {
              "id": "20060278",
              "type": "measure_condition"
            },
            {
              "id": "20060281",
              "type": "measure_condition"
            },
            {
              "id": "20060274",
              "type": "measure_condition"
            },
            {
              "id": "20060276",
              "type": "measure_condition"
            },
            {
              "id": "20060279",
              "type": "measure_condition"
            },
            {
              "id": "20060280",
              "type": "measure_condition"
            }
          ]
        },
        "measure_condition_permutation_groups": {
          "data": [
            {
              "id": "20098001-n/a",
              "type": "measure_condition_permutation_group"
            }
          ]
        },
        "measure_components": {
          "data": []
        },
        "resolved_measure_components": {
          "data": []
        },
        "national_measurement_units": {
          "data": []
        },
        "geographical_area": {
          "data": {
            "id": "1008",
            "type": "geographical_area"
          }
        },
        "excluded_countries": {
          "data": [
            {
              "id": "AT",
              "type": "geographical_area"
            },
            {
              "id": "BE",
              "type": "geographical_area"
            },
            {
              "id": "BG",
              "type": "geographical_area"
            },
            {
              "id": "CH",
              "type": "geographical_area"
            },
            {
              "id": "CY",
              "type": "geographical_area"
            },
            {
              "id": "CZ",
              "type": "geographical_area"
            },
            {
              "id": "DE",
              "type": "geographical_area"
            },
            {
              "id": "DK",
              "type": "geographical_area"
            },
            {
              "id": "EE",
              "type": "geographical_area"
            },
            {
              "id": "ES",
              "type": "geographical_area"
            },
            {
              "id": "EU",
              "type": "geographical_area"
            },
            {
              "id": "FI",
              "type": "geographical_area"
            },
            {
              "id": "FR",
              "type": "geographical_area"
            },
            {
              "id": "GR",
              "type": "geographical_area"
            },
            {
              "id": "HR",
              "type": "geographical_area"
            },
            {
              "id": "HU",
              "type": "geographical_area"
            },
            {
              "id": "IE",
              "type": "geographical_area"
            },
            {
              "id": "IS",
              "type": "geographical_area"
            },
            {
              "id": "IT",
              "type": "geographical_area"
            },
            {
              "id": "LI",
              "type": "geographical_area"
            },
            {
              "id": "LT",
              "type": "geographical_area"
            },
            {
              "id": "LU",
              "type": "geographical_area"
            },
            {
              "id": "LV",
              "type": "geographical_area"
            },
            {
              "id": "MT",
              "type": "geographical_area"
            },
            {
              "id": "NL",
              "type": "geographical_area"
            },
            {
              "id": "NO",
              "type": "geographical_area"
            },
            {
              "id": "PL",
              "type": "geographical_area"
            },
            {
              "id": "PT",
              "type": "geographical_area"
            },
            {
              "id": "RO",
              "type": "geographical_area"
            },
            {
              "id": "SE",
              "type": "geographical_area"
            },
            {
              "id": "SI",
              "type": "geographical_area"
            },
            {
              "id": "SK",
              "type": "geographical_area"
            }
          ]
        },
        "footnotes": {
          "data": [
            {
              "id": "CD624",
              "type": "footnote"
            },
            {
              "id": "CD686",
              "type": "footnote"
            },
            {
              "id": "CD737",
              "type": "footnote"
            }
          ]
        },
        "order_number": {
          "data": null
        }
      },
      "meta": {
        "duty_calculator": {
          "source": "uk",
          "scheme_code": null
        }
      }
    },
    {
      "id": "1011",
      "type": "geographical_area",
      "attributes": {
        "id": "1011",
        "description": "ERGA OMNES",
        "geographical_area_id": "1011"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": [
            {
              "id": "AD",
              "type": "geographical_area"
            }
          ]
        }
      }
    },
    {
      "id": "28267",
      "type": "heading",
      "attributes": {
        "goods_nomenclature_item_id": "0208000000",
        "description": "Other meat and edible meat offal, fresh, chilled or frozen",
        "formatted_description": "Other meat and edible meat offal, fresh, chilled or frozen",
        "description_plain": "Other meat and edible meat offal, fresh, chilled or frozen"
      }
    },
    {
      "id": "28275",
      "type": "commodity",
      "attributes": {
        "producline_suffix": "80",
        "description": "Other",
        "number_indents": 1,
        "goods_nomenclature_item_id": "0208900000",
        "formatted_description": "Other",
        "description_plain": "Other"
      }
    },
    {
      "id": "4176a8c3415ef099c881ffde5d69f861",
      "type": "import_trade_summary",
      "attributes": {
        "basic_third_country_duty": "<span>44.00</span> GBP / <abbr title='Hectokilogram'>100 kg</abbr>",
        "preferential_tariff_duty": "1.00 %",
        "preferential_quota_duty": "1.00 %"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the commodity. It may be used to uniquely identify a commodity.
data:type|string|false|the type of object, i.e. `commodity`
data:attributes|[ReferencedCommodity](#schemareferencedcommodity)|false|The commodity's attributes, as a [referenced commodity object](/reference.html#referencedcommodity "see referenced commodity object")
data:relationships|object|false|Zero, one or many [referenced section](/reference.html#referencedsection "see referenced section object") objects, [referenced chapter](/reference.html#referencedchapter "see referenced chapter object") objects, [referenced heading](/reference.html#referencedheading "see referenced heading object") objects, [referenced measure](/reference.html#referencedmeasure "see referenced measure object") objects, and [referenced footnote](/reference.html#referencedfootnote "see referenced footnote object") objects that are related to this heading. May include parent objects.
included|[object]|false|Zero, one or many [referenced commodity objects](/reference.html#referencedcommodity "see referenced commodity object"), [referenced chapter objects](/reference.html#referencedchapter "see referenced chapter object"), [referenced guide objects](/reference.html#referencedguide "see referenced guide object"), [referenced measure objects](/reference.html#referencedmeasure "see referenced measure object"), [referenced geographical area objects objects](/reference.html#referencedgeographicalarea "see referenced geographical area object").

## QuotaSearch

<a name="schemaquotasearch"></a>

Search for quota definitions with a variety of parameters

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "12202",
      "type": "definition",
      "attributes": {
        "quota_definition_sid": 12202,
        "quota_order_number_id": "091784",
        "initial_volume": "36300000.0",
        "validity_start_date": "2018-12-01T00:00:00.000Z",
        "validity_end_date": "2019-05-31T00:00:00.000Z",
        "status": "Open",
        "description": "Commission Regulation (EU) No 449/2010 amending Council Regulation (EC) No 747/2001 and repealing Regulations (EC) No 2276/2003 (EC) No 995/2005 (EC) No 1002/2007 and (EC) No 1455/2007",
        "balance": "36300000.0",
        "measurement_unit": "Kilogram (kg)",
        "monetary_unit": null,
        "measurement_unit_qualifier": null,
        "last_allocation_date": null,
        "suspension_period_start_date": null,
        "suspension_period_end_date": null,
        "blocking_period_start_date": null,
        "blocking_period_end_date": null
      },
      "relationships": {
        "order_number": {
          "data": {
            "id": "091784",
            "type": "order_number"
          }
        },
        "measures": {
          "data": [
            {
              "id": "3659283",
              "type": "measure"
            },
            {
              "id": "3659284",
              "type": "measure"
            },
            {
              "id": "3659285",
              "type": "measure"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "3659283",
      "type": "measure",
      "attributes": {
        "goods_nomenclature_item_id": "0805102200"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "3659284",
      "type": "measure",
      "attributes": {
        "goods_nomenclature_item_id": "0805102400"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "3659285",
      "type": "measure",
      "attributes": {
        "goods_nomenclature_item_id": "0805102800"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "091784",
      "type": "order_number",
      "attributes": {
        "number": "091784"
      },
      "relationships": {
        "geographical_area": {
          "data": {
            "id": "EG",
            "type": "geographical_area"
          }
        }
      }
    },
    {
      "id": "EG",
      "type": "geographical_area",
      "attributes": {
        "id": "EG",
        "description": "Egypt",
        "geographical_area_id": "EG"
      }
    }
  ],
  "meta": {
    "pagination": {
      "page": 1,
      "per_page": 5,
      "total_count": 1
    }
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the definition. It may be used to uniquely identify a definition.
data:type|string|false|the type of object, i.e. `definition`
data:attributes|[ReferencedDefinition](#schemareferenceddefinition)|false|The definition's attributes, as a [referenced definition object](/reference.html#referenceddefinition "see referenced definition object")
data:relationships|object|false|Zero, one or many [referenced section objects](/reference.html#referencedsection "see referenced section object"), [referenced chapter objects](/reference.html#referencedchapter "see referenced chapter object"), and [referenced footnote objects](/reference.html#referencedheading "see referenced footnote object") that are related to this heading. May include parent objects.
meta:pagination|object|false|Pagination info about current request. `page` - current page, `per_page` - maximum records for single page, `total_count` - count of records for current search request.
included|[object]|false|Zero, one or many [referenced commodity objects](/reference.html#referencedcommodity "see referenced commodity object"), [referenced chapter objects](/reference.html#referencedchapter "see referenced chapter object"), [referenced guide objects](/reference.html#referencedguide "see referenced guide object"), [referenced measure objects](/reference.html#referencedmeasure "see referenced measure object"), [referenced geographical area objects objects](/reference.html#referencedgeographicalarea "see referenced geographical area object").

## Additional Codes

## AdditionalCodeSearch

<a name="schemaadditionalcodesearch"></a>

Search for additional_codes with parameters

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "11486",
      "type": "additional_code",
      "attributes": {
        "additional_code_type_id": "B",
        "additional_code": "200",
        "code": "B200",
        "description": "Kim Hin Ceramics (Shanghai) Co. Ltd",
        "formatted_description": "Kim Hin Ceramics (Shanghai) Co. Ltd"
      },
      "relationships": {
        "measures": {
          "data": [
            {
              "id": "3625236",
              "type": "measure"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "3625236",
      "type": "measure",
      "attributes": {
        "id": 3625236,
        "validity_start_date": "1991-07-01T00:00:00.000Z",
        "validity_end_date": "1992-03-31T00:00:00.000Z",
        "goods_nomenclature_item_id": "7317000000"
      },
      "relationships": {
        "goods_nomenclature": {
          "data": {
            "id": "46392",
            "type": "goods_nomenclature"
          }
        }
      }
    },
    {
      "id": "46392",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "7317000000",
        "goods_nomenclature_sid": 46392,
        "number_indents": 0,
        "description": "Nails, tacks, drawing pins, corrugated nails, staples ...",
        "productline_suffix": "80"
      }
    }
  ],
  "meta": {
    "pagination": {
      "page": 1,
      "per_page": 5,
      "total_count": 1
    }
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the additional_code. It may be used to uniquely identify an additional_code. For additional_codes, this value is `attributes:code`.
data:type|string|false|the type of object, i.e. `additional_code`
data:attributes|[ReferencedAdditionalCode](#schemareferencedadditionalcode)|false|The additional_code's attributes, as a [referenced additional_code object](/reference.html#referencedadditional_code "see referenced additional_code object")
data:relationships|object|false|Zero, one or many [referenced goods_nomenclature objects](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object").
included|[object]|false|Zero, one or many [referenced goods_nomenclature objects](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object").

## AdditionalCodeTypes

<a name="schemaadditionalcodetypes"></a>

List of additional_code_types

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "B",
      "type": "additional_code_type",
      "attributes": {
        "additional_code_type_id": "B",
        "description": "Anti-dumping/countervailing"
      }
    },
    {
      "id": "P",
      "type": "additional_code_type",
      "attributes": {
        "additional_code_type_id": "B",
        "description": "Refund for basic products"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the additional_code_type. It may be used to uniquely identify an additional_code_type.
data:type|string|false|the type of object, i.e. `additional_code_type`
data:attributes|[ReferencedAdditionalCodeType](#schemareferencedadditionalcodetype)|false|The additional_code_type's attributes, as a [referenced additional_code_type object](/reference.html#referencedadditional_code_type "see referenced additional_code_type object")

## Certificates

<a name="schemacertificates"></a>

List of the certificates

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "D005",
    "type": "certificate",
    "attributes": {
      "certificate_type_code": "D",
      "certificate_code": "005",
      "description": "Commercial invoice within the framework of undertakings",
      "formatted_description": "Commercial invoice within the framework of undertakings"
    },
    "relationships": {
      "measures": {
        "data": [
          {
            "id": "2124342",
            "type": "measure"
          },
          {
            "id": "2250100",
            "type": "measure"
          }
        ]
      }
    }
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The unique `id` of the certificate. This value is equal to `attributes:certificate_type_code + attributes:certificate_code`.
data:type|string|false|the type of object, i.e. `certificate`
data:attributes|[ReferencedCertificate](#schemareferencedcertificate)|false|The certificate's attributes, as a [referenced certificate object](/reference.html#referencedcertificate "see referenced certificate object")

## CertificateSearch

<a name="schemacertificatesearch"></a>

Search for certificates with parameters

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "D005",
    "type": "certificate",
    "attributes": {
      "certificate_type_code": "D",
      "certificate_code": "005",
      "description": "Commercial invoice within the framework of undertakings",
      "formatted_description": "Commercial invoice within the framework of undertakings"
    },
    "relationships": {
      "measures": {
        "data": [
          {
            "id": "2124342",
            "type": "measure"
          },
          {
            "id": "2250100",
            "type": "measure"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "71692",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "7307191010",
        "goods_nomenclature_sid": 71692,
        "number_indents": 4,
        "description": "Threaded malleable cast iron tube or pipe fittings",
        "productline_suffix": "80"
      }
    }
  ],
  "meta": {
    "pagination": {
      "page": 1,
      "per_page": 5,
      "total_count": 1
    }
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the certificate. It may be used to uniquely identify a certificate. For certificates, this value is `attributes:certificate_type_code + attributes:certificate_code`.
data:type|string|false|the type of object, i.e. `certificate`
data:attributes|[ReferencedCertificate](#schemareferencedcertificate)|false|The certificate's attributes, as a [referenced certificate object](/reference.html#referencedcertificate "see referenced certificate object")
data:relationships|object|false|Zero, one or many [referenced goods_nomenclature objects](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object").
included|[object]|false|Zero, one or many [referenced goods_nomenclature objects](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"). May include parent objects.

## CertificateTypes

<a name="schemacertificatetypes"></a>

List of certificate_types

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "Z",
      "type": "certificate_type",
      "attributes": {
        "certificate_type_code": "Z",
        "description": "More certificates"
      }
    },
    {
      "id": "X",
      "type": "certificate_type",
      "attributes": {
        "certificate_type_code": "X",
        "description": "Export licence"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the certificate_type. It may be used to uniquely identify an certificate_type.
data:type|string|false|the type of object, i.e. `certificate_type`
data:attributes|[ReferencedCertificateType](#schemareferencedcertificatetype)|false|The certificate_type's attributes, as a [referenced certificate_type object](/reference.html#referencedcertificate_type "see referenced certificate_type object")

## Measures

## MeasureTypes

<a name="schemameasuretypes"></a>

List of measure type

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "1",
      "type": "measure_type",
      "attributes": {
        "description": "Supplementary unit import",
        "measure_type_series_description": "Supplementary unit",
        "validity_end_date": null,
        "validity_start_date": "1972-01-01T00:00:00.000Z",
        "measure_type_series_id": "O",
        "measure_component_applicable_code": 1,
        "order_number_capture_code": 2,
        "trade_movement_code": 0
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The unique `id` of the measure_type.
data:type|string|false|the type of object, i.e. `measure_type`
data:attributes|[ReferencedMeasureType](#schemareferencedmeasuretype)|false|The measure_type's attributes, as a [referenced measure_type object](/reference.html#referencedmeasuretype "see referenced measure_type object")

## ReferencedMeasureType

<a name="schemareferencedmeasuretype"></a>

A measure_type object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "description": "Supplementary unit import",
  "measure_type_series_id": "O",
  "measure_component_applicable_code": 1,
  "order_number_capture_code": 2,
  "trade_movement_code": 0,
  "validity_end_date": null,
  "validity_start_date": "1972-01-01T00:00:00.000Z",
  "id": "110",
  "measure_type_series_description": "Supplementary unit"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
description|string|false|The description for the measure type.
measure_type_series_description|string|false|The description of the measure type series.
validity_start_date|string(date-time)|false|The validity start date of the measure type.
validity_end_date|string(date-time)|false|The validity end date of the measure type.
measure_type_series_id|string(byte)|false|A single char representing measure type series.
measure_component_applicable_code|integer|false|The applicable code of the measure.
order_number_capture_code|integer|false|The order number of capture code.
trade_movement_code|integer|false|The code of trade movement.

## Measure

<a name="schemameasure"></a>

A measure object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "20098001",
    "type": "measure",
    "attributes": {
      "origin": "eu",
      "import": true,
      "export": false,
      "excise": false,
      "vat": false,
      "effective_start_date": "2021-01-01T00:00:00.000Z",
      "effective_end_date": null
    },
    "relationships": {
      "goods_nomenclature": {
        "data": {
          "id": "7317000000",
          "type": "goods_nomenclature"
        }
      },
      "geographical_area": {
        "data": {
          "id": "EG",
          "type": "geographical_area"
        }
      },
      "measure_type": {
        "data": {
          "id": "410",
          "type": "measure_type"
        }
      },
      "measure_conditions": {
        "data": [
          {
            "id": "20060275",
            "type": "measure_condition"
          },
          {
            "id": "20060277",
            "type": "measure_condition"
          }
        ]
      },
      "measure_excluded_geographical_areas": {
        "data": []
      },
      "quota_order_number": {
        "data": null
      },
      "footnotes": {
        "data": [
          {
            "id": "CD624",
            "type": "footnote"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "7317000000",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "7317000000",
        "goods_nomenclature_sid": 46392,
        "number_indents": 0,
        "description": "Nails, tacks, drawing pins, corrugated nails, staples ...",
        "productline_suffix": "80"
      }
    },
    {
      "id": "EG",
      "type": "geographical_area",
      "attributes": {
        "id": "EG",
        "description": "Egypt",
        "geographical_area_id": "EG"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The unique `id` of the measure.
data:type|string|false|the type of object, i.e. `measure`
data:attributes|Unknown|false|No description
data:relationships|object|false|Zero, one or many [referenced goods_nomenclature objects](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object"),<br> [referenced geographical_area objects](/reference.html#referencedgeographicalarea "see referenced geographical_area object"),<br> [referenced measure_type objects](/reference.html#referencedmeasuretype "see referenced measure_type object"),<br> [referenced measure_condition objects](/reference.html#referencedmeasurecondition "see referenced measure_condition object"),<br> [referenced footnote objects](/reference.html#referencedfootnote "see referenced footnote object"),<br> [referenced additional_code objects](/reference.html#referencedadditionalcode "see referenced additional_code object"),<br> measure_excluded_geographical_area duty_expression<br> legal_act objects<br> order_number objects<br> measure_generating_legal_act<br> justification_legal_act

## MeasureActions

<a name="schemameasureactions"></a>

List of measure actions

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "1",
      "type": "measure_action",
      "attributes": {
        "description": "Import allowed",
        "validity_end_date": null,
        "validity_start_date": "1972-01-01T00:00:00.000Z"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The unique `id` of the measure_action.
data:type|string|false|the type of object (`measure_action`)
data:attributes|[ReferencedMeasureAction](#schemareferencedmeasureaction)|false|The measure_action's attributes, as a [referenced measure_action object](/reference.html#referencedmeasureaction "see referenced measure_action object")

## ReferencedMeasureAction

<a name="schemareferencedmeasureaction"></a>

A measure_action object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "description": "measure_action",
  "validity_end_date": null,
  "validity_start_date": "1972-01-01T00:00:00.000Z"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
description|string|false|The description for the measure action.
validity_start_date|string(date-time)|false|The validity start date of the measure action.
validity_end_date|string(date-time)|false|The validity end date of the measure action.

## MeasureConditionCodes

<a name="schemameasureconditioncodes"></a>

List of measure condition codes

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "1",
      "type": "measure_condition_code",
      "attributes": {
        "description": "Presentation of a certificate/licence/document",
        "validity_end_date": null,
        "validity_start_date": "1993-01-01T00:00:00.000Z"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The unique `id` of the measure_condition_code.
data:type|string|false|the type of object (`measure_condition_code`)
data:attributes|[ReferencedMeasureConditionCode](#schemareferencedmeasureconditioncode)|false|The measure_condition_code's attributes, as a [referenced measure_action object](/reference.html#referencedmeasureconditioncode "see referenced_condition_code object")

## ReferencedMeasureConditionCode

<a name="schemareferencedmeasureconditioncode"></a>

A measure_condition_code object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "description": "Presentation of a certificate/licence/document",
  "validity_end_date": null,
  "validity_start_date": "1993-01-01T00:00:00.000Z"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
description|string|false|The description for the measure condition code.
validity_start_date|string(date-time)|false|The validity start date of the measure condition code.
validity_end_date|string(date-time)|false|The validity end date of the measure condition code.

## Footnotes

## FootnoteSearch

<a name="schemafootnotesearch"></a>

Search for footnotes with parameters

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": {
    "id": "05737",
    "type": "footnote",
    "attributes": {
      "code": "05737",
      "footnote_type_id": "05",
      "footnote_id": "737",
      "description": "For wine not exceeding 22% vol enter default value \"0.00\" in the 3rd quantity. Wine exceeding 22% vol requires the actual litres of 100% alcohol",
      "formatted_description": "For wine not exceeding 22% vol enter default value \"0.00\" in the 3rd quantity. Wine exceeding 22% vol requires the actual litres of 100% alcohol",
      "extra_large_measures": false
    },
    "relationships": {
      "goods_nomenclatures": {
        "data": [
          {
            "id": "34659",
            "type": "goods_nomenclature"
          }
        ]
      }
    }
  },
  "included": [
    {
      "id": "34659",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "2204101900",
        "goods_nomenclature_sid": 34658,
        "description": "Other",
        "number_indents": 3,
        "productline_suffix": "80"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the footnote. It may be used to uniquely identify a footnote. For footnotes, this value is `attributes:code`.
data:type|string|false|the type of object, i.e. `footnote`
data:attributes|[ReferencedFootnote](#schemareferencedfootnote)|false|The footnote's attributes, as a [referenced footnote object](/reference.html#referencedfootnote "see referenced footnote object")
data:relationships|object|false|Zero, one or many [referenced goods_nomenclature objects](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object") that are related to this footnote. May include parent objects.
included|[object]|false|Zero, one or many [referenced goods_nomenclature objects](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object") that are related to this footnote. May include parent objects.

## FootnoteTypes

<a name="schemafootnotetypes"></a>

List of footnote_types

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "WR",
      "type": "footnote_type",
      "attributes": {
        "footnote_type_id": "WR",
        "description": "Wine reference"
      }
    },
    {
      "id": "TP",
      "type": "footnote_type",
      "attributes": {
        "footnote_type_id": "TP",
        "description": "Dynamic footnote"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the footnote_type. It may be used to uniquely identify an footnote_type.
data:type|string|false|the type of object, i.e. `footnote_type`
data:attributes|[ReferencedFootnoteType](#schemareferencedfootnotetype)|false|The footnote_type's attributes, as a [referenced footnote_type object](/reference.html#referencedfootnote_type "see referenced footnote_type object")

## GoodsNomenclatures

<a name="schemagoodsnomenclatures"></a>

Commodity codes

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "27623",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0100000000",
        "goods_nomenclature_sid": 27623,
        "description": "LIVE ANIMALS",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/chapters/01"
      }
    },
    {
      "id": "27810",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101000000",
        "goods_nomenclature_sid": 27624,
        "description": "Live horses, asses, mules and hinnies",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/headings/0101"
      }
    },
    {
      "id": "93797",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101210000",
        "goods_nomenclature_sid": 93797,
        "description": "Horses",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/commodities/0101210000"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|the unique `id` of the goods_nomenclature
data:type|string|false|the type of object, i.e. `goods_nomenclature`
data:attributes|[ReferencedGoodsNomenclature](#schemareferencedgoodsnomenclature)|false|The goods_nomeclature's attributes, as a [referenced goods_nomenclature object](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object")

## GoodsNomenclaturesExtended

<a name="schemagoodsnomenclaturesextended"></a>

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "27623",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0100000000",
        "goods_nomenclature_sid": 27623,
        "description": "LIVE ANIMALS",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/chapters/01",
        "formatted_description": "Live animals",
        "validity_start_date": "1971-12-31T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": null
        }
      }
    },
    {
      "id": "27810",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101000000",
        "goods_nomenclature_sid": 27624,
        "description": "Live horses, asses, mules and hinnies",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/headings/0101",
        "formatted_description": "Live horses, asses, mules and hinnies",
        "validity_start_date": "1972-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27623",
            "type": "goods_nomenclature"
          }
        }
      }
    },
    {
      "id": "93797",
      "type": "goods_nomenclature",
      "attributes": {
        "goods_nomenclature_item_id": "0101210000",
        "goods_nomenclature_sid": 93797,
        "description": "Horses",
        "number_indents": 0,
        "productline_suffix": "80",
        "href": "/uk/api/subheadings/0101210000-80",
        "formatted_description": "Horses",
        "validity_start_date": "2012-01-01T00:00:00.000Z",
        "validity_end_date": null,
        "declarable": false
      },
      "relationships": {
        "parent": {
          "data": {
            "id": "27810",
            "type": "goods_nomenclature"
          }
        }
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|the unique `id` of the goods_nomenclature
data:type|string|false|the type of object, i.e. `goods_nomenclature`
data:attributes|[ReferencedGoodsNomenclature](#schemareferencedgoodsnomenclature)|false|The goods_nomeclature's attributes, as a [referenced goods_nomenclature object](/reference.html#referencedgoodsnomenclature "see referenced goods_nomenclature object")

## SearchReferences

<a name="schemasearchreferences"></a>

Curated terms and associated headings, subheadings or commodity codes

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "888",
      "type": "search_reference",
      "attributes": {
        "title": "cabinets, filing of base metal",
        "referenced_id": "8304",
        "referenced_class": "Heading",
        "productline_suffix": "80"
      }
    },
    {
      "id": "886",
      "type": "search_reference",
      "attributes": {
        "title": "cabinets (furniture)",
        "referenced_id": "9403",
        "referenced_class": "Heading",
        "productline_suffix": "80"
      }
    },
    {
      "id": "887",
      "type": "search_reference",
      "attributes": {
        "title": "cabinets (radio and television)",
        "referenced_id": "8529",
        "referenced_class": "Heading",
        "productline_suffix": "80"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|the unique `id` of the search_reference
data:type|string|false|the type of object, i.e. `search_reference`
data:attributes|[ReferencedSearchReference](#schemareferencedsearchreference)|false|The search_reference's attributes, as a [referenced search_reference object](/reference.html#referencedsearchreference "see referenced search_reference object")

## GeographicalAreas

<a name="schemageographicalareas"></a>

A geographical area has a specific code (the `geographical_area_id`), which is unique.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "GB",
      "type": "geographical_area",
      "attributes": {
        "id": "GB",
        "description": "United Kingdom",
        "geographical_area_id": "GB"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": []
        }
      }
    },
    {
      "id": "2501",
      "type": "geographical_area",
      "attributes": {
        "id": "2501",
        "description": "Countries not members of the WTO",
        "geographical_area_id": "2501"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": [
            {
              "id": "AD",
              "type": "geographical_area"
            },
            {
              "id": "AI",
              "type": "geographical_area"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "AD",
      "type": "geographical_area",
      "attributes": {
        "id": "AD",
        "description": "Andorra",
        "geographical_area_id": "AD"
      },
      "relationships": {
        "children_geographical_areas": {
          "data": []
        }
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The `id` of the geographical area. It may be used to uniquely identify a geographical area.
data:type|string|false|the type of object, i.e. `geographical_area`
data:attributes|[ReferencedGeographicalArea](#schemareferencedgeographicalarea)|false|The geographical area's attributes, as a [referenced geographical area object](/reference.html#referencedgeographicalarea "see referenced geographical area object")
data:relationships|object|false|Zero, one or many [referenced geographical area](/reference.html#referencedgeographicalarea "see referenced geographical area object") objects.
included|[object]|false|Zero, one or many [referenced geographical area objects](/reference.html#referencedgeographicalarea "see referenced geographical area object").

## ReferencedSection

<a name="schemareferencedsection"></a>

A section object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": 1,
  "title": "Live animals; animal products",
  "numeral": "I",
  "position": 1,
  "chapter_from": "01",
  "chapter_to": "05",
  "section_note_id": 1,
  "section_note": "* 1\\. Any reference in this section to a particular genus or species of an animal, except where the context otherwise requires, includes a reference to the young of that genus or species.\r\n* 2\\. Except where the context otherwise requires, throughout the nomenclature any reference to 'dried' products also covers products which have been dehydrated, evaporated or freeze-dried.\r\n"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|integer|false|The `id` of the section. It may be used to uniquely identify a section and request its section_note from the API.
title|string|false|The `title` of the section.
numeral|string|false|The `numeral` of the section, as a roman numeral
position|integer|false|The `position` of the section, or the order in which this section appears in the tariff. It may be used to uniquely identify a section and request it from the API.
chapter_from|string|false|The `chapter_from` of the section, the first chapter of this section.
chapter_to|string|false|The `chapter_to` of the section, the first chapter of this section.
section_note_id|integer|false|The `section_note_id` of the section. Not all sections have a note.
section_note|string|false|The `section_note_id` of the section. Not all sections have a note.

## ReferencedChapter

<a name="schemareferencedchapter"></a>

A chapter object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "goods_nomenclature_item_id": "0100000000",
  "description": "LIVE ANIMALS",
  "formatted_description": "Live animals",
  "headings_from": "0101",
  "headings_to": "0106",
  "chapter_note_id": 46,
  "chapter_note": "* 1\\. This chapter covers all live animals except:\r\n  * (a) fish and crustaceans, molluscs and other aquatic invertebrates, of heading 0301, 0306, 0307 or 0308;\r\n  * (b) cultures of micro-organisms and other products of heading 3002; and\r\n  * (c) animals of heading 9508.",
  "section_id": 1
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
goods_nomenclature_item_id|string|false|The `goods_nomenclature_sid` of the chapter. This is a unique identifier.
goods_nomenclature_sid|integer|false|The `goods_nomenclature_sid` of the chapter. This is a unique identifier.
description|string|false|The `description` of the chapter.
formatted_description|string|false|The `formatted_description` of the chapter.
headings_from|string|false|The `headings_from` of the chapter, or the first heading in this chapter
headings_to|string|false|The `headings_to` of the chapter, or the last heading in this chapter
chapter_note|string|false|The `chapter_note` of the chapter. Not all chapters have a note.
chapter_note_id|integer|false|The `chapter_note_id` of the chapter. This is a unique identifier for a chapter_note.
section_id|integer|false|The `section_id` of the section containing this chapter.

## ReferencedHeading

<a name="schemareferencedheading"></a>

A heading object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "goods_nomenclature_item_id": "0201000000",
  "description": "Meat of bovine animals, fresh or chilled",
  "bti_url": "http://ec.europa.eu/taxation_customs/dds2/ebti/ebti_consultation.jsp?Lang=en&nomenc=0201000000&Expand=true",
  "formatted_description": "Meat of bovine animals, fresh or chilled"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
goods_nomenclature_sid|integer|false|The `goods_nomenclature_sid` of the heading. This is a unique identifier.
goods_nomenclature_item_id|string|false|The `goods_nomenclature_item_id` of the heading. This is a unique identifier.
declarable|boolean|false|Whether this heading is `declarable`.
description|string|false|The text `description` of the heading.
producline_suffix|string|false|The `producline_suffix` of the heading.
leaf|boolean|false|Whether this heading is a `leaf`.
description_plain|string|false|The `description_plain` of the heading.
formatted_description|string|false|The `formatted_description` of the heading, which may be suitable for presentation to the end user.
bti_url|string|false|a URL for more information about this heading

## ReferencedHeadingCommodity

<a name="schemareferencedheadingcommodity"></a>

A commodity object referenced in a heading object.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "description": "Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)",
  "number_indents": 2,
  "goods_nomenclature_item_id": "0304320000",
  "leaf": false,
  "goods_nomenclature_sid": 94959,
  "formatted_description": "Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)",
  "description_plain": "Catfish (Pangasius spp., Silurus spp., Clarias spp., Ictalurus spp.)",
  "producline_suffix": "80",
  "parent_sid": 94957
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
description|string|false|The `description` of the commodity.
description_plain|string|false|The `description_plain` of the commodity.
formatted_description|string|false|The `formatted_description` of the commodity, which may be suitable for presentation to the end user.
goods_nomenclature_item_id|string|false|The `goods_nomenclature_item_id` of the commodity.
number_indents|integer|false|The `number_indents` of the commodity.
producline_suffix|string|false|The `producline_suffix` of the commodity.
leaf|boolean|false|Whether this commodity is a `leaf`.
goods_nomenclature_sid|integer|false|The `goods_nomenclature_sid` of the commodity. This is a unique identifier.
parent_sid|string|false|The `parent_sid` of the commodity.

## ReferencedCommodity

<a name="schemareferencedcommodity"></a>

A commodity object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "producline_suffix": "80",
  "description": "Pure-bred breeding animals",
  "number_indents": 2,
  "goods_nomenclature_item_id": "0101210000",
  "bti_url": "http://ec.europa.eu/taxation_customs/dds2/ebti/ebti_consultation.jsp?Lang=en&nomenc=0101210000&Expand=true",
  "formatted_description": "Pure-bred breeding animals",
  "description_plain": "Pure-bred breeding animals",
  "consigned": false,
  "consigned_from": null,
  "basic_duty_rate": "<span title='0.0 '>0.00</span> %",
  "meursing_code": false,
  "declarable": true
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
basic_duty_rate|string|false|Formatted duty expression of the commodity.
bti_url|string|false|a URL for more information about this commodity.
consigned|boolean|false|Whether this commodity is `consigned`.
consigned_from|string|false|Consigned from.
declarable|boolean|false|Whether this commodity is `declarable`.
description|string|false|The `description` of the commodity.
description_plain|string|false|The `description_plain` of the commodity.
formatted_description|string|false|The `formatted_description` of the commodity, which may be suitable for presentation to the end user.
goods_nomenclature_item_id|string|false|The `goods_nomenclature_item_id` of the commodity (i.e. the 10-digit commodity code)
meursing_code|boolean|false|Whether this commodity is `meursing_code`.
number_indents|integer|false|The `number_indents` of the commodity.
producline_suffix|string|false|The `producline_suffix` of the commodity.

## ReferencedMeasure

<a name="schemareferencedmeasure"></a>

A measure object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": 2982263,
  "origin": "eu",
  "effective_start_date": "2008-01-01T00:00:00.000Z",
  "effective_end_date": null,
  "import": true,
  "excise": false,
  "vat": false,
  "reduction_indicator": null
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|string|false|The `id` of the measure.
origin|string|false|The `origin` of the measure.
effective_start_date|string|false|The `effective_start_date` of the measure.
effective_end_date|string|false|The `effective_end_date` of the measure.
import|boolean|false|The `import` flag of the measure.
excise|boolean|false|The `excise` flag of the measure.
vat|boolean|false|The `vat` flag of the measure.
reduction_indicator|integer|false|The reduction indicator is used to match a preferential duty with a Meursing additional code duty. Can be an integer or null.

## ReferencedMeasureCondition

<a name="schemareferencedmeasurecondition"></a>

A measure condition object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": "20060275",
  "type": "measure_condition",
  "attributes": {
    "action": "Import/export allowed after control",
    "action_code": "29",
    "certificate_description": "Common Health Entry Document ...",
    "condition": "B: Presentation of a certificate/licence/document",
    "condition_code": "B",
    "condition_duty_amount": null,
    "condition_measurement_unit_code": null,
    "condition_measurement_unit_qualifier_code": null,
    "condition_monetary_unit_code": null,
    "document_code": "N853",
    "duty_expression": "",
    "guidance_cds": "Enter GBCHDyyyy. and the reference number of the CHED-P.",
    "measure_condition_class": "document",
    "monetary_unit_abbreviation": null,
    "requirement": "UN/EDIFACT certificates: Common Health Entry Document ..."
  },
  "relationships": {
    "measure_condition_components": {
      "data": []
    }
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|string|false|The `id` of the measure condition.
type|string|false|the type of object, i.e. `measure_condition`
action|string|false|The measure action code description - see [Measure actions](#get-measure-actions) for examples
action_code|string|false|The measure action code - see [Measure actions](#get-measure-actions) for examples
certificate_description|string|false|where the condition requires a document code, this is the description of that certifcate / document (inclusive of waivers); omits the certificate type description
condition|string|false|condition code description - see [Measure condition codes](#get-measure-condition-codes) for examples
condition_code|string|false|condition code - see [Measure condition codes](#get-measure-condition-codes) for examples
condition_duty_amount|string|false|duty threshold, if required (e.g. for Entry Price System) or weight / volume threshold
condition_measurement_unit_code|string|false|duty threshold or weight / volume measurement unit
condition_measurement_unit_qualifier_code|string|false|duty threshold or weight / volume measurement qualifier unit
condition_monetary_unit_code|string|false|condition monetary unit code
document_code|string|false|the 4-character document code, if required
duty_expression|string|false|combination of any measure condition components (if present)
guidance_cds|string|false|Appendix 5a guidance for data entry in CDS
measure_condition_class|string|false|Class of condition: document or exemption or threshold
monetary_unit_abbreviation|string|false|Abbreviation of monetary unit
requirement|string|false|Either the document code or the threshold requirement

## ReferencedAdditionalCode

<a name="schemareferencedadditionalcode"></a>

An additional_code object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "additional_code_type_id": "C",
  "additional_code": "371",
  "code": "C371",
  "description": "Shanghai Huayi Group Corp. Ltd Double Coin Group (Jiang Su) Tyre Co., Ltd",
  "formatted_description": "Shanghai Huayi Group Corp. Ltd Double Coin Group (Jiang Su) Tyre Co., Ltd"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
additional_code_type_id|string|false|The `additional_code_type_id` for the additional_code.
additional_code|string|false|The `additional_code` for the additional_code.
code|string|false|The `code` for the additional_code. Equal to `additional_code_type_id + additional_code`
description|string|false|The `description` for the additional_code.
formatted_description|string|false|The `formatted_description` for the additional_code.

## ReferencedAdditionalCodeType

<a name="schemareferencedadditionalcodetype"></a>

An additional_code_type object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "additional_code_type_id": "B",
  "description": "Refund for basic products"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
additional_code_type_id|string|false|The `additional_code_type_id` for the additional_code_type.
description|string|false|The `description` for the additional_code_type.

## ReferencedCertificate

<a name="schemareferencedcertificate"></a>

A certificate object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "certificate_type_code": "D",
  "certificate_code": "005",
  "description": "Commercial invoice within the framework of undertakings"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
certificate_type_code|string|false|The `certificate_type_code` for the certificate.
certificate_code|string|false|The `certificate_code` for the certificate.
description|string|false|The `description` for the certificate.

## ReferencedCertificateType

<a name="schemareferencedcertificatetype"></a>

An certificate type object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "certificate_type_code": "X",
  "description": "Export licence"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
additional_code_type_id|string|false|The `certificate_type_code` for the certificate_type.
description|string|false|The `description` for the certificate_type.

## ReferencedFootnote

<a name="schemareferencedfootnote"></a>

A footnote object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "code": "TN701",
  "description": "According to  the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it shall be prohibited to import into European Union goods originating in Crimea or Sevastopol.\n...",
  "formatted_description": "According to  the Council Regulation (EU) No 692/2014 (OJ L183, p. 9) it shall be prohibited to import into European Union goods originating in Crimea or Sevastopol.<br/>..."
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
code|string|false|The `code` for the footnote.
description|string|false|The `description` for the footnote.
formatted_description|string|false|The `formatted_description` for the footnote.

## ReferencedFootnoteType

<a name="schemareferencedfootnotetype"></a>

An footnote_type object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "footnote_type_id": "WR",
  "description": "Wine reference"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
additional_code_type_id|string|false|The `footnote_type_id` for the footnote_type.
description|string|false|The `description` for the footnote_type.

## ReferencedGeographicalArea

<a name="schemareferencedgeographicalarea"></a>

A geographical_area object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": "1011",
  "description": "ERGA OMNES",
  "geographical_area_id": "1011"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|string|false|The `id` of the geographical area.
description|string|false|The `type` of the geographical area.
geographical_area_id|string|false|The `geographical_area_id` of the geographical area.

## ReferencedDefinition

<a name="schemareferenceddefinition"></a>

A definition object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "quota_definition_sid": 12202,
  "quota_order_number_id": "091784",
  "initial_volume": "36300000.0",
  "validity_start_date": "2018-12-01T00:00:00.000Z",
  "validity_end_date": "2019-05-31T00:00:00.000Z",
  "status": "Open",
  "description": "Commission Regulation (EU) No 449/2010 amending Council Regulation (EC) No 747/2001 and repealing Regulations (EC) No 2276/2003 (EC) No 995/2005 (EC) No 1002/2007 and (EC) No 1455/2007",
  "balance": "36300000.0",
  "measurement_unit": "Kilogram (kg)",
  "monetary_unit": null,
  "measurement_unit_qualifier": null,
  "last_allocation_date": null,
  "suspension_period_start_date": null,
  "suspension_period_end_date": null,
  "blocking_period_start_date": null,
  "blocking_period_end_date": null
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
quota_definition_sid|integer|false|The `quota_definition_sid` of the definition. This is a unique identifier
quota_order_number_id|string|false|The `quota_order_number_id` of the definition.
initial_volume|string|false|The `initial_volume` of the definition.
validity_start_date|string(date-time)|false|The `validity_start_date` of the definition.
validity_end_date|string(date-time)|false|The `validity_end_date` of the definition.
status|string|false|The `status` of the definition.
description|string|false|The `description` of the definition.
balance|string|false|The `balance` of the definition.
measurement_unit|string|false|The `measurement_unit` of the definition.
monetary_unit|string|false|The `monetary_unit` of the definition.
measurement_unit_qualifier|string|false|The `measurement_unit_qualifier` of the definition.
last_allocation_date|string|false|The `last_allocation_date` of the definition.
suspension_period_start_date|string|false|The `suspension_period_start_date` of the definition.
suspension_period_end_date|string|false|The `suspension_period_end_date` of the definition.
blocking_period_start_date|string|false|The `blocking_period_start_date` of the definition.
blocking_period_end_date|string|false|The `blocking_period_end_date` of the definition.

## ReferencedGoodsNomenclature

<a name="schemareferencedgoodsnomenclature"></a>

A goods_nomenclature object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "goods_nomenclature_item_id": "0201000000",
  "goods_nomenclature_sid": 27810,
  "description": "Meat of bovine animals, fresh or chilled",
  "number_indents": 0,
  "productline_suffix": "80",
  "href": "/uk/api/headings/0201"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
goods_nomenclature_item_id|string|false|The `goods_nomenclature_item_id` of the goods nomenclature.
goods_nomenclature_sid|integer|false|The `goods_nomenclature_sid` of the goods nomenclature. This is a unique identifier.
description|string|false|The `description` of the goods nomenclature.
number_indents|integer|false|The `number_indents` of the goods nomenclature.
productline_suffix|string|false|The `productline_suffix` of the goods nomenclature.
href|string|false|The `href` of the goods nomenclature.

## ReferencedSearchReference

<a name="schemareferencedsearchreference"></a>

A search_reference object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "title": "cabinets, filing of base metal",
  "referenced_id": "8304",
  "referenced_class": "Heading",
  "productline_suffix": "80"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
title|string|false|The `title` of referenced object.
referenced_id|string|false|The `id` of the referenced object.
referenced_class|string|false|The `type` of the referenced object.
productline_suffix|string|false|The `producline_suffix` of the commodity.

## ChangesResponse

<a name="schemachangesresponse"></a>

A list of changes to goods nomenclature

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "106193",
      "type": "change",
      "attributes": {
        "goods_nomenclature_sid": 106193,
        "goods_nomenclature_item_id": "7606129292",
        "productline_suffix": "10",
        "end_line": false,
        "change_type": "commodity",
        "change_date": "2021-04-13"
      }
    },
    {
      "id": "125323",
      "type": "change",
      "attributes": {
        "goods_nomenclature_sid": 125323,
        "goods_nomenclature_item_id": "2204109100",
        "productline_suffix": "80",
        "end_line": true,
        "change_type": "commodity",
        "change_date": "2021-04-13"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data|[[Change](#schemachange)]|false|No description

## Change

<a name="schemachange"></a>

Indicates a change to a given goods nomenclature.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": "106193",
  "type": "change",
  "attributes": {
    "goods_nomenclature_sid": 106193,
    "goods_nomenclature_item_id": "7606129292",
    "productline_suffix": "10",
    "end_line": false,
    "change_type": "commodity",
    "change_date": "2021-04-13"
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|string|true|The id of the change within this response. This is always the `goods_nomenclature_sid` of the goods nomenclature that has changed.
type|string|true|Always 'change'.
attributes|[ChangeAttributes](#schemachangeattributes)|true|The changed goods nomenclature attributes.

## ChangeAttributes

<a name="schemachangeattributes"></a>

The changed goods nomenclature attributes

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "goods_nomenclature_sid": 106193,
  "goods_nomenclature_item_id": "7606129292",
  "productline_suffix": "10",
  "end_line": false,
  "change_type": "commodity",
  "change_date": "2021-04-13"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
goods_nomenclature_sid|integer|true|The `goods_nomenclature_sid` of the goods nomenclature. This is a unique identifier.
goods_nomenclature_item_id|string|true|The `goods_nomenclature_item_id` of the goods nomenclature.
productline_suffix|string|true|The `producline_suffix` of the commodity.
end_line|boolean|true|If the goods nomenclature is an end line commodity
change_type|string|true|Type of change. It can be one of [commodity, measure]
change_date|string(date)|true|Date of the change.

## QuotaOrderNumbers

<a name="schemaquotaordernumbers"></a>

List of quota order number

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "097014",
      "type": "quota_order_number",
      "attributes": {
        "quota_order_number_sid": "Supplementary unit import",
        "validity_end_date": "2021-08-01T00:00:00.000Z",
        "validity_start_date": "2022-07-31T00:00:00.000Z"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The unique `id` of the quota_order_number.
data:type|string|false|the type of object, i.e. `quota_order_number`
data:attributes|[ReferencedQuotaOrderNumber](#schemareferencedquotaordernumber)|false|The quota_order_number's attributes, as a [referenced quota_order_number object](/reference.html#referencedquotaordernumber "see referenced quota_order_number object")
data:relationships|object|false|Has One [ReferencedQuotaDefinition](/reference.html#referencedquotadefinition)

## ReferencedQuotaOrderNumber

<a name="schemareferencedquotaordernumber"></a>

A quota_order_number object referenced elsewhere.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "quota_order_number_sid": "2750",
  "validity_start_date": "2021-08-01T00:00:00.000Z",
  "validity_end_date": "2022-07-31T00:00:00.000Z"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
quota_order_number_sid|string|false|Unique identifier for quota_order_number.
validity_start_date|string(date-time)|false|The validity start date of the quota_order_number.
validity_end_date|string(date-time)|false|The validity end date of the quota_order_number.

## ReferencedQuotaDefinition

<a name="schemareferencedquotadefinition"></a>

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": "string",
  "type": "string"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|string|false|The unique `id` of the quota definition.
type|string|false|the type of object ('quota_definition')

## RulesOfOriginScheme

<a name="schemarulesoforiginscheme"></a>

A scheme of lower or preferential tariffs

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "eu",
      "type": "rules_of_origin_scheme",
      "attributes": {
        "scheme_code": "eu",
        "title": "UK / EU Trade and Co-operation Agreement",
        "countries": [
          "EU",
          "AT",
          "BE",
          "BG",
          "CY",
          "CZ",
          "DE",
          "DK",
          "EE",
          "ES",
          "FI",
          "FR",
          "GR",
          "HR",
          "HU",
          "IE",
          "IT",
          "LT",
          "LU",
          "LV",
          "MT",
          "NL",
          "PL",
          "PT",
          "RO",
          "SE",
          "SI",
          "SK",
          "SM",
          "AD"
        ],
        "footnote": null,
        "unilateral": null,
        "fta_intro": "### UK / EU Trade and Co-operation Agreement\n\nThe UK moved to trading based on a new Free Trade Agreement (FTA) - the Trade and Cooperation Agreement (TCA) between the UK and the EU.\n\nTo import / export tariff-free under the TCA, goods must meet the UK-EU preferential rules of origin. This means that there must be a qualifying level of processing in the country of export to access zero tariffs. This applies to EU origin goods imported and moving through the UK from a Member State to another EU Member State, as well as goods imported from the Rest of World.\n\nThese rules are set out in the TCA and determine the origin of goods based on where the products or materials (or inputs) used in their production come from. Their purpose is to ensure that preferential tariffs are only given to goods that originate in the UK or EU and not from third countries (those apart from UK and the EU Member States).\n\n#### Andorra and San Marino\nAndorra and San Marino are part of customs unions with the EU. The UK has agreed with the EU that all products originating in San Marino and all non-agricultural products (chapters 25-97) originating in Andorra are to be treated as originating in the EU under the UK-EU Trade and Cooperation Agreement as long as Andorra and San Marino apply to UK products the same preferences that the EU applies to them. These products benefit from zero tariffs, where they meet the relevant rules of origin. Trade with Andorra of agricultural products (chapters 01-24) is not in scope of the UK-EU Trade and Cooperation Agreement and takes place under WTO terms.",
        "introductory_notes": "### Note 1 - General principles\n\n1. This Annex sets out the general rules for the applicable requirements of Annex ORIG-2 \\[Product-specific rules of origin\\] as provided for in point (c) of Article ORIG 3(1) \\[General requirements\\] of this Agreement."
      },
      "relationships": {
        "rules": {
          "data": [
            {
              "id": "10000096",
              "type": "rules_of_origin_rule"
            }
          ]
        },
        "links": {
          "data": [
            {
              "id": "fd431ebe2833f8753e90e93cbbe64ef4",
              "type": "rules_of_origin_link"
            },
            {
              "id": "71ce11df10c4c03e61ce0702f3802ce7",
              "type": "rules_of_origin_link"
            }
          ]
        },
        "proofs": {
          "data": [
            {
              "id": "506eb2e258484e97bc25568b864c4fd0",
              "type": "rules_of_origin_proof"
            },
            {
              "id": "724fc25dcaf6a7d21e9015f065344a52",
              "type": "rules_of_origin_proof"
            }
          ]
        }
      }
    }
  ],
  "included": [
    {
      "id": "fd431ebe2833f8753e90e93cbbe64ef4",
      "type": "rules_of_origin_link",
      "attributes": {
        "text": "Check your goods meet the rules of origin",
        "url": "https://www.gov.uk/guidance/check-your-goods-meet-the-rules-of-origin"
      }
    },
    {
      "id": "71ce11df10c4c03e61ce0702f3802ce7",
      "type": "rules_of_origin_link",
      "attributes": {
        "text": "UK/EU and EAEC: Trade and Cooperation Agreement",
        "url": "https://www.gov.uk/government/publications/ukeu-and-eaec-trade-and-cooperation-agreement-ts-no82021"
      }
    },
    {
      "id": "506eb2e258484e97bc25568b864c4fd0",
      "type": "rules_of_origin_proof",
      "attributes": {
        "summary": "Statement on origin",
        "subtext": "",
        "url": "https://www.gov.uk/guidance/get-proof-of-origin-for-your-goods#origin-declaration"
      }
    },
    {
      "id": "724fc25dcaf6a7d21e9015f065344a52",
      "type": "rules_of_origin_proof",
      "attributes": {
        "summary": "Importer's knowledge",
        "subtext": "",
        "url": "https://www.gov.uk/guidance/get-proof-of-origin-for-your-goods#importers-knowledge"
      }
    },
    {
      "id": "10000096",
      "type": "rules_of_origin_rule",
      "attributes": {
        "id_rule": 10000096,
        "heading": "39.21-39.22",
        "description": "3921: Other plates, sheets, film, foil and strip, of plastics\n\n3922: Baths, shower-baths, wash-basins, bidets, lavatory pans, seats and covers, flushing cisterns and similar sanitary ware, of plastics",
        "rule": "A change from any other heading  - CTH;\nor\nMaximum of non-originating materials - MaxNOM 50% (EXW).{{EXW}}{{CTH}}"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
scheme_code|string|false|A code used to represent the scheme
title|string|false|The title of the scheme
footnote|string|false|A footnote of further information relating to the scheme
unilateral|boolean|false|Is the scheme unilateral or multilateral
fta_intro|string|false|Free trade agreement introductory text, in markdown format
introductory_notes|string|false|Introductory notes for the scheme, in markdown format
countries|[string]|false|A list of 2 letter country codes which the scheme applies to
rules|[[RulesOfOriginRule](#schemarulesoforiginrule)]|false|A collection of [product-specific rules](#rulesoforiginrule) a product must fulfil
links|[[RulesOfOriginLink](#schemarulesoforiginlink)]|false|A collection of [links](#rulesoforiginlink) with further information relating to the scheme
proofs|[[RulesOfOriginProof](#schemarulesoforiginproof)]|false|A collection of [proofs of origin](#rulesoforiginproof) necessary to claim preferential tariff treatment

## RulesOfOriginLink

<a name="schemarulesoforiginlink"></a>

A URL link for further information relating to a RulesOfOriginScheme

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "text": "Check your goods meet the rules of origin",
  "url": "https://www.gov.uk/guidance/check-your-goods-meet-the-rules-of-origin"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
text|string|false|A description of the link
url|string|false|The url for the link

## RulesOfOriginProof

<a name="schemarulesoforiginproof"></a>

A proof of origin necessary to claim preferential tariff treatment

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "summary": "Statement on origin",
  "subtext": "",
  "url": "https://www.gov.uk/guidance/get-proof-of-origin-for-your-goods#origin-declaration"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
summary|string|false|A summary description of the necessary proof of origin
subtext|string|false|Additional information relating to the necessary proof of origin
url|string|false|A URL linking to further information for the necessary proof of origin

## RulesOfOriginRule

<a name="schemarulesoforiginrule"></a>

A product-specific rule the product must fulfil to be considered originating from the origin location

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "heading": "39.21-39.22",
  "description": "3921: Other plates, sheets, film, foil and strip, of plastics\n\n3922: Baths, shower-baths, wash-basins, bidets, lavatory pans, seats and covers, flushing cisterns and similar sanitary ware, of plastics",
  "rule": "A change from any other heading  - CTH;\nor\nMaximum of non-originating materials - MaxNOM 50% (EXW).{{EXW}}{{CTH}}"
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
heading|string|false|The heading this rule applies to
description|string|false|The description of the heading this rule applies to
rule|string|false|The product-specific rule to be fulfilled, in markdown format

## MeasureConditionPermutationGroup

<a name="schemameasureconditionpermutationgroup"></a>

A group of measure condition permutations that represent the correct way of interpreting the Boolean relationships between the measure conditions associated with a measure.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": "20098001-n/a",
  "type": "measure_condition_permutation_group",
  "attributes": {
    "condition_code": "n/a"
  },
  "relationships": {
    "permutations": {
      "data": [
        {
          "id": "c9982ee465cf7dcc85a926f409a91f94",
          "type": "measure_condition_permutation"
        },
        {
          "id": "4d3b48c99972647c2f067a667703f311",
          "type": "measure_condition_permutation"
        },
        {
          "id": "2cbaf3625f27ae2236f643c9def204eb",
          "type": "measure_condition_permutation"
        }
      ]
    }
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|A unique 'id' for the measure condition permutation group, formed of two components: the unique ID of the referencing measure and the measure condition code applied to the referenced measure conditions. Where the value of this second component is 'n/a', this indicates that a 'complex measure' is being referenced with multiple condition code groups.
data:type|string|false|the type of object, i.e. `measure_condition_permutation_group`
data:attributes:condition_code|string|false|the condition code referenced in the permutation, or 'n/a' if multiple condition codes are referenced.
data:relationships:permutations|[[MeasureConditionPermutation](#schemameasureconditionpermutation)]|false|A collection of [measure condition permutation objects](/reference.html#measureconditionpermutation "see measure condition permutation object")

## MeasureConditionPermutation

<a name="schemameasureconditionpermutation"></a>

Contains references to one or two measure conditions. Where two conditions are referenced, this indicates that there is a requirement for the trader to fulfil both of the noted conditions, for example both supply a waiver and to not exceed a weight or volume threshold.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "id": "2cbaf3625f27ae2236f643c9def204eb",
  "type": "measure_condition_permutation",
  "relationships": {
    "measure_conditions": {
      "data": [
        {
          "id": "20060277",
          "type": "measure_condition"
        },
        {
          "id": "20060276",
          "type": "measure_condition"
        }
      ]
    }
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|A unique 'guid' for the measure condition permutation
data:type|string|false|the type of object, i.e. `measure_condition_permutation`
data:relationships:measure_conditions|[[ReferencedMeasureCondition](#schemareferencedmeasurecondition)]|false|A collection of referenced measure condition objects

## PreferenceCodes

<a name="schemapreferencecodes"></a>

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data:id": "string",
  "data:type": "string",
  "data:attributes": {
    "description": "string"
  }
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
data:id|string|false|The unique `id` of the preference_code.
data:type|string|false|the type of object, i.e. `preference_code`
data:attributes|object|false|A preference_code object

## ChemicalSubstance

<a name="schemachemicalsubstance"></a>

Contains details about a specific chemical substance.

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "0153778-6-30725",
      "type": "chemical_substance",
      "attributes": {
        "cus": "0153778-6",
        "goods_nomenclature_sid": 30725,
        "goods_nomenclature_item_id": "0712909090",
        "producline_suffix": "80",
        "name": "Spinacia oleracea, as dried vegetables",
        "cas_rn": "90131-25-2",
        "nomen": "INCI"
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|string|false|A unique id for the chemical substance (the concatenated CUS number and the internal goods nomenclature sid that this chemical row refers too.
type|string|false|The type of object, i.e., `chemical_substance`
attributes:cus|string|false|The EU CUS number
attributes:goods_nomenclature_sid|integer|false|The goods nomenclature sid field
attributes:goods_nomenclature_item_id|string|false|The goods nomenclature item id field
attributes:producline_suffix|string|false|The producline suffix
attributes:name|string|false|The name of the chemical substance
attributes:cas_rn|string|false|The international CAS number
attributes:nomen|string|false|The nomen field. This indicates which taxonomy the chemical substance originates

## SimplifiedProceduralCodeMeasure

<a name="schemasimplifiedproceduralcodemeasure"></a>

<details>
  <summary>Sample JSON</summary>
  <pre>
    <code>
{
  "data": [
    {
      "id": "1.10",
      "type": "simplified_procedural_code_measure",
      "attributes": {
        "validity_start_date": "2023-02-17",
        "validity_end_date": "2023-03-02",
        "duty_amount": 52.96,
        "goods_nomenclature_label": "New potatoes",
        "goods_nomenclature_item_ids": "0701905000",
        "monetary_unit_code": "GBP",
        "measurement_unit_code": "DTN",
        "measurement_unit_qualifier_code": null
      }
    }
  ]
}
    </code>
  </pre>
</details>

**Fields**

Name|Type|Required|Description
---|---|---|---|
id|string|true|The simplified procedural code of the measure
type|string|true|The type of object, i.e., `simplified_procedural_code_measure`
attributes:validity_start_date|string(date)|false|The start date of when the valuation is applicable
attributes:validity_end_date|string(date)|false|The end date after which the valuation is no longer applicable
attributes:duty_amount|number|false|The duty amount for the code
attributes:goods_nomenclature_label|string|false|The label for the goods nomenclature
attributes:goods_nomenclature_item_ids|string|false|The item ids for the goods nomenclature
attributes:monetary_unit_code|string|false|The monetary unit code for the measure
attributes:measurement_unit_code|string|false|The measurement unit code for the measure
attributes:measurement_unit_qualifier_code|string|false|The measurement unit qualifier code for the measure
